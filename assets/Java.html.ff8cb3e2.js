import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as l,a as n,b as t,d as s,e as p}from"./app.95807bc9.js";const i={},u=n("h1",{id:"\u65B0\u5B66\u56DB\u95EE",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u65B0\u5B66\u56DB\u95EE","aria-hidden":"true"},"#"),s(" \u65B0\u5B66\u56DB\u95EE")],-1),k=s("WHY\u3010\u4E0E\u524D\u4EE3\u4F18\u5316\u4E86\u4EC0\u4E48\uFF0C\u5F25\u8865\u4E86\u4EC0\u4E48\u7A7A\u767D\u3011\u7B51\u57FA\uFF0C"),r=n("strong",null,"\u8D8A\u6DF1\u8D8A\u7A33",-1),d=n("br",null,null,-1),m=s(" WHAT\u3010\u6846\u67B6\uFF0C\u601D\u7EF4\u5BFC\u56FE\uFF0C\u4E3B\u9898\u6846\u67B6\u3011\u5BB9\u5668\u3001\u5E76\u53D1\u3001IO\u3001NET\u3001JVM\u3001\u5176\u4ED6"),v=n("br",null,null,-1),b=s(" HOW\u3010\u5982\u4F55\u8BB0\u5FC6\uFF0C\u5B66\u4E60\u8D44\u6E90\u3011:"),h={href:"https://github.com/CyC2018%E3%80%81%E5%8D%9A%E5%AE%A2%E5%AE%8C%E5%96%84%E3%80%81%E4%B9%A6%E7%B1%8D%E6%B7%B1%E5%85%A5%E3%80%81ANKI%E7%A8%B3%E5%9B%BA%E3%80%81%E7%86%9F%E6%82%89%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84",target:"_blank",rel:"noopener noreferrer"},g=s("https://github.com/CyC2018\u3001\u535A\u5BA2\u5B8C\u5584\u3001\u4E66\u7C4D\u6DF1\u5165\u3001ANKI\u7A33\u56FA\u3001\u719F\u6089\u57FA\u7840\u6570\u636E\u7ED3\u6784"),f=n("br",null,null,-1),y=s(" LEVEL\u3010\u4E0D\u662F\u6BCF\u4E2A\u90FD\u5B66\u7CBE\u3011\u7CBE\u901A"),w=p('<h1 id="\u7EFC\u5408\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u7EFC\u5408\u95EE\u9898" aria-hidden="true">#</a> \u7EFC\u5408\u95EE\u9898</h1><h2 id="\u589E\u5F3Afor\u548C\u666E\u901Afor\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u589E\u5F3Afor\u548C\u666E\u901Afor\u533A\u522B" aria-hidden="true">#</a> \u589E\u5F3Afor\u548C\u666E\u901Afor\u533A\u522B\uFF1F</h2><p>\u200B \u9700\u8981\u5FAA\u73AF\u6570\u7EC4\u7ED3\u6784\u7684\u6570\u636E\u65F6\uFF0C\u5EFA\u8BAE\u4F7F\u7528\u666E\u901Afor\u5FAA\u73AF\uFF0C\u56E0\u4E3Afor\u5FAA\u73AF\u91C7\u7528\u4E0B\u6807\u8BBF\u95EE\uFF0C\u5BF9\u4E8E\u6570\u7EC4\u7ED3\u6784\u7684\u6570\u636E\u6765\u8BF4\uFF0C\u91C7\u7528\u4E0B\u6807\u8BBF\u95EE\u6BD4\u8F83\u597D\u3002\u9700\u8981\u5FAA\u73AF\u94FE\u8868\u7ED3\u6784\u7684\u6570\u636E\u65F6\uFF0C\u4E00\u5B9A\u4E0D\u8981\u4F7F\u7528\u666E\u901Afor\u5FAA\u73AF\uFF0C\u8FD9\u79CD\u505A\u6CD5\u5F88\u7CDF\u7CD5\uFF0C\u6570\u636E\u91CF\u5927\u7684\u65F6\u5019\u6709\u53EF\u80FD\u4F1A\u5BFC\u81F4\u7CFB\u7EDF\u5D29\u6E83\u3002for\u5FAA\u73AF\u662F\u968F\u673A\u8BFB\u53D6\uFF0C\u589E\u5F3Afor\u7684\u5E95\u5C42\u662F\u8FED\u4EE3\u5668\uFF0C\u5C5E\u4E8E\u987A\u5E8F\u8BFB\u53D6\u3002ArrayList\u5B9E\u73B0\u4E86RandomAccess\u6807\u8BB0\u6027\u63A5\u53E3\uFF0C\u53EF\u4EE5\u663E\u8457\u63D0\u5347\u968F\u673A\u8BFB\u53D6\u7684\u6548\u7387\uFF1B\u800Clinkedlist\u6CA1\u6709\u5B9E\u73B0RandomAccess\u63A5\u53E3\uFF0C\u968F\u673A\u8BFB\u53D6\u4F1A\u5F88\u6162</p><h1 id="\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> \u6570\u636E\u7ED3\u6784</h1>',4),S={id:"\u54C8\u5E0C",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#\u54C8\u5E0C","aria-hidden":"true"},"#",-1),C=s(),j={href:"https://www.bilibili.com/video/BV1LJ411W7dP?spm_id_from=333.999.0.0",target:"_blank",rel:"noopener noreferrer"},q=s("\u54C8\u5E0C"),B=n("p",null,[s("**\u6838\u5FC3\u7406\u8BBA\uFF1A**Hash\u4E5F\u79F0\u6563\u5217\u3001\u54C8\u5E0C\uFF0C\u5BF9\u5E94\u7684\u82F1\u6587\u90FD\u662FHash\u3002\u57FA\u672C\u539F\u7406\u5C31\u662F\u628A\u4EFB\u610F\u957F\u5EA6\u7684\u8F93\u5165\uFF0C\u901A\u8FC7Hash\u7B97\u6CD5\u53D8\u6210\u56FA\u5B9A\u957F\u5EA6\u7684\u8F93\u51FA\u3002\u8FD9\u4E2A\u6620\u5C04\u7684\u89C4\u5219\u5C31\u662F\u5BF9\u5E94\u7684Hash\u7B97\u6CD5\uFF0C\u800C\u539F\u59CB\u6570\u636E\u6620\u5C04\u540E\u7684\u4E8C\u8FDB\u5236\u4E32\u5C31\u662F\u54C8\u5E0C\u503C\u3002 "),n("strong",null,"Hash\u7684\u7279\u70B9\uFF1A"),s(" 1.hash\u503C\u4E0D\u53EF\u4EE5\u53CD\u5411\u63A8\u5BFC\u51FA\u539F\u59CB\u7684\u6570\u636E 2.\u8F93\u5165\u6570\u636E\u7684\u5FAE\u5C0F\u53D8\u5316\u4F1A\u5F97\u5230\u5B8C\u5168\u4E0D\u540C\u7684hash\u503C\uFF0C\u76F8\u540C\u7684\u6570\u636E\u4F1A\u5F97\u5230\u76F8\u540C\u7684\u503C 3.\u54C8\u5E0C\u7B97\u6CD5\u7684\u6267\u884C\u6548\u7387\u8981\u9AD8\u6548\uFF0C\u957F\u7684\u6587\u672C\u4E5F\u80FD\u5FEB\u901F\u5730\u8BA1\u7B97\u51FA\u54C8\u5E0C\u503C 4.hash\u7B97\u6CD5\u7684\u51B2\u7A81\u6982\u7387\u8981\u5C0F \u7531\u4E8Ehash\u7684\u539F\u7406\u662F\u5C06\u8F93\u5165\u7A7A\u95F4\u7684\u503C\u6620\u5C04\u6210hash\u7A7A\u95F4\u5185\uFF0C\u800Chash\u503C\u7684\u7A7A\u95F4\u8FDC\u5C0F\u4E8E\u8F93\u5165\u7684\u7A7A\u95F4\u3002\u6839\u636E\u62BD\u5C49\u539F\u7406\uFF0C\u4E00\u5B9A\u4F1A\u5B58\u5728\u4E0D\u540C\u7684\u8F93\u5165\u88AB\u6620\u5C04\u6210\u76F8\u540C\u8F93\u51FA\u7684\u60C5\u51B5\u3002"),n("strong",null,"\u62BD\u5C49\u539F\u7406"),s("\uFF1A\u684C\u4E0A\u6709\u5341\u4E2A\u82F9\u679C\uFF0C\u8981\u628A\u8FD9\u5341\u4E2A\u82F9\u679C\u653E\u5230\u4E5D\u4E2A\u62BD\u5C49\u91CC\uFF0C\u65E0\u8BBA\u600E\u6837\u653E\uFF0C\u6211\u4EEC\u4F1A\u53D1\u73B0\u81F3\u5C11\u4F1A\u6709\u4E00\u4E2A\u62BD\u5C49\u91CC\u9762\u653E\u4E0D\u5C11\u4E8E\u4E24\u4E2A\u82F9\u679C\uFF0C\u8FD9\u4E00\u73B0\u8C61\u5C31\u662F\u6211\u4EEC\u6240\u8BF4\u7684\u62BD\u5C49\u539F\u7406\u3002")],-1),E={id:"\u7EA2\u9ED1\u6811",tabindex:"-1"},T=n("a",{class:"header-anchor",href:"#\u7EA2\u9ED1\u6811","aria-hidden":"true"},"#",-1),I=s(),F={href:"https://www.cnblogs.com/skywang12345/p/3245399.html",target:"_blank",rel:"noopener noreferrer"},A=s("\u7EA2\u9ED1\u6811"),_=p("<p>R-B Tree\uFF0C\u5168\u79F0\u662FRed-Black Tree\uFF0C\u53C8\u79F0\u4E3A\u201C\u7EA2\u9ED1\u6811\u201D\uFF0C\u5B83\u4E00\u79CD\u7279\u6B8A\u7684\u4E8C\u53C9\u67E5\u627E\u6811\u3002\u7EA2\u9ED1\u6811\u7684\u6BCF\u4E2A\u8282\u70B9\u4E0A\u90FD\u6709\u5B58\u50A8\u4F4D\u8868\u793A\u8282\u70B9\u7684\u989C\u8272\uFF0C\u53EF\u4EE5\u662F\u7EA2(Red)\u6216\u9ED1(Black)\u3002</p><p><strong>\u7EA2\u9ED1\u6811\u7684\u7279\u6027</strong>: <strong>\uFF081\uFF09\u6BCF\u4E2A\u8282\u70B9\u6216\u8005\u662F\u9ED1\u8272\uFF0C\u6216\u8005\u662F\u7EA2\u8272\u3002</strong><strong>\uFF082\uFF09\u6839\u8282\u70B9\u662F\u9ED1\u8272\u3002</strong><strong>\uFF083\uFF09\u6BCF\u4E2A\u53F6\u5B50\u8282\u70B9\uFF08NIL\uFF09\u662F\u9ED1\u8272\u3002 [\u6CE8\u610F\uFF1A\u8FD9\u91CC\u53F6\u5B50\u8282\u70B9\uFF0C\u662F\u6307\u4E3A\u7A7A(NIL\u6216NULL)\u7684\u53F6\u5B50\u8282\u70B9\uFF01]</strong><strong>\uFF084\uFF09\u5982\u679C\u4E00\u4E2A\u8282\u70B9\u662F\u7EA2\u8272\u7684\uFF0C\u5219\u5B83\u7684\u5B50\u8282\u70B9\u5FC5\u987B\u662F\u9ED1\u8272\u7684\u3002</strong><strong>\uFF085\uFF09\u4ECE\u4E00\u4E2A\u8282\u70B9\u5230\u8BE5\u8282\u70B9\u7684\u5B50\u5B59\u8282\u70B9\u7684\u6240\u6709\u8DEF\u5F84\u4E0A\u5305\u542B\u76F8\u540C\u6570\u76EE\u7684\u9ED1\u8282\u70B9\u3002</strong></p><p><strong>\u6CE8\u610F</strong>\uFF1A (01) \u7279\u6027(3)\u4E2D\u7684\u53F6\u5B50\u8282\u70B9\uFF0C\u662F\u53EA\u4E3A\u7A7A(NIL\u6216null)\u7684\u8282\u70B9\u3002 (02) \u7279\u6027(5)\uFF0C\u786E\u4FDD\u6CA1\u6709\u4E00\u6761\u8DEF\u5F84\u4F1A\u6BD4\u5176\u4ED6\u8DEF\u5F84\u957F\u51FA\u4FE9\u500D\u3002\u56E0\u800C\uFF0C\u7EA2\u9ED1\u6811\u662F\u76F8\u5BF9\u662F\u63A5\u8FD1\u5E73\u8861\u7684\u4E8C\u53C9\u6811\u3002</p><p>\u7EA2\u9ED1\u6811\u793A\u610F\u56FE\u5982\u4E0B\uFF1A</p>",4),O={href:"https://images0.cnblogs.com/i/497634/201403/251730074203156.jpg",target:"_blank",rel:"noopener noreferrer"},P=n("img",{src:"https://images0.cnblogs.com/i/497634/201403/251730074203156.jpg",alt:"img",loading:"lazy"},null,-1),N=n("h1",{id:"\u5982\u4F55\u9605\u8BFB\u6E90\u7801",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5982\u4F55\u9605\u8BFB\u6E90\u7801","aria-hidden":"true"},"#"),s(" \u5982\u4F55\u9605\u8BFB\u6E90\u7801\uFF1F")],-1),D=n("h2",{id:"\u65B9\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u65B9\u6CD5","aria-hidden":"true"},"#"),s(" \u65B9\u6CD5\uFF1A")],-1),L=n("p",null,"1.\u5B9E\u8DF5\u65AD\u70B9",-1),M=n("p",null,[s("2.\u987A\u5E8F\uFF1A\u63A5\u53E3"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"\u27F6")]),n("annotation",{encoding:"application/x-tex"},"\\longrightarrow")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.522em","vertical-align":"-0.011em"}}),n("span",{class:"mrel"},"\u27F6")])])]),s("\u5B9E\u73B0\u7C7B\uFF08(\u65B9\u6CD5\u3010\u5C5E\u6027--\u300B\u5224\u65AD\u3011)\u6784\u9020\u5668\u65B9\u6CD5"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"\u27F6")]),n("annotation",{encoding:"application/x-tex"},"\\longrightarrow")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.522em","vertical-align":"-0.011em"}}),n("span",{class:"mrel"},"\u27F6")])])]),s("\u5E38\u7528\u65B9\u6CD5"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"\u27F6")]),n("annotation",{encoding:"application/x-tex"},"\\longrightarrow")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.522em","vertical-align":"-0.011em"}}),n("span",{class:"mrel"},"\u27F6")])])]),s("\u5176\u4ED6\u65B9\u6CD5\uFF09")],-1),R=p('<p>3.\u5DE5\u5177\uFF1AIDEA \u7684 Diagram \u56FE\u6807\u5316\u67E5\u770B\u7EE7\u627F\u7ED3\u6784\uFF0C\u6240\u6709\u7C7B\u7684\u6240\u6709\u7ED3\u6784\uFF0C\u53CC\u51FB\u8DF3\u8F6C\u5BF9\u5E94\u7C7B.\u5DE6\u4E0B\u89D2Structure\u67E5\u770B\u7C7B\u7ED3\u6784\u3002ctrl+H\u67E5\u770B\u7EE7\u627F\u6811\u3002</p><p><img src="http://qnimg.gisfsde.com/work/image-20211117195911086.png" alt="Diagrams\u67E5\u770B\u7EE7\u627F\u7ED3\u6784" loading="lazy"></p><p><img src="http://qnimg.gisfsde.com/work/image-20211201212457843.png" alt="image-20211201212457843" loading="lazy"></p><p>4.\u6CE8\u91CA\uFF1A\u67E5\u770B\u6CE8\u91CA</p><p>5.\u5FEB\u6377\u952E\uFF1A</p><p>6.\u6839\u636E\u5DF2\u77E5\u770B\u672A\u77E5\uFF1A\u6BD4\u5982\u5DF2\u77E5\u5E95\u5C42\u770B\u6E90\u7801\uFF0C\u7EBF\u7A0B\u5B89\u5168\u770B\u539F\u7406</p><h2 id="\u9879\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9879\u76EE" aria-hidden="true">#</a> \u9879\u76EE</h2><h2 id="jdk" tabindex="-1"><a class="header-anchor" href="#jdk" aria-hidden="true">#</a> JDK</h2>',8),V=s("\u5E38\u7528\u5305\uFF1A\u3010"),K={href:"http://java.io",target:"_blank",rel:"noopener noreferrer"},J=s("java.io"),z=s(" java.lang "),H=n("strong",null,"java.util",-1),U=s("\u3011"),Q=s("\u3010java.lang.reflect "),W={href:"http://java.net",target:"_blank",rel:"noopener noreferrer"},X=s("java.net"),Y=s(),G={href:"http://javax.net",target:"_blank",rel:"noopener noreferrer"},Z=s("javax.net"),$=s(".* java.nio.* java.util.concurrent."),nn=n("em",null,"\u3011",-1),sn=p('<h2 id="\u6846\u67B6" tabindex="-1"><a class="header-anchor" href="#\u6846\u67B6" aria-hidden="true">#</a> \u6846\u67B6</h2><h1 id="\u5BB9\u5668" tabindex="-1"><a class="header-anchor" href="#\u5BB9\u5668" aria-hidden="true">#</a> \u5BB9\u5668</h1><h2 id="\u5B66\u4E60\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5B66\u4E60\u6D41\u7A0B" aria-hidden="true">#</a> \u5B66\u4E60\u6D41\u7A0B</h2><h3 id="\u8FDB\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u5EA6" aria-hidden="true">#</a> \u8FDB\u5EA6\uFF1A</h3>',4),an=n("p",null,[n("s",null,"collection"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"\u27F6")]),n("annotation",{encoding:"application/x-tex"},"\\longrightarrow")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.522em","vertical-align":"-0.011em"}}),n("span",{class:"mrel"},"\u27F6")])])]),n("s",null,"list"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"\u27F6")]),n("annotation",{encoding:"application/x-tex"},"\\longrightarrow")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.522em","vertical-align":"-0.011em"}}),n("span",{class:"mrel"},"\u27F6")])])]),n("s",null,"set"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"\u27F6")]),n("annotation",{encoding:"application/x-tex"},"\\longrightarrow")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.522em","vertical-align":"-0.011em"}}),n("span",{class:"mrel"},"\u27F6")])])]),n("s",null,"map"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"\u27F6")]),n("annotation",{encoding:"application/x-tex"},"\\longrightarrow")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.522em","vertical-align":"-0.011em"}}),n("span",{class:"mrel"},"\u27F6")])])]),n("s",null,"queue")],-1),tn=n("h3",{id:"\u65B9\u6CD5-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u65B9\u6CD5-1","aria-hidden":"true"},"#"),s(" \u65B9\u6CD5\uFF1A")],-1),pn=n("p",null,[s("\u603B\u7ED3\u7279\u70B9"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"\u27F6")]),n("annotation",{encoding:"application/x-tex"},"\\longrightarrow")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.522em","vertical-align":"-0.011em"}}),n("span",{class:"mrel"},"\u27F6")])])]),s("\u6839\u636E\u7279\u70B9\u67E5\u770B\u6E90\u7801 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"\u27F6")]),n("annotation",{encoding:"application/x-tex"},"\\longrightarrow")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.522em","vertical-align":"-0.011em"}}),n("span",{class:"mrel"},"\u27F6")])])]),s("\u7B14\u8BB0")],-1),en=n("h2",{id:"\u603B\u7ED3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u603B\u7ED3","aria-hidden":"true"},"#"),s(" \u603B\u7ED3")],-1),on={id:"\u603B\u5173\u7CFB\u56FE",tabindex:"-1"},cn=n("a",{class:"header-anchor",href:"#\u603B\u5173\u7CFB\u56FE","aria-hidden":"true"},"#",-1),ln=s(),un={href:"https://img-blog.csdn.net/20160124221843905",target:"_blank",rel:"noopener noreferrer"},kn=s("\u603B\u5173\u7CFB\u56FE"),rn=p(`<p><img src="http://qnimg.gisfsde.com/work/image-20210728134306985.png" alt="image-20210728134306985" loading="lazy"></p><img src="http://qnimg.gisfsde.com/work/image-20210607192537702.png" alt="image-20210607192537702" style="zoom:67%;"><h3 id="\u8868\u683C\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u8868\u683C\u603B\u7ED3" aria-hidden="true">#</a> \u8868\u683C\u603B\u7ED3</h3><table><thead><tr><th>\u96C6\u5408\u540D\u79F0</th><th>\u7ED3\u6784</th><th>\u662F\u5426\u53EF\u91CD\u590D</th><th>\u662F\u5426\u7EBF\u7A0B\u5B89\u5168</th><th>\u662F\u5426\u53EF\u4E3A\u7A7A</th><th>\u662F\u5426\u6709\u5E8F</th><th>\u6269\u5BB9\u500D\u6570</th><th>\u589E</th><th>\u5220</th><th>\u6539</th><th>\u67E5</th></tr></thead><tbody><tr><td><strong>List</strong></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><a href="#Vector">Vector</a></td><td>\u52A8\u6001\u6570\u7EC4\u3010Object [ ] \u3011</td><td>\u53EF\u91CD</td><td><strong>\u5B89</strong></td><td>\u591A\u7A7A\u5171\u5B58</td><td>\u6709\u5E8F</td><td>2</td><td></td><td></td><td></td><td></td></tr><tr><td><a href="#ArrayList">ArrayList</a></td><td>\u52A8\u6001\u6570\u7EC4\u3010Object [ ] \u3011</td><td>\u53EF\u91CD</td><td>\u4E0D\u5B89</td><td>\u591A\u7A7A\u5171\u5B58</td><td>\u6709\u5E8F</td><td><strong>1.5</strong></td><td>\u5C3E\u{1F49A}</td><td>\u5C3E\u{1F49A}</td><td></td><td>\u{1F49A}</td></tr><tr><td><a href="#LinkedList">LinkedList</a></td><td>\u53CC\u5411\u5FAA\u73AF\u94FE\u8868</td><td>\u53EF\u91CD</td><td>\u4E0D\u5B89</td><td>\u591A\u7A7A\u5171\u5B58</td><td>\u6709\u5E8F</td><td><strong>\u94FE\u8868\u65E0</strong></td><td>\u{1F49A}</td><td>\u{1F49A}</td><td></td><td></td></tr><tr><td><strong>Set</strong></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><a href="#TreeSet">TreeSet</a></td><td>\u7EA2\u9ED1\u6811\u3010red-black tree\u3011</td><td>\u4E0D\u91CD</td><td>\u4E0D\u5B89</td><td>\u9ED8\u8BA4\u975E\u7A7A\uFF0C\u81EA\u5B9A\u4E49\u5B9E\u73B0Comparator\u63A5\u53E3\u53EF\u5B58\u50A8null</td><td>\u6709\u5E8F</td><td><strong>\u7EA2\u9ED1\u6811\u65E0</strong></td><td></td><td></td><td></td><td>O(logN)</td></tr><tr><td><a href="#HashSet">HashSet</a></td><td>\u54C8\u5E0C\u8868\u3010HashMap\u3011</td><td>\u4E0D\u91CD</td><td>\u4E0D\u5B89</td><td>\u591A\u7A7A\u5355\u5B58</td><td>\u65E0\u5E8F</td><td>2</td><td>\u{1F49A}</td><td></td><td></td><td>O(1)\u{1F49A}</td></tr><tr><td><a href="#LinkedHashSet">LinkedHashSet</a></td><td>\u53CC\u5411\u94FE\u8868\u3010LinkedHashMap\u3011</td><td>\u4E0D\u91CD</td><td>\u4E0D\u5B89</td><td>\u591A\u7A7A\u5355\u5B58</td><td>\u6709\u5E8F</td><td>2</td><td></td><td></td><td></td><td></td></tr><tr><td><strong>Map</strong></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><a href="#HashMap">HashMap</a></td><td>\u6570\u7EC4+\u94FE\u8868\uFF081.8\u4E4B\u540E\u94FE\u8868\u957F\u5EA6\u5927\u4E8E\u9ED8\u8BA48\u4E14\u6570\u7EC4\u957F\u5EA6\u5927\u4E8E64\u8F6C\u6362\u4E3A<strong>\u7EA2\u9ED1\u6811</strong>\uFF09\uFF0C\u6563\u5217\uFF08\u54C8\u5E0C\uFF09\u8868</td><td>\u503C\u53EF\u91CD</td><td>\u4E0D\u5B89</td><td>\u591A\u7A7A\u952E\u503C\u6216\u5355\u7A7A\u952E\u6216\u503C</td><td>\u65E0\u5E8F</td><td>2</td><td></td><td></td><td></td><td></td></tr><tr><td><a href="#TreeMap">TreeMap</a></td><td>\u7EA2\u9ED1\u6811\uFF08\u81EA\u5E73\u8861\u7684\u6392\u5E8F\u4E8C\u53C9\u6811\uFF09</td><td>\u503C\u53EF\u91CD</td><td>\u4E0D\u5B89</td><td><strong>\u53EF\u503C\u7A7A\u5171\u5B58</strong></td><td>\u6709\u5E8F</td><td><strong>\u7EA2\u9ED1\u6811\u65E0</strong></td><td></td><td></td><td></td><td></td></tr><tr><td><a href="#LinkedHashMap">LinkedHashMap</a></td><td>\u5E95\u5C42\u54C8\u5E0C\u8868+\u53CC\u5411\u94FE\u8868\uFF0C<strong>HashMap\u5B50\u7C7B</strong></td><td>\u503C\u53EF\u91CD</td><td>\u4E0D\u5B89</td><td>\u591A\u7A7A\u952E\u503C\u6216\u5355\u7A7A\u952E\u6216\u503C</td><td>\u6709\u5E8F</td><td>2</td><td></td><td></td><td></td><td></td></tr><tr><td><a href="#ConcurrentHashMap">ConcurrentHashMap</a></td><td>1.8\u4E4B\u540E \u6570\u7EC4\u3001\u94FE\u8868/\u7EA2\u9ED1\u6811 \u9002\u5408\u591A\u7EBF\u7A0B</td><td>\u503C\u53EF\u91CD</td><td><strong>\u5B89</strong></td><td>\u975E\u7A7A</td><td></td><td>2</td><td></td><td></td><td></td><td></td></tr><tr><td>\u3010\u4FDD\u7559\u3011<a href="#Hashtable">Hashtable </a></td><td></td><td></td><td><strong>\u5B89</strong></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><strong>Queue</strong></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><a href="#PriorityQueue">PriorityQueue</a></td><td>\u4E8C\u53C9\u5C0F\u9876\u5806\uFF0C\u6BCF\u6B21\u53D6\u51FA\u6743\u503C\u6700\u5C0F\u5143\u7D20\uFF0C\u5148\u8FDB\u5148\u51FA</td><td></td><td>\u5B89</td><td>\u975E</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="collection" tabindex="-1"><a class="header-anchor" href="#collection" aria-hidden="true">#</a> Collection</h2><p>\u96C6\u5408\u6839\u63A5\u53E3\uFF0C\u5B9A\u4E49\u5B50\u7C7B\u57FA\u7840\u64CD\u4F5C</p><h3 id="\u904D\u5386\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u65B9\u5F0F" aria-hidden="true">#</a> <strong>\u904D\u5386\u65B9\u5F0F</strong></h3><p><strong>foreach</strong></p><p><strong>Iterator</strong></p><p><strong>listiterator</strong>:\u533A\u522B\uFF1AList\u4E13\u7528\u3001\u904D\u5386\u65F6\u53EF\u6DFB\u52A0\u5143\u7D20\u3001\u53EF\u9006\u5411\u904D\u5386\u3001\u53EF\u5B9A\u4F4D\u5F53\u524D\u7D22\u5F15\u4F4D\u7F6E\u3001\u53EF\u4FEE\u6539\u904D\u5386\u5BF9\u8C61\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Collection</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> persons <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Iterator</span> iterator <span class="token operator">=</span> persons<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>aggregate operations</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Collection</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> persons <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
persons
    <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token annotation punctuation">@Override</span>  
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Person</span> person<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u5728 JDK 8 \u4EE5\u540E\uFF0C\u63A8\u8350\u4F7F\u7528\u805A\u5408\u64CD\u4F5C\u5BF9\u4E00\u4E2A\u96C6\u5408\u8FDB\u884C\u64CD\u4F5C\u3002\u805A\u5408\u64CD\u4F5C\u901A\u5E38\u548C lambda \u8868\u8FBE\u5F0F\u7ED3\u5408\u4F7F\u7528\uFF0C\u8BA9\u4EE3\u7801\u770B\u8D77\u6765\u66F4\u7B80\u6D01\uFF08\u56E0\u6B64\u53EF\u80FD\u66F4\u96BE\u7406\u89E3\uFF09\u3002\u4E0B\u9762\u4E3E\u51E0\u4E2A\u7B80\u5355\u7684\u6817\u5B50\uFF1A</span>
<span class="token comment">//1.\u4F7F\u7528\u6D41\u6765\u904D\u5386\u4E00\u4E2A ShapesCollection\uFF0C\u7136\u540E\u8F93\u51FA\u7EA2\u8272\u7684\u5143\u7D20\uFF1A</span>
myShapesCollection<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>RED<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u4F60\u8FD8\u53EF\u4EE5\u83B7\u53D6\u4E00\u4E2A\u5E76\u884C\u6D41\uFF08parallelStream\uFF09\uFF0C\u5F53\u96C6\u5408\u5143\u7D20\u5F88\u591A\u65F6\u4F7F\u7528\u5E76\u53D1\u53EF\u4EE5\u63D0\u9AD8\u6548\u7387\uFF1A</span>
myShapesCollection<span class="token punctuation">.</span><span class="token function">parallelStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>RED<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         
<span class="token comment">//\u805A\u5408\u64CD\u4F5C\u8FD8\u6709\u5F88\u591A\u64CD\u4F5C\u96C6\u5408\u7684\u65B9\u6CD5\uFF0C\u6BD4\u5982\u8BF4\u4F60\u60F3\u628A Collection \u4E2D\u7684\u5143\u7D20\u90FD\u8F6C\u6210 String \u5BF9\u8C61\uFF0C\u7136\u540E\u628A\u5B83\u4EEC \u8FDE\u8D77\u6765\uFF1A</span>
<span class="token class-name">String</span> joined <span class="token operator">=</span> elements<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token operator">::</span><span class="token function">toString</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//Thanks:https://blog.csdn.net/u011240877/article/details/52773577</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="list" tabindex="-1"><a class="header-anchor" href="#list" aria-hidden="true">#</a> List</h2><blockquote><p>\u63D2\u5165\u6709\u5E8F\u53EF\u91CD\u53EF\u591A\u7A7A</p></blockquote><h3 id="vector" tabindex="-1"><a class="header-anchor" href="#vector" aria-hidden="true">#</a> <strong>Vector</strong></h3><p>\u5E95\u5C42\u6570\u7EC4\uFF0C\u540C\u6B65\uFF0C\u540C\u6B65\u8BA9\u5176\u6BD4AL\u6162\uFF0C\u5185\u5B58\u4E0D\u591F\u9ED8\u8BA4\u6269100%</p><table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u4E0E ArrayList \u76F8\u4F3C</td><td></td><td></td></tr><tr><td>\u7EBF\u7A0B\u5B89\u5168</td><td>\u65B9\u6CD5\u4E2D\u6709synchronized\uFF0C<strong>\u6240\u4EE5\u6027\u80FD\u4E0D\u5982ArrayList</strong></td><td></td></tr><tr><td>\u52A8\u6001\u6269\u5BB9\u4E3A\u539F\u6765\u76842\u500D</td><td><a href="#%E6%89%A9%E5%AE%B9%E4%B8%BA%E5%8E%9F%E6%9D%A5%E4%B8%A4%E5%80%8D">int newCapacity = oldCapacity + ((capacityIncrement &gt; 0) ? capacityIncrement : oldCapacity);</a></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="\u53EF\u6392\u5E8F\u6269\u5BB9\u4E3A\u539F\u6765\u4E24\u500D" tabindex="-1"><a class="header-anchor" href="#\u53EF\u6392\u5E8F\u6269\u5BB9\u4E3A\u539F\u6765\u4E24\u500D" aria-hidden="true">#</a> \u53EF\u6392\u5E8F\u6269\u5BB9\u4E3A\u539F\u6765\u4E24\u500D</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// overflow-conscious code</span>
        <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">//\u6269\u5BB9\u4E3A\u539F\u6765\u4E24\u500D</span>
        <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>capacityIncrement <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span>
                                         capacityIncrement <span class="token operator">:</span> oldCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> minCapacity \\<span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            newCapacity <span class="token operator">=</span> minCapacity<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> MAX_ARRAY_SIZE <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            newCapacity <span class="token operator">=</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="arraylist" tabindex="-1"><a class="header-anchor" href="#arraylist" aria-hidden="true">#</a> <strong>ArrayList</strong></h3><table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u5E95\u5C42\u6570\u7EC4</td><td>new Object[initialCapacity];</td><td></td></tr><tr><td>\u67E5\u4F18\uFF0C<strong>\u5C3E</strong>\u589E\u5220\u5FEB\uFF0C\u5176\u4ED6\u5730\u65B9\u589E\u5220\u6162</td><td>\u5E95\u5C42\u6570\u7EC4</td><td></td></tr><tr><td>\u52A8\u6001\u6269\u5BB9\u539F\u6765\u76841.5\u500D</td><td><a href="#%E5%8A%A8%E6%80%81%E6%89%A9%E5%AE%B9">int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1);</a></td><td></td></tr><tr><td>\u7EBF\u7A0B\u4E0D\u5B89\u5168</td><td>\u65B9\u6CD5\u4E2D\u6CA1\u6709synchronized&lt;br /&gt;/**This class is roughly equivalent to&lt;br/&gt; * &lt;tt&gt;Vector&lt;/tt&gt;, except that it is unsynchronized.*/</td><td></td></tr><tr><td>\u652F\u6301\u5FEB\u901F\u968F\u673A\u8BBF\u95EE</td><td>RandomAccess</td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="\u52A8\u6001\u6269\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u6269\u5BB9" aria-hidden="true">#</a> \u52A8\u6001\u6269\u5BB9</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * Increases the capacity to ensure that it can hold at least the
     * number of elements specified by the minimum capacity argument.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">minCapacity</span> the desired minimum capacity
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// overflow-conscious code</span>
        <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">//====== \u52A8\u6001\u6269\u5BB9\uFF1A\u4F4D\u8FD0\u7B97 &gt;&gt;\uFF1A\u53F3\u79FB\u8FD0\u7B97\u7B26  oldCapacity &gt;&gt; 1   ---\u300B   M &gt;&gt; n  = M / 2^n  \u5373\u6269\u5BB950%======</span>
        <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">+</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> minCapacity \\<span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            newCapacity <span class="token operator">=</span> minCapacity<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> MAX_ARRAY_SIZE <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            newCapacity <span class="token operator">=</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// minCapacity is usually close to size, so this is a win:</span>
        elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),dn=s("\u53C2\u8003\uFF1A\u4F4D\u8FD0\u7B97\uFF1A"),mn={href:"https://www.cnblogs.com/SunArmy/p/9837348.html",target:"_blank",rel:"noopener noreferrer"},vn=s("M >> n = M / 2^n"),bn=p(`<h5 id="\u603B\u7ED3-1" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3-1" aria-hidden="true">#</a> \u603B\u7ED3</h5><h3 id="linkedlist" tabindex="-1"><a class="header-anchor" href="#linkedlist" aria-hidden="true">#</a> <strong>LinkedList</strong></h3><table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u5E95\u5C42\u53CC\u5411\u94FE\u8868\uFF0C\u589E\u5220\u4F18\uFF0C\u53EF\u64CD\u4F5C\u5934\u5C3E\uFF0C\u7528\u4F5C\u6808\u3001\uFF08\u53CC\u5411\uFF09\u961F\u5217</td><td><a href="#%E5%BA%95%E5%B1%82%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8">\u5E95\u5C42\u53CC\u5411\u94FE\u8868</a></td><td></td></tr><tr><td>\u53EF\u63D2\u5165\u7A7A</td><td><a href="#%E5%BA%95%E5%B1%82%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8">\u5E95\u5C42\u53CC\u5411\u94FE\u8868</a></td><td></td></tr><tr><td>\u67E5\u8BE2\u6162</td><td><a href="#%E5%BA%95%E5%B1%82%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8">\u5E95\u5C42\u53CC\u5411\u94FE\u8868</a>\uFF0C\u4F1A\u904D\u5386\u6574\u4E2A\u94FE\u8868</td><td></td></tr><tr><td>\u7EBF\u7A0B\u4E0D\u5B89\u5168</td><td>\u65B9\u6CD5\u4E2D\u6CA1\u6709synchronized</td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="\u5E95\u5C42\u53CC\u5411\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42\u53CC\u5411\u94FE\u8868" aria-hidden="true">#</a> \u5E95\u5C42\u53CC\u5411\u94FE\u8868</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Returns the (non-null) Node at the specified element index.
     */</span>
    <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">node</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// assert isElementIndex(index);</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>index \\<span class="token operator">&lt;</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> first<span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
                x <span class="token operator">=</span> x<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token keyword">return</span> x<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> last<span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> index<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>
                x <span class="token operator">=</span> x<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
            <span class="token keyword">return</span> x<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
     * Inserts all of the elements in the specified collection into this
     * list, starting at the specified position.  Shifts the element
     * currently at that position (if any) and any subsequent elements to
     * the right (increases their indices).  The new elements will appear
     * in the list in the order that they are returned by the
     * specified collection&#39;s iterator.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">index</span> index at which to insert the first element
     *              from the specified collection
     * <span class="token keyword">@param</span> <span class="token parameter">c</span> collection containing elements to be added to this list
     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> if this list changed as a result of the call
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IndexOutOfBoundsException</span></span> <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the specified collection is null
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token class-name">Collection</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">checkPositionIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> numNew <span class="token operator">=</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>numNew <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> pred<span class="token punctuation">,</span> succ<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            succ <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            pred <span class="token operator">=</span> last<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            succ <span class="token operator">=</span> <span class="token function">node</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
            pred <span class="token operator">=</span> succ<span class="token punctuation">.</span>prev<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Object</span> o <span class="token operator">:</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span> <span class="token class-name">E</span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> o<span class="token punctuation">;</span>
            <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>pred<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>pred <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                first <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                pred<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
            pred <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>succ <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            last <span class="token operator">=</span> pred<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            pred<span class="token punctuation">.</span>next <span class="token operator">=</span> succ<span class="token punctuation">;</span>
            succ<span class="token punctuation">.</span>prev <span class="token operator">=</span> pred<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        size <span class="token operator">+=</span> numNew<span class="token punctuation">;</span>
        modCount<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u603B\u7ED3-2" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3-2" aria-hidden="true">#</a> \u603B\u7ED3</h4><p><strong>Stack</strong> \u540E\u8FDB\u5148\u51FA\u7684\u5806\u6808</p><hr><h2 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> Set</h2><blockquote><p>\u65E0\u5E8F\u4E0D\u91CD\u5355\u7A7A\uFF0C\u5E38\u7528\u4E8E\u53BB\u91CD</p></blockquote><h3 id="treeset" tabindex="-1"><a class="header-anchor" href="#treeset" aria-hidden="true">#</a> <strong>TreeSet</strong></h3><table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u5E95\u5C42TreeMap</td><td><a href="#%E5%BA%95%E5%B1%82%E3%80%81%E5%8F%AF%E6%8E%92%E5%BA%8F">\u5E95\u5C42\u3001\u53EF\u6392\u5E8F</a></td><td></td></tr><tr><td>\u53EF\u6392\u5E8F\u3010\u81EA\u7136\u6392\u5E8F\uFF0C\u5B9A\u5236\u6392\u5E8F\u3011</td><td><a href="#%E5%BA%95%E5%B1%82%E3%80%81%E5%8F%AF%E6%8E%92%E5%BA%8F">\u5E95\u5C42\u3001\u53EF\u6392\u5E8F</a></td><td></td></tr><tr><td>\u7EBF\u7A0B\u4E0D\u5B89\u5168</td><td>\u65B9\u6CD5\u4E2D\u6CA1\u6709synchronized</td><td></td></tr><tr><td>\u9ED8\u8BA4\u975E\u7A7A\uFF0C\u81EA\u5B9A\u4E49\u5B9E\u73B0Comparator\u63A5\u53E3\u53EF\u5B58\u50A8null</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="\u5E95\u5C42\u3001\u53EF\u6392\u5E8F\u5E95\u5C42\u3001\u53EF\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42\u3001\u53EF\u6392\u5E8F\u5E95\u5C42\u3001\u53EF\u6392\u5E8F" aria-hidden="true">#</a> \u5E95\u5C42\u3001\u53EF\u6392\u5E8F\u5E95\u5C42\u3001\u53EF\u6392\u5E8F</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">NavigableSet</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">SortedSet</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TreeSet</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractSet</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">NavigableSet</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// Integer\u80FD\u6392\u5E8F(\u6709\u9ED8\u8BA4\u987A\u5E8F), String\u80FD\u6392\u5E8F(\u6709\u9ED8\u8BA4\u987A\u5E8F)\uFF0C\u53EF\u4EE5\u5BF9\u5BF9\u8C61\u5143\u7D20\u8FDB\u884C\u6392\u5E8F\uFF0C\u4F46\u662F\u81EA\u5B9A\u4E49\u7C7B\u9700\u8981\u5B9E\u73B0comparable\u63A5\u53E3\uFF0C\u91CD\u5199comparaTo() \u65B9\u6CD5,\u5426\u5219\uFF1A{@code ClassCastException}\u62A5ClassCastException\u5F02\u5E38\u3002\u6240\u6709\u5143\u7D20\u5FC5\u987B\u53EF\u4EE5\u76F8\u4E92\u6BD4\u8F83\uFF08\u76F8\u540C\u7C7B\u578B\uFF09\uFF0C\u5426\u5219\u5C06\u4F1A\u62A5\u7C7B\u578B\u8F6C\u6362\u5F02\u5E38ClassCastExection</span>

    <span class="token doc-comment comment">/**
     * Constructs a new, empty tree set, sorted according to the
     * natural ordering of its elements.  All elements inserted into
     * the set must implement the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Comparable</span></span><span class="token punctuation">}</span> interface.
     * Furthermore, all such elements must be \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>mutually
     * comparable\\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>: <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">e1<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>e2<span class="token punctuation">)</span></span></span><span class="token punctuation">}</span> must not throw a
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">ClassCastException</span></span></span><span class="token punctuation">}</span> for any elements <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">e1</span></span><span class="token punctuation">}</span> and
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">e2</span></span><span class="token punctuation">}</span> in the set.  If the user attempts to add an element
     * to the set that violates this constraint (for example, the user
     * attempts to add a string element to a set whose elements are
     * integers), the <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">add</span></span><span class="token punctuation">}</span> call will throw a
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">ClassCastException</span></span></span><span class="token punctuation">}</span>.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">TreeSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TreeMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),hn={href:"https://www.cnblogs.com/ttqi/p/10948737.html",target:"_blank",rel:"noopener noreferrer"},gn=s("TreeSet\u7684\u6392\u5217\u987A\u5E8F\u4E0E\u91CD\u5199\u7684compareTo()\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u6709\u5173\u3002"),fn=p(`<p>return 0:\u5143\u7D20\u6BCF\u6B21\u8FDB\u884C\u6BD4\u8F83\uFF0C\u90FD\u8BA4\u4E3A\u662F\u76F8\u540C\u7684\u5143\u7D20\uFF0C\u8FD9\u662F\u5C31\u4E0D\u518D\u5411TreeSet\u91CC\u9762\u63D2\u5165\u9664\u7B2C\u4E00\u4E2A\u5143\u7D20\u4EE5\u5916\u7684\u5143\u7D20\uFF0C\u6240\u4EE5TreeSet\u4E2D\u5C31\u53EA\u63D2\u5165\u4E86\u4E00\u4E2A\u5143\u7D20\u3002</p><p>return 1:\u5143\u7D20\u6BCF\u6B21\u8FDB\u884C\u6BD4\u8F83\uFF0C\u90FD\u8BA4\u4E3A\u65B0\u63D2\u5165\u7684\u5143\u7D20\u6BD4\u4E0A\u4E00\u4E2A\u5143\u7D20\u5927\uFF0C\u4E8E\u662F\u4E8C\u53C9\u6811\u5B58\u50A8\u65F6\uFF0C\u4F1A\u50A8\u5B58\u5728\u6839\u7684\u53F3\u4FA7\uFF0C\u8BFB\u53D6\u65F6\u5C31\u662F\u6B63\u5E8F\u6392\u5217\uFF0C\u5148\u8FDB\u5148\u51FA\u3002</p><p>return -1:\u5143\u7D20\u6BCF\u6B21\u8FDB\u884C\u6BD4\u8F83\uFF0C\u90FD\u8BA4\u4E3A\u65B0\u63D2\u5165\u7684\u5143\u7D20\u6BD4\u4E0A\u4E00\u4E2A\u5143\u7D20\u5C0F\uFF0C\u4E8E\u662F\u4E8C\u53C9\u6811\u5B58\u50A8\u65F6\uFF0C\u4F1A\u50A8\u5B58\u5728\u6839\u7684\u5DE6\u4FA7\uFF0C\u8BFB\u53D6\u65F6\u5C31\u662F\u5012\u5E8F\u6392\u5217\uFF0C\u5148\u8FDB\u540E\u51FA\u3002</p><h3 id="hashset" tabindex="-1"><a class="header-anchor" href="#hashset" aria-hidden="true">#</a> <strong>HashSet</strong></h3><p>\u5B66\u4E60\u524D\u6700\u597D\u5148\u5B66\u4E60 <a href="#HashMap">HashMap</a></p><table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u5E95\u5C42HashMap</td><td><a href="#%E5%BA%95%E5%B1%82HashMap">\u5E95\u5C42HashMap</a></td><td></td></tr><tr><td>\u53EF\u5355\u7A7A</td><td>Map\u7684key\u552F\u4E00</td><td></td></tr><tr><td>\u5584\u5B58\u53D6</td><td>\u6563\u5217\u8868\u5B9A\u4F4D</td><td></td></tr><tr><td>\u65E0\u5E8F</td><td>\u6CA1\u7EE7\u627FSortedSet</td><td></td></tr><tr><td>\u4E0D\u5B89</td><td>\u65B9\u6CD5\u4E2D\u6CA1\u6709synchronized</td><td></td></tr><tr><td>\u4E0D\u91CD\u590D</td><td><a href="#%E4%B8%8D%E9%87%8D%E5%A4%8D">\u4E0D\u91CD\u590D</a></td><td></td></tr><tr><td>2\u500D\u6269\u5BB9</td><td>\u540Chashmap</td><td></td></tr></tbody></table><h4 id="\u5E95\u5C42hashmap" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42hashmap" aria-hidden="true">#</a> \u5E95\u5C42HashMap</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">HashMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">;</span>

    <span class="token comment">// Dummy value to associate with an Object in the backing Map</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> PRESENT <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token doc-comment comment">/**
 * Constructs a new set containing the elements in the specified
 * collection.  The \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">HashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> is created with default load factor
 * (0.75) and an initial capacity sufficient to contain the elements in
 * the specified collection.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">c</span> the collection whose elements are to be placed into this set
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the specified collection is null
 */</span>
<span class="token keyword">public</span> <span class="token class-name">HashSet</span><span class="token punctuation">(</span><span class="token class-name">Collection</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u521D\u59CB16\uFF0C\u52A0\u8F7D\u56E0\u5B500.75</span>
    map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">.75f</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">addAll</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//HashSet\u4E2D\u7684\u5143\u7D20\u90FD\u5B58\u653E\u5728HashMap\u7684key\u4E0A\u9762\uFF0C\u800Cvalue\u4E2D\u7684\u503C\u90FD\u662F\u7EDF\u4E00\u7684\u4E00\u4E2A\u56FA\u5B9A\u5BF9\u8C61private static final Object PRESENT = new Object();</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E0D\u91CD\u590D" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u91CD\u590D" aria-hidden="true">#</a> \u4E0D\u91CD\u590D</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Adds the specified element to this set if it is not already present.
     * More formally, adds the specified element \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">e\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> to this set if
     * this set contains no element \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">e2\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> such that
     * \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token punctuation">(</span>e<span class="token operator">==</span><span class="token keyword">null</span></span><span class="token entity named-entity" title="\xA0">&amp;nbsp;</span><span class="token code language-java"><span class="token operator">?</span></span><span class="token entity named-entity" title="\xA0">&amp;nbsp;</span><span class="token code language-java">e2<span class="token operator">==</span><span class="token keyword">null</span></span><span class="token entity named-entity" title="\xA0">&amp;nbsp;</span><span class="token code language-java"><span class="token operator">:</span></span><span class="token entity named-entity" title="\xA0">&amp;nbsp;</span><span class="token code language-java">e<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>e2<span class="token punctuation">)</span><span class="token punctuation">)</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>.
     * If this set already contains the element, the call leaves the set
     * unchanged and returns \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">false</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">e</span> element to be added to this set
     * <span class="token keyword">@return</span> \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">true</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> if this set did not already contain the specified
     * element
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> PRESENT<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
        <span class="token doc-comment comment">/**
     * Associates the specified value with the specified key in this map.
     * If the map previously contained a mapping for the key, the old
     * value is replaced.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> key with which the specified value is to be associated
     * <span class="token keyword">@param</span> <span class="token parameter">value</span> value to be associated with the specified key
     * <span class="token keyword">@return</span> the previous value associated with \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">key\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>, or
     *         \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> if there was no mapping for \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">key\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>.
     *         (A \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> return can also indicate that the map
     *         previously associated \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> with \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">key\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>.)
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
        <span class="token doc-comment comment">/**
     * Implements Map.put and related methods
     *
     * <span class="token keyword">@param</span> <span class="token parameter">hash</span> hash for key
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> the key
     * <span class="token keyword">@param</span> <span class="token parameter">value</span> the value to put
     * <span class="token keyword">@param</span> <span class="token parameter">onlyIfAbsent</span> if true, don&#39;t change existing value
     * <span class="token keyword">@param</span> <span class="token parameter">evict</span> if false, the table is in creation mode.
     * <span class="token keyword">@return</span> previous value, or null if none
     */</span>
    <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span>
                   <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                e <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// -1 for 1st</span>
                            <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                        <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    p <span class="token operator">=</span> e<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// existing mapping for key</span>
                <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent <span class="token operator">||</span> oldValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>size <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
            <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span>evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="linkedhashset" tabindex="-1"><a class="header-anchor" href="#linkedhashset" aria-hidden="true">#</a> <strong>LinkedHashSet</strong></h3><table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u5E95\u5C42\u94FE\u8868\u3010LinkedHashMap\u3011</td><td><a href="#%E5%BA%95%E5%B1%82">\u5E95\u5C42</a></td><td></td></tr><tr><td>\u4E0D\u5B89</td><td>\u65B9\u6CD5\u4E2D\u6CA1\u6709synchronized</td><td></td></tr><tr><td>\u63D2\u5165\u6709\u5E8F</td><td>LinkedHashSet\u5728\u904D\u5386\u65F6\u83B7\u5F97\u7684\u8FED\u4EE3\u5668\u662FLinkedHashSet\u6240\u5B9E\u73B0\u7684LinkedKeyIterator\uFF0C\u5B83\u7684\u904D\u5386\u662F\u4ECE\u53CC\u5411\u94FE\u8868\u5934\u5F00\u59CB\u987A\u5E8F\u904D\u5386\uFF0C\u5B9E\u73B0\u4E86\u6709\u5E8F\u8F93\u51FA\u3002</td><td></td></tr><tr><td>\u4E0D\u91CD\u590D</td><td>\u7C7B\u4F3C<a href="#%E4%B8%8D%E9%87%8D%E5%A4%8D">\u4E0D\u91CD\u590D</a></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="\u5E95\u5C42" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42" aria-hidden="true">#</a> \u5E95\u5C42</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>   <span class="token doc-comment comment">/**
     * Constructs a new linked hash set with the same elements as the
     * specified collection.  The linked hash set is created with an initial
     * capacity sufficient to hold the elements in the specified collection
     * and the default load factor (0.75).
     *
     * <span class="token keyword">@param</span> <span class="token parameter">c</span>  the collection whose elements are to be placed into
     *           this set
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the specified collection is null
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">LinkedHashSet</span><span class="token punctuation">(</span><span class="token class-name">Collection</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>c<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">.75f</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addAll</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedHashSet</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">extends</span> <span class="token class-name">HashSet</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">Set</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * Constructs a new, empty linked hash set.  (This package private
     * constructor is only used by LinkedHashSet.) The backing
     * HashMap instance is a LinkedHashMap with the specified initial
     * capacity and the specified load factor.
     *
     * <span class="token keyword">@param</span>      <span class="token parameter">initialCapacity</span>   the initial capacity of the hash map
     * <span class="token keyword">@param</span>      <span class="token parameter">loadFactor</span>        the load factor of the hash map
     * <span class="token keyword">@param</span>      <span class="token parameter">dummy</span>             ignored (distinguishes this
     *             constructor from other int, float constructor.)
     * <span class="token keyword">@throws</span>     <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if the initial capacity is less
     *             than zero, or if the load factor is nonpositive
     */</span>
    <span class="token class-name">HashSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">,</span> <span class="token keyword">boolean</span> dummy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">,</span> loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><blockquote><p>\u952E\u503C\u5BF9\uFF0C\u952E\u4E0D\u91CD</p></blockquote><h3 id="hashmap" tabindex="-1"><a class="header-anchor" href="#hashmap" aria-hidden="true">#</a> <strong>HashMap</strong></h3>`,17),yn=s("\u63A8\u8350\u8D44\u6E90\uFF1A"),wn={href:"https://blog.csdn.net/zxt0601/article/details/77413921",target:"_blank",rel:"noopener noreferrer"},Sn=s("\u535A\u5BA21"),xn=p(`<table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u5E95\u5C42\u4E3A<strong>\u6570\u7EC4</strong>\u79F0\u4E4B\u4E3A<strong>\u54C8\u5E0C\u6876</strong>\uFF0C\u6BCF\u4E2A<strong>\u6876\u91CC\u9762\u653E\u7684\u662F\u94FE\u8868</strong>\uFF0C\u94FE\u8868\u4E2D\u7684<strong>\u6BCF\u4E2A\u8282\u70B9</strong>\uFF0C\u5C31\u662F\u54C8\u5E0C\u8868\u4E2D\u7684<strong>\u6BCF\u4E2A\u5143\u7D20</strong>\u3002&lt;br/&gt;JDK8\u540E\uFF0C\u94FE\u8868\u5BB9\u91CF\u5927\u4E8E8\u4E14\u6876\u7684\u5BB9\u91CF\u5927\u4E8E64\uFF0C\u8F6C\u5316\u6210\u7EA2\u9ED1\u6811</td><td><a href="#%E5%BA%95%E5%B1%82">\u5E95\u5C42</a></td><td></td></tr><tr><td>\u7EBF\u7A0B\u4E0D\u5B89\u5168</td><td>\u65B9\u6CD5\u4E2D\u6CA1\u6709synchronized</td><td></td></tr><tr><td>\u9ED8\u8BA4\u957F\u5EA616</td><td><a href="#%E5%88%9D%E5%A7%8B%E5%AE%B9%E9%87%8F">\u521D\u59CB\u5BB9\u91CF</a></td><td></td></tr><tr><td>\u6269\u5BB9\u4E3A\u539F\u6765\u7684\u4E24\u500D</td><td><a href="#%E6%89%A9%E5%AE%B9">\u6269\u5BB9</a></td><td></td></tr><tr><td>\u65E0\u5E8F</td><td><a href="#%E6%97%A0%E5%BA%8F,%E5%8F%AF%E7%A9%BA">\u65E0\u5E8F,\u53EF\u7A7A</a></td><td></td></tr><tr><td>\u591A\u7A7A\u952E\u503C\u6216\u5355\u7A7A\u952E\u6216\u503C</td><td><a href="#%E6%97%A0%E5%BA%8F,%E5%8F%AF%E7%A9%BA">\u65E0\u5E8F,\u53EF\u7A7A</a></td><td></td></tr></tbody></table><h4 id="\u5E95\u5C42-1" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42-1" aria-hidden="true">#</a> \u5E95\u5C42</h4><img src="http://qnimg.gisfsde.com/work/image-20211206195158123.png" alt="image-20211206195158123" style="zoom:67%;"><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    
     <span class="token doc-comment comment">/** Node \u5355\u5411\u94FE\u8868
     * Basic hash bin node, used for most entries.  (See below for
     * TreeNode subclass, and in LinkedHashMap for its Entry subclass.)
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
        <span class="token class-name">V</span> value<span class="token punctuation">;</span>
        <span class="token comment">//\u78B0\u649E\u4E4B\u540E\u5F62\u6210\u94FE\u8868</span>
        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>

        <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>hash <span class="token operator">=</span> hash<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">K</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span> <span class="token keyword">return</span> key<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span> <span class="token keyword">return</span> value<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> key <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token class-name">V</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">V</span> oldValue <span class="token operator">=</span> value<span class="token punctuation">;</span>
            value <span class="token operator">=</span> newValue<span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>o<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    

    <span class="token doc-comment comment">/**\u7EA2\u9ED1\u6811
     * Entry for Tree bins. Extends LinkedHashMap.Entry (which in turn
     * extends Node) so can be used as extension of either regular or
     * linked node.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">;</span>  <span class="token comment">// red-black tree links</span>
        <span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> left<span class="token punctuation">;</span>
        <span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> right<span class="token punctuation">;</span>
        <span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">;</span>    <span class="token comment">// needed to unlink next upon deletion</span>
        <span class="token keyword">boolean</span> red<span class="token punctuation">;</span>
        <span class="token class-name">TreeNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> val<span class="token punctuation">,</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * Returns root of tree containing this node.
         */</span>
        <span class="token keyword">final</span> <span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">root</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> r <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> p<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> r<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> r<span class="token punctuation">;</span>
                r <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6269\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u6269\u5BB9" aria-hidden="true">#</a> \u6269\u5BB9</h4>`,5),Cn={href:"https://www.cnblogs.com/hongten/p/hongten_java_yiweiyunsuangfu.html",target:"_blank",rel:"noopener noreferrer"},jn=s("\u53C2\u8003"),qn=p(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>   <span class="token doc-comment comment">/** \u4E3A\u4EC0\u4E48\u9700\u8981\u6269\u5BB9\uFF1A\u54C8\u5E0C\u51B2\u7A81\u5BFC\u81F4\u7684\u94FE\u5316\u5F71\u50CF\u67E5\u627E\u6548\u7387\uFF0C\u6570\u7EC4\u4EE5\u7A7A\u95F4\u6362\u65F6\u95F4  
   \u7531power-of-two expansion  newCap = oldCap \\&lt;\\&lt; 1 \u53EF\u77E5\u6269\u5BB9\u4E3A\u539F\u6765\u7684\u4E24\u500D
		1010      \u5341\u8FDB\u5236\uFF1A10     \u539F\u59CB\u6570         number
		10100      \u5341\u8FDB\u5236\uFF1A20     \u5DE6\u79FB\u4E00\u4F4D       number = number \\&lt;\\&lt; 1;
	     1010      \u5341\u8FDB\u5236\uFF1A10     \u53F3\u79FB\u4E00\u4F4D       number = number &gt;&gt; 1;
   		\u5373	oldCap \\&lt;\\&lt; 1 \u5373\u4E8C\u8FDB\u5236\u5411\u5DE6\u79FB\u52A8\u4E24\u4F4D\uFF1AoldCap \\&lt;\\&lt; 1=oldCap*2
   			\u540C\u7406oldCap &gt;&gt; 1=oldCap/2
   			\u8865\u5145&gt;&gt;&gt;\uFF1A\u65E0\u7B26\u53F7\u53F3\u79FB\uFF0C\u5FFD\u7565\u7B26\u53F7\u4F4D\uFF0C\u7A7A\u4F4D\u90FD\u4EE50\u8865\u9F50
     * Initializes or doubles table size.  If null, allocates in
     * accord with initial capacity target held in field threshold.
     * Otherwise, because we are using power-of-two expansion, the
     * elements from each bin must either stay at same index, or move
     * with a power of two offset in the new table.
     *
     * <span class="token keyword">@return</span> the table
     */</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//oldTab\u6269\u5BB9\u524D\u54C8\u5E0C\u8868</span>
        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTab <span class="token operator">=</span> table<span class="token punctuation">;</span>
        <span class="token comment">//\u6269\u5BB9\u4E4B\u524D\u6570\u7EC4\u957F\u5EA6</span>
        <span class="token keyword">int</span> oldCap <span class="token operator">=</span> <span class="token punctuation">(</span>oldTab <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> oldTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">//\u6269\u5BB9\u4E4B\u524D\u7684\u9608\u503C\uFF0C\u89E6\u53D1\u672C\u6B21\u6269\u5BB9\u7684\u9608\u503C</span>
        <span class="token keyword">int</span> oldThr <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
        <span class="token comment">//\u6269\u5BB9\u4E4B\u540E\u7684\u6570\u7EC4\u5927\u5C0F</span>
        <span class="token comment">//\u4E0B\u6B21\u89E6\u53D1\u6269\u5BB9\u7684\u6761\u4EF6</span>
        <span class="token keyword">int</span> newCap<span class="token punctuation">,</span> newThr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6563\u5217\u8868\u5DF2\u521D\u59CB\u5316\uFF0C\u8FD9\u662F\u4E00\u6B21\u6B63\u5E38\u7684\u6269\u5BB9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u6269\u5BB9\u4E4B\u524D\u6570\u7EC4\u5927\u5C0F\u8FBE\u5230\u6700\u5927\u9608\u503C\uFF0C\u5219\u4E0D\u6269\u5BB9\u4E14\u8BBE\u6269\u5BB9\u6761\u4EF6\u4E3Aint\u6700\u5927\u503C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
                <span class="token keyword">return</span> oldTab<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//oldCap\u5DE6\u79FB\u4E00\u4F4D\u5B9E\u73B0\u6570\u503C\u7FFB\u500D\uFF0C\u5E76\u4E14\u590D\u5236\u7ED9newCap\uFF0CnewCap\u5C0F\u4E8E\u6700\u5927\u9650\u5236\u4E14\u6269\u5BB9\u4E4B\u524D\u7684\u6570\u7EC4\u957F\u5EA6 &gt;= 16</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newCap <span class="token operator">=</span> oldCap \\<span class="token operator">&lt;</span>\\<span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> \\<span class="token operator">&lt;</span> MAXIMUM_CAPACITY <span class="token operator">&amp;&amp;</span>
                     oldCap <span class="token operator">&gt;=</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span>
                newThr <span class="token operator">=</span> oldThr \\<span class="token operator">&lt;</span>\\<span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// double threshold</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//oldCap==0,\u8BF4\u660EHashMap\u4E2D\u7684\u6563\u5217\u8868\u662Fnull</span>
        <span class="token comment">//1.new HashMap\uFF08initCap\uFF0CloadFactor\uFF09\uFF1B</span>
        <span class="token comment">//2.new HashMap\uFF08initCap\uFF09\uFF1B</span>
         <span class="token comment">//3.new HashMap\uFF08map\uFF09\uFF1B\u4E14map\u6709\u6570\u636E</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldThr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// initial capacity was placed in threshold</span>
            newCap <span class="token operator">=</span> oldThr<span class="token punctuation">;</span>
        <span class="token comment">//oldCap==0\uFF0ColdThr==0</span>
        <span class="token comment">//new HashMap\uFF08map\uFF09;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>               <span class="token comment">// zero initial threshold signifies using defaults</span>
            newCap <span class="token operator">=</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">;</span><span class="token comment">//16</span>
            newThr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>DEFAULT_LOAD_FACTOR <span class="token operator">*</span> DEFAULT_INITIAL_CAPACITY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//12</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">//newThr\u4E3A0\u65F6\uFF0C\u901A\u8FC7newCap\u548CloadFactor\u8BA1\u7B97\u51FA\u4E00\u4E2AnewThr</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newThr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>newCap <span class="token operator">*</span> loadFactor<span class="token punctuation">;</span>
            newThr <span class="token operator">=</span> <span class="token punctuation">(</span>newCap \\<span class="token operator">&lt;</span> MAXIMUM_CAPACITY <span class="token operator">&amp;&amp;</span> ft \\<span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>MAXIMUM_CAPACITY <span class="token operator">?</span>
                      <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        threshold <span class="token operator">=</span> newThr<span class="token punctuation">;</span>
        
        <span class="token comment">//\u7B2C\u4E00\u6B21\u6216\u521B\u5EFA\u4E00\u4E2A\u66F4\u5927\u7684\u6570\u7EC4</span>
        <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;rawtypes&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTab <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span>newCap<span class="token punctuation">]</span><span class="token punctuation">;</span>
        table <span class="token operator">=</span> newTab<span class="token punctuation">;</span>
        <span class="token comment">//\u6269\u5BB9\u524D\u6570\u7EC4\u4E0D\u4E3A\u7A7A</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldTab <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j \\<span class="token operator">&lt;</span> oldCap<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u5F53\u524Dnode\u8282\u70B9</span>
                <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
                <span class="token comment">//\u5F53\u524D\u6876\u4F4D\u4E2D\u6709\u6570\u636E\uFF0C\u4F46\u662F\u6570\u636E\u5177\u4F53\u662F\u5355\u4E2A\u6570\u636E\u6216\u94FE\u8868\u6216\u7EA2\u9ED1\u6811\u8FD8\u4E0D\u660E\u786E</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">//\u65B9\u4FBFJVM GC\u56DE\u6536</span>
                    oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token comment">//\u5F53\u524D\u8282\u70B9\u4E3A\u5355\u6570\u636E</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                        newTab<span class="token punctuation">[</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> <span class="token punctuation">(</span>newCap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
                    <span class="token comment">//\u5F53\u524D\u8282\u70B9\u5DF2\u7ECF\u6811\u5316</span>
                    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newTab<span class="token punctuation">,</span> j<span class="token punctuation">,</span> oldCap<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//\u5F53\u524D\u8282\u70B9\u4E3A\u94FE\u8868</span>
                    <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// preserve order</span>
                        <span class="token comment">//loHead\u4F4E\u4F4D\u94FE\u8868\uFF0C\u5B58\u653E\u5728\u6269\u5BB9\u4E4B\u540E\u7684\u6570\u7EC4\u7684\u4E0B\u6807\u4F4D\u7F6E\uFF0C\u4E0E\u5F53\u524D\u6570\u7EC4\u7684\u4E0B\u6807\u4F4D\u7F6E\u4E00\u81F4\u3002</span>
                        <span class="token comment">//hiHead\u9AD8\u4F4D\u94FE\u8868\uFF0C\u5B58\u653E\u5728\u6269\u5BB9\u4E4B\u540E\u7684\u6570\u7EC4\u7684\u4E0B\u6807\u4F4D\u7F6E\u4E3A\u5F53\u524D\u6570\u7EC4\u7684\u4E0B\u6807\u4F4D\u7F6E+\u6269\u5BB9\u4E4B\u524D\u7684\u957F\u5EA6\u3002</span>
                        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> loHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hiHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hiTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
                        <span class="token keyword">do</span> <span class="token punctuation">{</span>
                            next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> oldCap<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                    loHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
                                <span class="token keyword">else</span>
                                    loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
                                loTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                                    hiHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
                                <span class="token keyword">else</span>
                                    hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
                                hiTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        
                        <span class="token comment">//\u4F4E\u4F4D\u94FE\u8868\u6709\u6570\u636E</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                            newTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> loHead<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                            newTab<span class="token punctuation">[</span>j <span class="token operator">+</span> oldCap<span class="token punctuation">]</span> <span class="token operator">=</span> hiHead<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> newTab<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u521D\u59CB\u5BB9\u91CF" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5BB9\u91CF" aria-hidden="true">#</a> \u521D\u59CB\u5BB9\u91CF</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\u9ED8\u8BA4\uFF08\u7F3A\u7701\uFF09\u6570\u7EC4\u957F\u5EA6
     * The default initial capacity - MUST be a power of two.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_INITIAL_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> \\<span class="token operator">&lt;</span>\\<span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// aka 16</span>

    <span class="token doc-comment comment">/**\u6700\u5927\u6570\u7EC4\u957F\u5EA6
     * The maximum capacity, used if a higher value is implicitly specified
     * by either of the constructors with arguments.
     * MUST be a power of two \\&lt;= 1\\&lt;\\&lt;30.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAXIMUM_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> \\<span class="token operator">&lt;</span>\\<span class="token operator">&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**\u7F3A\u7701\u8D1F\u8F7D\u56E0\u5B50\u5927\u5C0F
     * The load factor used when none specified in constructor.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> DEFAULT_LOAD_FACTOR <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\u7684\u5355\u4E2A\u94FE\u8868\u5143\u7D20\u9608\u503C
                        if (binCount &gt;= TREEIFY_THRESHOLD - 1)
                    treeifyBin(tab, hash);\u770B\u4E0B\u9762\u65B9\u6CD5
            <span class="token punctuation">}</span>
     * The bin count threshold for using a tree rather than list for a
     * bin.  Bins are converted to trees when adding an element to a
     * bin with at least this many nodes. The value must be greater
     * than 2 and should be at least 8 to mesh with assumptions in
     * tree removal about conversion back to plain bins upon
     * shrinkage.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TREEIFY_THRESHOLD <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
     * Replaces all linked nodes in bin at index for given hash unless
     * table is too small, in which case resizes instead.
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">treeifyBin</span><span class="token punctuation">(</span><span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span> <span class="token keyword">int</span> hash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n<span class="token punctuation">,</span> index<span class="token punctuation">;</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> \\<span class="token operator">&lt;</span> MIN_TREEIFY_CAPACITY<span class="token punctuation">)</span>
            <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> tab<span class="token punctuation">[</span>index <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hd <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> tl <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> <span class="token function">replacementTreeNode</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>tl <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    hd <span class="token operator">=</span> p<span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    p<span class="token punctuation">.</span>prev <span class="token operator">=</span> tl<span class="token punctuation">;</span>
                    tl<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                tl <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> hd<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                hd<span class="token punctuation">.</span><span class="token function">treeify</span><span class="token punctuation">(</span>tab<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**\u4ECE\u7EA2\u9ED1\u6811\u964D\u4E3A\u94FE\u8868\u7684\u9608\u503C
     * The bin count threshold for untreeifying a (split) bin during a
     * resize operation. Should be less than TREEIFY_THRESHOLD, and at
     * most 6 to mesh with shrinkage detection under removal.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> UNTREEIFY_THRESHOLD <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\u7684\u6570\u7EC4\u9608\u503C
     * The smallest table capacity for which bins may be treeified.
     * (Otherwise the table is resized if too many nodes in a bin.)
     * Should be at least 4 * TREEIFY_THRESHOLD to avoid conflicts
     * between resizing and treeification thresholds.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MIN_TREEIFY_CAPACITY <span class="token operator">=</span> <span class="token number">64</span><span class="token punctuation">;</span>




    <span class="token doc-comment comment">/** \u54C8\u7CFB\u6876\uFF08\u8868\uFF09
     * The table, initialized on first use, and resized as
     * necessary. When allocated, length is always a power of two.
     * (We also tolerate length zero in some operations to allow
     * bootstrapping mechanics that are currently not needed.)
     */</span>
    <span class="token keyword">transient</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Holds cached entrySet(). Note that AbstractMap fields are used
     * for keySet() and values().
     */</span>
    <span class="token keyword">transient</span> <span class="token class-name">Set</span>\\<span class="token operator">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token operator">&gt;</span> entrySet<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**\u5F53\u524D\u54C8\u5E0C\u8868\u5143\u7D20\u4E2A\u6570
     * The number of key-value mappings contained in this map.
     */</span>
    <span class="token keyword">transient</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**\u4FEE\u6539\u6B21\u6570\uFF0C\u4E0D\u5305\u542B\u66FF\u6362
     * The number of times this HashMap has been structurally modified
     * Structural modifications are those that change the number of mappings in
     * the HashMap or otherwise modify its internal structure (e.g.,
     * rehash).  This field is used to make iterators on Collection-views of
     * the HashMap fail-fast.  (See ConcurrentModificationException).
     */</span>
    <span class="token keyword">transient</span> <span class="token keyword">int</span> modCount<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**\u6269\u5BB9\u9608\u503C\uFF0C\u5F53\u54C8\u5E0C\u8868\u5143\u7D20\u8D85\u8FC7\u9608\u503C\u65F6\u89E6\u53D1\u6269\u5BB9\uFF0C
     * The next size value at which to resize (capacity * load factor).
     *
     * <span class="token keyword">@serial</span>
     */</span>
    <span class="token comment">// (The javadoc description is true upon serialization.</span>
    <span class="token comment">// Additionally, if the table array has not been allocated, this</span>
    <span class="token comment">// field holds the initial array capacity, or zero signifying</span>
    <span class="token comment">// DEFAULT_INITIAL_CAPACITY.)</span>
    <span class="token keyword">int</span> threshold<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**\u8D1F\u8F7D\u56E0\u5B50\uFF0Cthreshold = capacity * loadFactor
     * The load factor for the hash table.
     *
     * <span class="token keyword">@serial</span>
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u65E0\u5E8F-\u53EF\u7A7A" tabindex="-1"><a class="header-anchor" href="#\u65E0\u5E8F-\u53EF\u7A7A" aria-hidden="true">#</a> \u65E0\u5E8F,\u53EF\u7A7A</h4><p>\u672A\u89E3\u51B3\u95EE\u9898:\u4E3A\u4EC0\u4E48\u6709\u65F6\u5019\u770B\u8D77\u6765\u6709\u5E8F\uFF1F \u7B54\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> 
<span class="token doc-comment comment">/**
     * Associates the specified value with the specified key in this map.
     * If the map previously contained a mapping for the key, the old
     * value is replaced.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> key with which the specified value is to be associated
     * <span class="token keyword">@param</span> <span class="token parameter">value</span> value to be associated with the specified key
     * <span class="token keyword">@return</span> the previous value associated with \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">key\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>, or
     *         \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> if there was no mapping for \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">key\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>.
     *         (A \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> return can also indicate that the map
     *         previously associated \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token keyword">null</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> with \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java">key\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>.)
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>  
<span class="token comment">//====Key\u4E3Anull\u60C5\u51B5</span>

<span class="token comment">//\u5047\u8BBE putVal(hash(null), null, value, false, true);</span>
<span class="token comment">//\u5373 putVal(0, 0, value, false, true);</span>
<span class="token comment">//\u7531 if ((p = tab[i = (n - 1) &amp; hash]) == null)</span>
<span class="token comment">// tab[i] = newNode(hash, key, value, null);</span>
<span class="token comment">//\u5F97tab[0]==null --&gt; tab[0] = newNode(hash, key, value, null);</span>
<span class="token comment">//key\u4E3Anull\u653E\u5728tab[0]</span>

    <span class="token doc-comment comment">/**
     * Computes key.hashCode() and spreads (XORs) higher bits of hash
     * to lower.  Because the table uses power-of-two masking, sets of
     * hashes that vary only in bits above the current mask will
     * always collide. (Among known examples are sets of Float keys
     * holding consecutive whole numbers in small tables.)  So we
     * apply a transform that spreads the impact of higher bits
     * downward. There is a tradeoff between speed, utility, and
     * quality of bit-spreading. Because many common sets of hashes
     * are already reasonably distributed (so don&#39;t benefit from
     * spreading), and because we use trees to handle large sets of
     * collisions in bins, we just XOR some shifted bits in the
     * cheapest possible way to reduce systematic lossage, as well as
     * to incorporate impact of the highest bits that would otherwise
     * never be used in index calculations because of table bounds.
     */</span>
<span class="token comment">//\u4F5C\u7528\uFF1A\u5728table\u957F\u5EA6\u4E0D\u957F\u7684\u60C5\u51B5\u4E0B\uFF0C\u80FD\u8BA9key\u7684hash\u503C\u7684\u9AD816\u4F4D\u4E5F\u53C2\u4E0E\u8DEF\u7531\u8FD0\u7B97,</span>
<span class="token comment">//\u5F02\u6216\uFF1A\u540C0\u5F021</span>
<span class="token comment">//h=0b 0010 0101 1010 1100 0011 1111 0010 1110</span>
<span class="token comment">//  0b 0010 0101 1010 1100 0011 1111 0010 1110</span>
<span class="token comment">//          ^</span>
<span class="token comment">//  0b 0000 0000 0000 0000 0010 0101 1010 1100</span>
<span class="token comment">//=&gt;   0010 0101 1010 1100 0001 1010 1000 0010</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> h<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token doc-comment comment">/**
     * Implements Map.put and related methods
     *
     * <span class="token keyword">@param</span> <span class="token parameter">hash</span> hash for key
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> the key
     * <span class="token keyword">@param</span> <span class="token parameter">value</span> the value to put
     * onlyIfAbsent  true==\u300Bkey\u5B58\u5728\uFF0C\u4E0D\u63D2\u5165
     * <span class="token keyword">@param</span> <span class="token parameter">onlyIfAbsent</span> if true, don&#39;t change existing value
     * <span class="token keyword">@param</span> <span class="token parameter">evict</span> if false, the table is in creation mode.
     * <span class="token keyword">@return</span> previous value, or null if none
     */</span>
    <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span>
                   <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//tab \u5F53\u524D\u6563\u5217\u8868</span>
        <span class="token comment">//p \u5F53\u524D\u6563\u5217\u8868\u5143\u7D20</span>
        <span class="token comment">//n \u5F53\u524D\u6563\u5217\u8868\u6570\u7EC4\u957F\u5EA6</span>
        <span class="token comment">//i \u8DEF\u7531\u5BFB\u5740\u7ED3\u679C</span>
        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
        <span class="token comment">//\u5EF6\u8FDF\u521D\u59CB\u5316\uFF0C\u7B2C\u4E00\u6B21\u8C03\u7528putVal\u65F6\u4F1A\u521D\u59CB\u5316hashMap\u5BF9\u8C61\u4E2D\u6700\u6D88\u8017\u5185\u5B58\u7684\u6563\u5217\u8868</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">//\u6700\u7B80\u5355\u60C5\u51B5\uFF0C\u5BFB\u5740\u627E\u5230\u7684\u6876\u4F4D\u4E3Anull\uFF0C\u76F4\u63A5\u653E\u5165\u6570\u636E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">//e \u4E0D\u4E3Anull \u627E\u5230\u4E86\u4E00\u4E2A\u4E0E\u5F53\u524D\u8981\u63D2\u5165\u7684key-value\u4E00\u81F4\u7684 key\u5143\u7D20</span>
            <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
            <span class="token comment">//\u8868\u793A\u6876\u4F4D\u4E2D\u7684\u8BE5\u5143\u7D20\u4E0E\u5F53\u524D\u63D2\u5165\u5143\u7D20key\u5B8C\u5168\u4E00\u81F4\uFF0C\u540E\u7EED\u5C06\u66FF\u6362</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                e <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token comment">//\u8BE5\u5143\u7D20\u5DF2\u7ECF\u6811\u5316\u65F6</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u94FE\u8868\u65F6\u4E14\u4E0D\u7B49\u4E8E\u5934\u5143\u7D20\uFF0C\u5143\u7D20\u4F9D\u6B21\u6BD4\u8F83</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">//\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u8FD8\u627E\u4E0D\u5230\u540C\u63D2\u5165key\u76F8\u540C\u7684node</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">//\u63D2\u5165\u6700\u540E</span>
                        p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">//\u94FE\u8868\u5143\u7D20\u6570\u91CF\u5927\u4E8E8\uFF0C\u6811\u5316</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// -1 for 1st</span>
                            <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">//\u94FE\u8868\u4E2D\u627E\u5230\u540C\u63D2\u5165key\u7684node\uFF0C\u66FF\u6362</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                        <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    p <span class="token operator">=</span> e<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u4E0A\u9762\u7684e\u5B58\u5728\u66FF\u6362\u503C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// existing mapping for key</span>
                <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent <span class="token operator">||</span> oldValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u8BB0\u5F55\u4FEE\u6539\u6B21\u6570\uFF0C\u66FF\u6362\u4E0D\u7B97</span>
        <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
        <span class="token comment">//\u63D2\u5165\u540E\u5BB9\u91CF\u5927\u4E8E\u6269\u5BB9\u9608\u503C\u5219\u6269\u5BB9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>size <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
            <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span>evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> GET()</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
    <span class="token doc-comment comment">/**
     * Returns the value to which the specified key is mapped,
     * or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if this map contains no mapping for the key.
     *
     * \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>More formally, if this map contains a mapping from a key
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">k</span></span><span class="token punctuation">}</span> to a value <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">v</span></span><span class="token punctuation">}</span> such that <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token punctuation">(</span>key<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">?</span> k<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">:</span></span>
     * <span class="token code language-java">key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">}</span>, then this method returns <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">v</span></span><span class="token punctuation">}</span>; otherwise
     * it returns <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>.  (There can be at most one such mapping.)
     *
     * \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>A return value of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> does not \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>necessarily\\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>
     * indicate that the map contains no mapping for the key; it&#39;s also
     * possible that the map explicitly maps the key to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>.
     * The <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">containsKey</span></span> containsKey<span class="token punctuation">}</span> operation may be used to
     * distinguish these two cases.
     *
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    
    <span class="token doc-comment comment">/**
     * Implements Map.get and related methods.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">hash</span> hash for key
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> the key
     * <span class="token keyword">@return</span> the node, or null if none
     */</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//tab:\u5F15\u7528\u5F53\u524D hashmap\u7684\u6563\u5217\u8868</span>
        <span class="token comment">//first:\u6876\u4F4D\u4E2D\u7684\u5934\u5143\u7D20</span>
        <span class="token comment">//e:\u4E34\u65F6node\u5143\u7D20</span>
        <span class="token comment">//n: table\u6570\u7EC4\u957F\u5EA6</span>
        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">,</span> e<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>first <span class="token operator">=</span> tab<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u7B2C\u4E00\u79CD\u60C5\u51B5\uFF1A\u5B9A\u4F4D\u51FA\u6765\u7684\u6876\u4F4D\u5143\u7D20\u5373\u4E3A\u54B1\u4EEC\u8981get\u7684\u6570\u636E</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token comment">// always check first node</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> first<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> first<span class="token punctuation">;</span>
            <span class="token comment">//\u8BF4\u660E\u5F53\u524D\u6876\u4F4D\u4E0D\u6B62\u4E00\u4E2A\u5143\u7D20\uFF0C\u53EF\u80FD\u662F\u94FE\u8868\u4E5F\u53EF\u80FD\u662F\u7EA2\u9ED1\u6811</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u7B2C\u4E8C\u79CD\u60C5\u51B5\uFF0C\u6876\u5347\u7EA7\u6210\u4E86\u7EA2\u9ED1\u6811</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>first<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTreeNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u6876\u5F62\u6210\u4E86\u94FE\u8868</span>
                <span class="token keyword">do</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                        <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">return</span> e<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> Remove\uFF08\uFF09</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
    <span class="token doc-comment comment">/**
     * Implements Map.remove and related methods.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">hash</span> hash for key
     * <span class="token keyword">@param</span> <span class="token parameter">key</span> the key
     * <span class="token keyword">@param</span> <span class="token parameter">value</span> the value to match if matchValue, else ignored
     * <span class="token keyword">@param</span> <span class="token parameter">matchValue</span> if true only remove if value is equal
     * <span class="token keyword">@param</span> <span class="token parameter">movable</span> if false do not move other nodes while removing
     * <span class="token keyword">@return</span> the node, or null if none
     */</span>
    <span class="token keyword">final</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">removeNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">,</span>
                               <span class="token keyword">boolean</span> matchValue<span class="token punctuation">,</span> <span class="token keyword">boolean</span> movable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//tab:\u5F15\u7528\u5F53\u524D hashmap\u4E2D\u7684\u6563\u5217\u8868</span>
        <span class="token comment">//p:\u5F53\u524Dnode\u5143\u7D20</span>
        <span class="token comment">//n:\u8868\u793A\u6563\u5217\u8868\u6570\u7EC4\u957F\u5EA6</span>
        <span class="token comment">//index:\u8868\u793A\u5BFB\u5740\u7ED3\u679C</span>
        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> index<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>index <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u8BF4\u660E\u8DEF\u7531\u7684\u6876\u4F4D\u662F\u6709\u6570\u636E\u7684\uFF0C\u9700\u8981\u8FDB\u884C\u67E5\u627E\u64CD\u4F5C\uFF0C\u5E76\u4E14\u5220\u9664</span>
            <span class="token comment">//node:\u67E5\u627E\u5230\u7684\u7ED3\u679C</span>
            <span class="token comment">//e:\u5F53\u524DNode\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20</span>
            <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> e<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span> <span class="token class-name">V</span> v<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                node <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u8BF4\u660E\uFF0C\u5F53\u524D\u6876\u4F4D\u8981\u4E48\u662F\u94FE\u8868\u8981\u4E48\u662F\u7EA2\u9ED1\u6811</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span><span class="token comment">//\u5224\u65AD\u5F53\u524D\u6876\u4F4D\u662F\u5426\u5347\u7EA7\u4E3A\u7EA2\u9ED1\u6811\u4E86</span>
                    <span class="token comment">//\u7B2C\u4E8C\u79CD\u60C5\u51B5\uFF1A\u7EA2\u9ED1\u6811\u67E5\u627E</span>
                    node <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTreeNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">//\u7B2C\u4E09\u79CD\u94FE\u8868</span>
                    <span class="token keyword">do</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span>
                             <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            node <span class="token operator">=</span> e<span class="token punctuation">;</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        p <span class="token operator">=</span> e<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u5224\u65ADnode\u4E0D\u4E3A\u7A7A\u7684\u8BDD\uFF0C\u8BF4\u660E\u6309\u7167key\u67FB\u627E\u5230\u9700\u8981\u5220\u9664\u7684\u6570\u636E\u4E86</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>matchValue <span class="token operator">||</span> <span class="token punctuation">(</span>v <span class="token operator">=</span> node<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">==</span> value <span class="token operator">||</span>
                                 <span class="token punctuation">(</span>value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u7B2C\u4E00\u79CD\u60C5\u6CC1\uFF1Anode\u662F\u6811\u8282\u70B9\uFF0C\u8BF4\u660E\u9700\u8981\u8FDB\u884C\u6811\u8282\u70B9\u79FB\u9664\u64CD\u4F5C</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeTreeNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> movable<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u7B2C\u4E8C\u79CD\u60C5\u6CC1\uFF1A\u6876\u4F4D\u5143\u7D20\u5373\u4E3A\u67FB\u627E\u7ED3\u679C\uFF0C\u5219\u5C06\u8BE5\u5143\u7D20\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20\u653E\u81F3\u6876\u4F4D\u4E2D</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> p<span class="token punctuation">)</span>
                    tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                <span class="token keyword">else</span>
                    <span class="token comment">//\u7B2C\u4E09\u79CD\u60C5\u6CC1\uFF1A\u5C06\u5F53\u524D\u5143\u7D20p\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20\u8BBE\u7F6E\u6210\u8981\u5220\u9664\u5143\u7D20\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20</span>
                    p<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
                <span class="token operator">--</span>size<span class="token punctuation">;</span>
                <span class="token function">afterNodeRemoval</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> node<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6784\u9020\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u65B9\u6CD5" aria-hidden="true">#</a> \u6784\u9020\u65B9\u6CD5</h4><p>\uFF1A&gt;&gt;&gt;\u65E0\u7B26\u53F7\u53F3\u79FB\uFF0C\u5FFD\u7565\u7B26\u53F7\u4F4D\uFF0C\u7A7A\u4F4D\u90FD\u4EE50\u8865\u9F50</p><p><img src="http://qnimg.gisfsde.com/work/image-20211206204016669.png" alt="image-20211206204016669" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/* ---------------- Public operations -------------- */</span>

    <span class="token doc-comment comment">/**
     * Constructs an empty \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">HashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> with the specified initial
     * capacity and load factor.
     *
     * <span class="token keyword">@param</span>  <span class="token parameter">initialCapacity</span> the initial capacity
     * <span class="token keyword">@param</span>  <span class="token parameter">loadFactor</span>      the load factor
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if the initial capacity is negative
     *         or the load factor is nonpositive
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u9650\u5236\u6570\u7EC4\u4E0EloadFactor 0\\&lt;initialCapacity\\&lt;MAXIMUM_CAPACITY</span>
        <span class="token comment">// loadFactor&gt;0</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity \\<span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal initial capacity: &quot;</span> <span class="token operator">+</span>
                                               initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span>
            initialCapacity <span class="token operator">=</span> MAXIMUM_CAPACITY<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>loadFactor \\<span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token class-name">Float</span><span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>loadFactor<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal load factor: &quot;</span> <span class="token operator">+</span>
                                               loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> loadFactor<span class="token punctuation">;</span>
        <span class="token comment">//tableSizeFor \u8FD4\u56DE\u4E00\u4E2A\u5927\u4E8E\u7B49\u4E8E\u5F53\u524Dcap\u7684\u4E00\u4E2A\u6570\u5B57\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u6570\u5B57\u4E00\u5B9A\u662F2\u7684\u6B21\u65B9\u6570\uFF0C\u6E90\u7801\u5982\u4E0B\uFF1A</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>threshold <span class="token operator">=</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**\u8FD4\u56DE\u4E00\u4E2A\u5927\u4E8E\u7B49\u4E8E\u5F53\u524Dcap\u7684\u4E00\u4E2A\u6570\u5B57\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u6570\u5B57\u4E00\u5B9A\u662F2\u7684\u6B21\u65B9\u6570\uFF1A
     * &gt;&gt;&gt;\uFF1A\u65E0\u7B26\u53F7\u53F3\u79FB\uFF0C\u5FFD\u7565\u7B26\u53F7\u4F4D\uFF0C\u7A7A\u4F4D\u90FD\u4EE50\u8865\u9F50
     * Returns a power of two size for the given target capacity.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span><span class="token keyword">int</span> cap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> cap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">;</span>
        n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>n \\<span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token operator">?</span> MAXIMUM_CAPACITY <span class="token operator">:</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Constructs an empty \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">HashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> with the specified initial
     * capacity and the default load factor (0.75).
     *
     * <span class="token keyword">@param</span>  <span class="token parameter">initialCapacity</span> the initial capacity.
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if the initial capacity is negative.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">,</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Constructs an empty \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">HashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> with the default initial capacity
     * (16) and the default load factor (0.75).
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">;</span> <span class="token comment">// all other fields defaulted</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Constructs a new \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">HashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> with the same mappings as the
     * specified \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">Map</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>.  The \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">HashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> is created with
     * default load factor (0.75) and an initial capacity sufficient to
     * hold the mappings in the specified \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">Map</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>.
     *
     * <span class="token keyword">@param</span>   <span class="token parameter">m</span> the map whose mappings are to be placed in this map
     * <span class="token keyword">@throws</span>  <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the specified map is null
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>loadFactor <span class="token operator">=</span> DEFAULT_LOAD_FACTOR<span class="token punctuation">;</span>
        <span class="token function">putMapEntries</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="linkedhashmap" tabindex="-1"><a class="header-anchor" href="#linkedhashmap" aria-hidden="true">#</a> LinkedHashMap</h3><table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u5E95\u5C42\u54C8\u5E0C\u8868+\u53CC\u5411\u94FE\u8868\uFF0CHashMap\u5B50\u7C7B</td><td><a href="#%E5%BA%95%E5%B1%82">\u5E95\u5C42</a></td><td></td></tr><tr><td>\u7EBF\u7A0B\u4E0D\u5B89\u5168</td><td>\u65B9\u6CD5\u4E2D\u6CA1\u6709synchronized</td><td></td></tr><tr><td><strong>\u6709\u5E8F</strong></td><td><a href="#%E6%9C%89%E5%BA%8F">\u6709\u5E8F</a></td><td></td></tr><tr><td>\u591A\u7A7A\u952E\u503C\u6216\u5355\u7A7A\u952E\u6216\u503C</td><td>\u540CHashMap</td><td></td></tr><tr><td>\u6269\u5BB9\u4E24\u500D</td><td>\u540Chashmap</td><td></td></tr></tbody></table><h4 id="\u5E95\u5C42-2" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42-2" aria-hidden="true">#</a> \u5E95\u5C42</h4><p>put\u3001resize\u6269\u5BB9\u5747\u4F7F\u7528HashMap\u7684\u65B9\u6CD5\uFF0C\u62E5\u6709HashMap\u6240\u6709\u7279\u6027\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedHashMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">extends</span> <span class="token class-name">HashMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">Map</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * HashMap.Node subclass for normal LinkedHashMap entries.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token class-name">Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> before<span class="token punctuation">,</span> after<span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**\u53CC\u5411\u94FE\u8868\u5934
     * The head (eldest) of the doubly linked list.
     */</span>
    <span class="token keyword">transient</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> head<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**\u53CC\u5411\u94FE\u8868\u5C3E
     * The tail (youngest) of the doubly linked list.
     */</span>
    <span class="token keyword">transient</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> tail<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The iteration ordering method for this linked hash map: \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">true</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>
     * for access-order, \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">false</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> for insertion-order.
     *
     * <span class="token keyword">@serial</span>
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> accessOrder<span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
     * Constructs an empty insertion-ordered \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">LinkedHashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> instance
     * with the specified initial capacity and a default load factor (0.75).
     *
     * <span class="token keyword">@param</span>  <span class="token parameter">initialCapacity</span> the initial capacity
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if the initial capacity is negative
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        accessOrder <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Constructs an empty insertion-ordered \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">LinkedHashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> instance
     * with the default initial capacity (16) and load factor (0.75).
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        accessOrder <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Constructs an insertion-ordered \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">LinkedHashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> instance with
     * the same mappings as the specified map.  The \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">LinkedHashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>
     * instance is created with a default load factor (0.75) and an initial
     * capacity sufficient to hold the mappings in the specified map.
     *
     * <span class="token keyword">@param</span>  <span class="token parameter">m</span> the map whose mappings are to be placed in this map
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the specified map is null
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        accessOrder <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token function">putMapEntries</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Constructs an empty \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token class-name">LinkedHashMap</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> instance with the
     * specified initial capacity, load factor and ordering mode.
     *
     * <span class="token keyword">@param</span>  <span class="token parameter">initialCapacity</span> the initial capacity
     * <span class="token keyword">@param</span>  <span class="token parameter">loadFactor</span>      the load factor
     *=====\u6B64\u6784\u9020\u65B9\u6CD5accessOrder\u4E3Atrue\u65F6\u5B9E\u73B0\u4E86\u6309\u8BBF\u95EE\u987A\u5E8F\u5B58\u50A8\u5143\u7D20======
     *<span class="token keyword">@param</span>  <span class="token parameter">accessOrder</span>     the ordering mode - \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">true</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> for access-order, \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">false</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> for insertion-order
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if the initial capacity is negative
     *         or the load factor is nonpositive
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">LinkedHashMap</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span>
                         <span class="token keyword">float</span> loadFactor<span class="token punctuation">,</span>
                         <span class="token keyword">boolean</span> accessOrder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">,</span> loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>accessOrder <span class="token operator">=</span> accessOrder<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6709\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6709\u5E8F" aria-hidden="true">#</a> \u6709\u5E8F</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>     <span class="token doc-comment comment">/**
     * HashMap.Node subclass for normal LinkedHashMap entries.
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">HashMap<span class="token punctuation">.</span>Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token comment">//\u8BB0\u5F55\u76F8\u90BB\u4E24\u4E2Akey-value\u5BF9\u8C61</span>
        <span class="token class-name">Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> before<span class="token punctuation">,</span> after<span class="token punctuation">;</span>
        <span class="token class-name">Entry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**\u53CC\u5411\u94FE\u8868\u5934
     * The head (eldest) of the doubly linked list.
     */</span>
    <span class="token keyword">transient</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> head<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**\u53CC\u5411\u94FE\u8868\u5C3E
     * The tail (youngest) of the doubly linked list.
     */</span>
    <span class="token keyword">transient</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> tail<span class="token punctuation">;</span>
<span class="token doc-comment comment">/**====false\u5219\u6309\u63D2\u5165\u987A\u5E8F\u5B58\u50A8\u5143\u7D20\uFF0C\u5982\u679C\u662Ftrue\u5219\u6309\u8BBF\u95EE\u987A\u5E8F\u5B58\u50A8\u5143\u7D20
     * The iteration ordering method for this linked hash map: \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">true</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>
     * for access-order, \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">false</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> for insertion-order.
     *
     * <span class="token keyword">@serial</span>
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> accessOrder<span class="token punctuation">;</span>

    <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">newNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">linkNodeLast</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * The iteration ordering method for this linked hash map: \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">true</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>
     * for access-order, \\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token code-section"><span class="token line"><span class="token code language-java"><span class="token boolean">false</span>\\</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span> for insertion-order.
     *
     * <span class="token keyword">@serial</span>
     */</span>
    <span class="token keyword">final</span> <span class="token keyword">boolean</span> accessOrder<span class="token punctuation">;</span>

    <span class="token comment">// internal utilities</span>
<span class="token comment">//\u5B9E\u73B0\u6709\u5E8F\u7684\u65B9\u6CD5</span>
<span class="token comment">//\u4E3E\u4F8B:\u653E\u51651,2,3</span>
<span class="token comment">//1\u8FDB\uFF1Ahead=tail=1  last=null  </span>
<span class="token comment">//    3\u8FDB\uFF1Atail=last=1--\u300Btail=3  3.before=1 --\u300B 1.after=3</span>
 <span class="token comment">//   	2\u8FDB\uFF1Atail=last=3--\u300Btail=2  2.before=3 --\u300B 3.after=2</span>
    <span class="token comment">// link at the end of list</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">linkNodeLast</span><span class="token punctuation">(</span><span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> last <span class="token operator">=</span> tail<span class="token punctuation">;</span>
        tail <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>last <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            head <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            p<span class="token punctuation">.</span>before <span class="token operator">=</span> last<span class="token punctuation">;</span>
            last<span class="token punctuation">.</span>after <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token comment">//HashMap\u7684Node===============</span>

<span class="token doc-comment comment">/**
     * Basic hash bin node, used for most entries.  (See below for
     * TreeNode subclass, and in LinkedHashMap for its Entry subclass.)
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
        <span class="token class-name">V</span> value<span class="token punctuation">;</span>
        <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>

        <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>hash <span class="token operator">=</span> hash<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">K</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span> <span class="token keyword">return</span> key<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span> <span class="token keyword">return</span> value<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> key <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">;</span> <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token class-name">V</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">V</span> oldValue <span class="token operator">=</span> value<span class="token punctuation">;</span>
            value <span class="token operator">=</span> newValue<span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>o<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treemap" tabindex="-1"><a class="header-anchor" href="#treemap" aria-hidden="true">#</a> TreeMap</h3><table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u5E95\u5C42\u4E8C\u53C9\u6811\u3010\u7EA2\u9ED1\u6811\u3011</td><td><a href="#%E5%BA%95%E5%B1%82%E7%BA%A2%E9%BB%91%E6%A0%91">\u5E95\u5C42\u7EA2\u9ED1\u6811</a></td><td></td></tr><tr><td>\u7EBF\u7A0B\u4E0D\u5B89\u5168</td><td>\u65B9\u6CD5\u4E2D\u6CA1\u6709synchronized</td><td></td></tr><tr><td>\u6709\u5E8F\uFF0C\u6BD4\u8F83\u901A\u8FC7key</td><td><a href="#%E5%BA%95%E5%B1%82%E7%BA%A2%E9%BB%91%E6%A0%91">\u5E95\u5C42\u7EA2\u9ED1\u6811</a></td><td></td></tr><tr><td>\u591A\u503C\u53EF\u7A7A</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="\u5E95\u5C42\u7EA2\u9ED1\u6811" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42\u7EA2\u9ED1\u6811" aria-hidden="true">#</a> \u5E95\u5C42\u7EA2\u9ED1\u6811</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//NavigableMap\u63A5\u53E3\u63D0\u4F9B\u9488\u5BF9Key\u7684\u6709\u5E8F\u8BBF\u95EE\uFF0C</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TreeMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">extends</span> <span class="token class-name">AbstractMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">implements</span> <span class="token class-name">NavigableMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * The comparator used to maintain order in this tree map, or
     * null if it uses the natural ordering of its keys.
     *
     * <span class="token keyword">@serial</span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Comparator</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> comparator<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> root<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The number of entries in the tree
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The number of structural modifications to the tree.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">int</span> modCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

 <span class="token doc-comment comment">/**
     * Node in the Tree.  Doubles as a means to pass key-value pairs back to
     * user (see Map.Entry).
     */</span>

    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token class-name">K</span> key<span class="token punctuation">;</span>
        <span class="token class-name">V</span> value<span class="token punctuation">;</span>
        <span class="token class-name">Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> left<span class="token punctuation">;</span>
        <span class="token class-name">Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> right<span class="token punctuation">;</span>
        <span class="token class-name">Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> color <span class="token operator">=</span> BLACK<span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * Make a new cell with given key, value, and parent, and with
         * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> child links, and BLACK color.
         */</span>
        <span class="token class-name">Entry</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token class-name">Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> parent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * Returns the key.
         *
         * <span class="token keyword">@return</span> the key
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">K</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> key<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * Returns the value associated with the key.
         *
         * <span class="token keyword">@return</span> the value associated with the key
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * Replaces the value currently associated with the key with the given
         * value.
         *
         * <span class="token keyword">@return</span> the value associated with the key before this method was
         *         called
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">V</span> oldValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>o<span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token function">valEquals</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">valEquals</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> keyHash <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> valueHash <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> value<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> keyHash <span class="token operator">^</span> valueHash<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> key <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hashtable" tabindex="-1"><a class="header-anchor" href="#hashtable" aria-hidden="true">#</a> HashTable</h3><p>\u7EBF\u7A0B\u5B89\u5168\uFF0C\u5185\u90E8\u7684\u65B9\u6CD5\u57FA\u672C\u90FD\u7ECF\u8FC7 synchronized\uFF0C\u4FDD\u7559\u7C7B\u4E0D\u5EFA\u8BAE\u4F7F\u7528</p><h3 id="concurrenthashmap" tabindex="-1"><a class="header-anchor" href="#concurrenthashmap" aria-hidden="true">#</a> <strong>ConcurrentHashMap</strong></h3><table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u5E95\u5C42\u6570\u7EC4\u3001\u94FE\u8868\u3001\u7EA2\u9ED1\u6811</td><td><a href="#%E5%BA%95%E5%B1%82">\u5E95\u5C42</a></td><td></td></tr><tr><td>\u7EBF\u7A0B\u5B89\u5168</td><td>\u7EBF\u7A0B\u5B89\u5168</td><td></td></tr><tr><td>\u52A8\u6001\u6269\u5BB9\u4E3A\u539F\u6765\u76842\u500D</td><td><a href="#%E6%89%A9%E5%AE%B9%E4%B8%BA%E5%8E%9F%E6%9D%A5%E4%B8%A4%E5%80%8D">int newCapacity = oldCapacity + ((capacityIncrement &gt; 0) ? capacityIncrement : oldCapacity);</a></td><td></td></tr><tr><td>\u90FD\u5B89\u5168\u4F46\u662FConcurrentHashMap \u6BD4 HashTable \u6548\u7387\u8981\u9AD8</td><td>ConcurrentHashMap \u9501\u7C92\u5EA6\u66F4\u7EC6</td><td></td></tr><tr><td>\u975E\u7A7A</td><td></td><td></td></tr></tbody></table><p>JDK1.7 : \u3010\u6570\u7EC4\uFF08Segment\uFF09 + \u6570\u7EC4\uFF08HashEntry\uFF09 + \u94FE\u8868\uFF08HashEntry\u8282\u70B9\uFF09\u3011 ConcurrentHashMap\uFF08\u5206\u6BB5\u9501\uFF09 \u5BF9\u6574\u4E2A\u6876\u6570\u7EC4\u8FDB\u884C\u4E86\u5206\u5272\u5206\u6BB5(Segment)\uFF0C\u6BCF\u4E00\u628A\u9501\u53EA\u9501\u5BB9\u5668\u5176\u4E2D\u4E00\u90E8\u5206\u6570\u636E\uFF0C\u591A\u7EBF\u7A0B\u8BBF\u95EE\u5BB9\u5668\u91CC\u4E0D\u540C\u6570\u636E\u6BB5\u7684\u6570\u636E\uFF0C\u5C31\u4E0D\u4F1A\u5B58\u5728\u9501\u7ADE\u4E89\uFF0C\u63D0\u9AD8\u5E76\u53D1\u8BBF\u95EE\u7387\u3002Segment\u662F\u4E00\u79CD\u53EF\u91CD\u5165\u9501ReentrantLock\uFF0C\u5728ConcurrentHashMap\u91CC\u626E\u6F14\u9501\u7684\u89D2\u8272\uFF0CHashEntry\u5219\u7528\u4E8E\u5B58\u50A8\u952E\u503C\u5BF9\u6570\u636E\u3002 JDK1.8 : Node\u6570\u7EC4+\u94FE\u8868 / \u7EA2\u9ED1\u6811 \u5229\u7528CAS+Synchronized\u6765\u4FDD\u8BC1\u5E76\u53D1\u66F4\u65B0\u7684\u5B89\u5168\uFF0C\u5E95\u5C42\u4F9D\u7136\u91C7\u7528\u6570\u7EC4+\u94FE\u8868+\u7EA2\u9ED1\u6811\u7684\u5B58\u50A8\u7ED3\u6784\u3002</p><hr><h4 id="\u5E95\u5C42-3" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42-3" aria-hidden="true">#</a> \u5E95\u5C42</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * The array of bins. Lazily initialized upon first insertion.
     * Size is always a power of two. Accessed directly by iterators.
     */</span>
    <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The next table to use; non-null only while resizing.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">Node</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> nextTable<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Base counter value, used mainly when there is no contention,
     * but also as a fallback during table initialization
     * races. Updated via CAS.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> baseCount<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * hash\u8868\u521D\u59CB\u5316\u6216\u6269\u5BB9\u65F6\u7684\u4E00\u4E2A\u63A7\u5236\u4F4D\u6807\u8BC6\u91CF\u3002
     * \u8D1F\u6570\u4EE3\u8868\u6B63\u5728\u8FDB\u884C\u521D\u59CB\u5316\u6216\u6269\u5BB9\u64CD\u4F5C
     * -1\u4EE3\u8868\u6B63\u5728\u521D\u59CB\u5316
     * -N \u8868\u793A\u6709N-1\u4E2A\u7EBF\u7A0B\u6B63\u5728\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C
     * \u6B63\u6570\u62160\u4EE3\u8868hash\u8868\u8FD8\u6CA1\u6709\u88AB\u521D\u59CB\u5316\uFF0C\u8FD9\u4E2A\u6570\u503C\u8868\u793A\u521D\u59CB\u5316\u6216\u4E0B\u4E00\u6B21\u8FDB\u884C\u6269\u5BB9\u7684\u5927\u5C0F
     * Table initialization and resizing control.  When negative, the
     * table is being initialized or resized: -1 for initialization,
     * else -(1 + the number of active resizing threads).  Otherwise,
     * when table is null, holds the initial table size to use upon
     * creation, or 0 for default. After initialization, holds the
     * next element count value upon which to resize the table.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> sizeCtl<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The next table index (plus one) to split while resizing.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> transferIndex<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Spinlock (locked via CAS) used when resizing and/or creating CounterCells.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> cellsBusy<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Table of counter cells. When non-null, size is a power of 2.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">CounterCell</span><span class="token punctuation">[</span><span class="token punctuation">]</span> counterCells<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="queue" tabindex="-1"><a class="header-anchor" href="#queue" aria-hidden="true">#</a> Queue</h2><blockquote><p>\u5148\u8FDB\u5148\u51FA</p></blockquote><h3 id="priorityqueue" tabindex="-1"><a class="header-anchor" href="#priorityqueue" aria-hidden="true">#</a> <strong>PriorityQueue</strong></h3><table><thead><tr><th>\u7279\u70B9</th><th>\u539F\u56E0\uFF08\u6E90\u7801\uFF09</th><th></th></tr></thead><tbody><tr><td>\u5E95\u5C42\u4E8C\u53C9\u5C0F\u9876\u5806</td><td></td><td></td></tr><tr><td>\u4FDD\u8BC1\u6BCF\u6B21\u53D6\u51FA\u7684\u5143\u7D20\u662F\u961F\u5217\u4E2D\u6743\u503C\u6700\u5C0F\u7684</td><td>\u65B9\u6CD5\u4E2D\u6709synchronized\uFF0C<strong>\u6240\u4EE5\u6027\u80FD\u4E0D\u5982ArrayList</strong></td><td></td></tr><tr><td>\u975Enull</td><td><a href="#%E6%89%A9%E5%AE%B9%E4%B8%BA%E5%8E%9F%E6%9D%A5%E4%B8%A4%E5%80%8D">int newCapacity = oldCapacity + ((capacityIncrement &gt; 0) ? capacityIncrement : oldCapacity);</a></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="\u5DE5\u5177\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5177\u7C7B" aria-hidden="true">#</a> \u5DE5\u5177\u7C7B</h2><h3 id="collections" tabindex="-1"><a class="header-anchor" href="#collections" aria-hidden="true">#</a> Collections</h3><p>\u786E\u4FDD\u5185\u5BB9\u4E0D\u88AB\u4FEE\u6539</p><ul><li>unmodifiableMap</li><li>unmodifiableList</li><li>unmodifiableSet</li></ul><h3 id="arrays" tabindex="-1"><a class="header-anchor" href="#arrays" aria-hidden="true">#</a> Arrays</h3><h3 id="comparable\u548Ccomparator" tabindex="-1"><a class="header-anchor" href="#comparable\u548Ccomparator" aria-hidden="true">#</a> Comparable\u548CComparator</h3><p>\u200B Comparable\u662F\u6392\u5E8F\u63A5\u53E3\uFF1B\u82E5\u4E00\u4E2A\u7C7B\u5B9E\u73B0\u4E86Comparable\u63A5\u53E3\uFF0C\u5C31\u610F\u5473\u7740\u201C\u8BE5\u7C7B\u652F\u6301\u6392\u5E8F\u201D\u3002\u800CComparator\u662F\u6BD4\u8F83\u5668\uFF1B\u6211\u4EEC\u82E5\u9700\u8981\u63A7\u5236\u67D0\u4E2A\u7C7B\u7684\u6B21\u5E8F\uFF0C\u53EF\u4EE5\u5EFA\u7ACB\u4E00\u4E2A\u201C\u8BE5\u7C7B\u7684\u6BD4\u8F83\u5668\u201D\u6765\u8FDB\u884C\u6392\u5E8F\u3002Comparable\u76F8\u5F53\u4E8E\u201C\u5185\u90E8\u6BD4\u8F83\u5668\u201D\uFF0C\u800CComparator\u76F8\u5F53\u4E8E\u201C\u5916\u90E8\u6BD4\u8F83\u5668\u201D\u3002</p><h2 id="\u5BB9\u5668\u7EFC\u5408\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u5BB9\u5668\u7EFC\u5408\u95EE\u9898" aria-hidden="true">#</a> \u5BB9\u5668\u7EFC\u5408\u95EE\u9898</h2><h1 id="juc" tabindex="-1"><a class="header-anchor" href="#juc" aria-hidden="true">#</a> JUC</h1><blockquote><p><strong>\u95EE\u9898\uFF1A\u4EC0\u4E48\u65F6\u5019\u8BE5\u7528\u591A\u7EBF\u7A0B\uFF1F</strong></p></blockquote><p>\u200B \u5728Java\u4E2D\uFF0C\u7EBF\u7A0B\u90E8\u5206\u662F\u4E00\u4E2A\u91CD\u70B9\uFF0C\u672C\u7BC7\u6587\u7AE0\u8BF4\u7684JUC\u4E5F\u662F\u5173\u4E8E\u7EBF\u7A0B\u7684\u3002JUC\u5C31\u662Fjava.util .concurrent\u5DE5\u5177\u5305\u7684\u7B80\u79F0\u3002\u8FD9\u662F\u4E00\u4E2A\u5904\u7406\u7EBF\u7A0B\u7684\u5DE5\u5177\u5305\uFF0CJDK 1.5\u5F00\u59CB\u51FA\u73B0\u7684\u3002</p><h2 id="\u591A\u7EBF\u7A0B\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u591A\u7EBF\u7A0B\u57FA\u7840" aria-hidden="true">#</a> \u591A\u7EBF\u7A0B\u57FA\u7840</h2><ul><li><p>\u8FDB\u7A0B(Process)</p><ul><li><p>\u628A\u4E00\u4E2A\u4EFB\u52A1\u79F0\u4E3A\u4E00\u4E2A\u8FDB\u7A0B</p><ul><li>\u8FDB\u7A0B\u5185\u90E8\u8FD8\u9700\u8981\u540C\u65F6\u6267\u884C\u591A\u4E2A\u5B50\u4EFB\u52A1\u79F0\u4E3A\u7EBF\u7A0B</li></ul></li><li><p>\u8FDB\u7A0B\u548C\u7EBF\u7A0B\u7684\u5173\u7CFB\u5C31\u662F\uFF1A\u4E00\u4E2A\u8FDB\u7A0B\u53EF\u4EE5\u5305\u542B\u4E00\u4E2A\u6216\u591A\u4E2A\u7EBF\u7A0B\uFF08Thread\uFF09\uFF0C\u4F46\u81F3\u5C11\u4F1A\u6709\u4E00\u4E2A\u7EBF\u7A0B\u3002</p></li><li><p>\u591A\u8FDB\u7A0B\u6A21\u5F0F\uFF08\u6BCF\u4E2A\u8FDB\u7A0B\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\uFF09</p></li><li><p>\u591A\u7EBF\u7A0B\u6A21\u5F0F\uFF08\u4E00\u4E2A\u8FDB\u7A0B\u6709\u591A\u4E2A\u7EBF\u7A0B\uFF09</p></li><li><p>\u591A\u8FDB\u7A0B\uFF0B\u591A\u7EBF\u7A0B\u6A21\u5F0F\uFF08\u590D\u6742\u5EA6\u6700\u9AD8\uFF09</p></li></ul></li><li><p>\u548C\u591A\u7EBF\u7A0B\u76F8\u6BD4\uFF0C <strong>\u591A\u8FDB\u7A0B\u7F3A\u70B9\u5728\u4E8E</strong>\uFF1A\u521B\u5EFA\u8FDB\u7A0B\u6BD4\u521B\u5EFA\u7EBF\u7A0B\u5F00\u9500\u5927\uFF0C\u5C24\u5176\u662F\u5728Windows\u7CFB\u7EDF\u4E0A\uFF1B\u8FDB\u7A0B\u95F4\u901A\u4FE1\u6BD4\u7EBF\u7A0B\u95F4\u901A\u4FE1\u8981\u6162\uFF0C\u56E0\u4E3A\u7EBF\u7A0B\u95F4\u901A\u4FE1\u5C31\u662F\u8BFB\u5199\u540C\u4E00\u4E2A\u53D8\u91CF\uFF0C\u901F\u5EA6\u5F88\u5FEB\u3002 <strong>\u591A\u8FDB\u7A0B\u7684\u4F18\u70B9\u5728\u4E8E</strong>\uFF1A\u591A\u8FDB\u7A0B\u7A33\u5B9A\u6027\u6BD4\u591A\u7EBF\u7A0B\u9AD8\uFF0C\u56E0\u4E3A\u5728\u591A\u8FDB\u7A0B\u7684\u60C5\u51B5\u4E0B\uFF0C\u4E00\u4E2A\u8FDB\u7A0B\u5D29\u6E83\u4E0D\u4F1A\u5F71\u54CD\u5176\u4ED6\u8FDB\u7A0B\uFF0C\u800C\u5728\u591A\u7EBF\u7A0B\u7684\u60C5\u51B5\u4E0B\uFF0C\u4EFB\u4F55\u4E00\u4E2A\u7EBF\u7A0B\u5D29\u6E83\u4F1A\u76F4\u63A5\u5BFC\u81F4\u6574\u4E2A\u8FDB\u7A0B\u5D29\u6E83\u3002</p></li><li><p>\u591A\u7EBF\u7A0B</p><ul><li>Java\u8BED\u8A00\u5185\u7F6E\u4E86\u591A\u7EBF\u7A0B\u652F\u6301\uFF1A\u4E00\u4E2AJava\u7A0B\u5E8F\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2AJVM\u8FDB\u7A0B\uFF0CJVM\u8FDB\u7A0B\u7528\u4E00\u4E2A\u4E3B\u7EBF\u7A0B\u6765\u6267\u884Cmain()\u65B9\u6CD5\uFF0C\u5728main()\u65B9\u6CD5\u5185\u90E8\uFF0C\u6211\u4EEC\u53C8\u53EF\u4EE5\u542F\u52A8\u591A\u4E2A\u7EBF\u7A0B\u3002\u6B64\u5916\uFF0CJVM\u8FD8\u6709\u8D1F\u8D23\u5783\u573E\u56DE\u6536\u7684\u5176\u4ED6\u5DE5\u4F5C\u7EBF\u7A0B\u7B49\u3002</li></ul></li></ul><p>\u56E0\u6B64\uFF0C\u5BF9\u4E8E\u5927\u591A\u6570Java\u7A0B\u5E8F\u6765\u8BF4\uFF0C\u6211\u4EEC\u8BF4\u591A\u4EFB\u52A1\uFF0C\u5B9E\u9645\u4E0A\u662F\u8BF4\u5982\u4F55\u4F7F\u7528\u591A\u7EBF\u7A0B\u5B9E\u73B0\u591A\u4EFB\u52A1\u3002</p><p>\u200B \u548C\u5355\u7EBF\u7A0B\u76F8\u6BD4\uFF0C\u591A\u7EBF\u7A0B\u7F16\u7A0B\u7684\u7279\u70B9\u5728\u4E8E\uFF1A\u591A\u7EBF\u7A0B\u7ECF\u5E38\u9700\u8981\u8BFB\u5199\u5171\u4EAB\u6570\u636E\uFF0C\u5E76\u4E14\u9700\u8981\u540C\u6B65\u3002\u4F8B\u5982\uFF0C\u64AD\u653E\u7535\u5F71\u65F6\uFF0C\u5C31\u5FC5\u987B\u7531\u4E00\u4E2A\u7EBF\u7A0B\u64AD\u653E\u89C6\u9891\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u64AD\u653E\u97F3\u9891\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u9700\u8981\u534F\u8C03\u8FD0\u884C\uFF0C\u5426\u5219\u753B\u9762\u548C\u58F0\u97F3\u5C31\u4E0D\u540C\u6B65\u3002\u56E0\u6B64\uFF0C\u591A\u7EBF\u7A0B\u7F16\u7A0B\u7684\u590D\u6742\u5EA6\u9AD8\uFF0C\u8C03\u8BD5\u66F4\u56F0\u96BE\u3002</p><p>\u200B Java\u591A\u7EBF\u7A0B\u7F16\u7A0B\u7684\u7279\u70B9\u53C8\u5728\u4E8E\uFF1A\u591A\u7EBF\u7A0B\u6A21\u578B\u662FJava\u7A0B\u5E8F\u6700\u57FA\u672C\u7684\u5E76\u53D1\u6A21\u578B\uFF1B\u540E\u7EED\u8BFB\u5199\u7F51\u7EDC\u3001\u6570\u636E\u5E93\u3001Web\u5F00\u53D1\u7B49\u90FD\u4F9D\u8D56Java\u591A\u7EBF\u7A0B\u6A21\u578B\u3002</p><h2 id="\u7BA1\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7BA1\u7A0B" aria-hidden="true">#</a> \u7BA1\u7A0B</h2><p>\u200B \u7BA1\u7A0B(monitor)\u662F\u4FDD\u8BC1\u4E86<strong>\u540C\u4E00\u65F6\u523B\u53EA\u6709\u4E00\u4E2A\u8FDB\u7A0B\u5728\u7BA1\u7A0B</strong>\u5185\u6D3B\u52A8,\u5373\u7BA1\u7A0B\u5185\u5B9A\u4E49\u7684\u64CD\u4F5C\u5728\u540C\u4E00\u65F6\u523B\u53EA\u88AB\u4E00\u4E2A\u8FDB\u7A0B\u8C03\u7528(\u7531\u7F16\u8BD1\u5668\u5B9E\u73B0).\u4F46\u662F\u8FD9\u6837\u5E76\u4E0D\u80FD\u4FDD\u8BC1\u8FDB\u7A0B\u4EE5\u8BBE\u8BA1\u7684\u987A\u5E8F\u6267\u884C\u3002JVM\u4E2D\u540C\u6B65\u662F\u57FA\u4E8E\u8FDB\u5165\u548C\u9000\u51FA\u7BA1\u7A0B(monitor)\u5BF9\u8C61\u5B9E\u73B0\u7684\uFF0C\u6BCF\u4E2A\u5BF9\u8C61\u90FD\u4F1A\u6709\u4E00\u4E2A\u7BA1\u7A0B(monitor)\u5BF9\u8C61\uFF0C\u7BA1\u7A0B(monitor)\u4F1A\u968F\u7740java\u5BF9\u8C61\u4E00\u540C\u521B\u5EFA\u548C\u9500\u6BC1\u3002\u6267\u884C\u7EBF\u7A0B\u9996\u5148\u8981\u6301\u6709\u7BA1\u7A0B\u5BF9\u8C61\uFF0C\u7136\u540E\u624D\u80FD\u6267\u884C\u65B9\u6CD5\uFF0C\u5F53\u65B9\u6CD5\u5B8C\u6210\u4E4B\u540E\u4F1A\u91CA\u653E\u7BA1\u7A0B\uFF0C\u65B9\u6CD5\u5728\u6267\u884C\u65F6\u5019\u4F1A\u6301\u6709\u7BA1\u7A0B\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u65E0\u6CD5\u518D\u83B7\u53D6\u540C\u4E00\u4E2A\u7BA1\u7A0B</p><h2 id="\u663E\u5F0F\u521B\u5EFA\u65B0\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u663E\u5F0F\u521B\u5EFA\u65B0\u7EBF\u7A0B" aria-hidden="true">#</a> \u663E\u5F0F\u521B\u5EFA\u65B0\u7EBF\u7A0B</h2><ul><li><strong>\u7EE7\u627FThread\u7C7B</strong>\uFF0C\u5B9E\u4F8B\u5316\u4E00\u4E2AThread\u5B9E\u4F8B\u5E76\u91CD\u5199run\uFF08\uFF09\uFF0C\u7136\u540E\u8C03\u7528\u5B83\u7684start()\u65B9\u6CD5\uFF1A <ul><li><p>\u5E0C\u671B\u65B0\u7EBF\u7A0B\u80FD\u6267\u884C\u6307\u5B9A\u7684\u4EE3\u7801</p><ul><li>\u65B9\u6CD5\u4E00\uFF1A\u4ECEThread\u6D3E\u751F\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7C7B\uFF0C\u7136\u540E\u8986\u5199run()\u65B9\u6CD5\uFF1A</li><li>\u65B9\u6CD5\u4E8C\uFF1A\u521B\u5EFAThread\u5B9E\u4F8B\u65F6\uFF0C\u4F20\u5165\u4E00\u4E2ARunnable\u5B9E\u4F8B\uFF1A</li><li>\u7EBF\u7A0B\u7684\u4F18\u5148\u7EA7 \u53EF\u4EE5\u5BF9\u7EBF\u7A0B\u8BBE\u5B9A\u4F18\u5148\u7EA7\uFF0C\u8BBE\u5B9A\u4F18\u5148\u7EA7\u7684\u65B9\u6CD5\u662F\uFF1A</li></ul></li></ul></li></ul><p>Thread.setPriority(int n) // 1~10, \u9ED8\u8BA4\u503C5</p><ul><li><strong>\u5B9E\u73B0Runnable\u63A5\u53E3</strong></li><li>\u4E0ECallable\u4E0D\u540C <ul><li>\u65E0\u8FD4\u56DE\u503C</li><li>\u65E0\u8FD4\u56DE\u5F02\u5E38</li><li>\u5B9E\u73B0run()</li></ul></li><li><strong>\u5B9E\u73B0Callable\u63A5\u53E3</strong>\uFF08jdk1.5\uFF09 <ul><li>\u5B9E\u73B0 Callable\u63A5\u53E3 1.\u5B9E\u73B0 Callable\u63A5\u53E3,\u9700\u8981\u8FD4\u56DE\u503C\u7C7B\u578B 2.\u91CD\u5199<strong>call</strong>\u65B9\u6CD5,\u9700\u8981\u629B\u51FA\u5F02\u5E38 3.\u521B\u5EFA\u76EE\u6807\u5BF9\u8C61 4.\u521B\u5EFA\u6267\u884C\u670D\u52A1: Executorservice ser= Executors. newfixed Threadpool(1) 5.\u63D0\u4EA4\u6267\u884C: Future&lt; Boolean&gt; result1=ser. submit(t1); 6.\u83B7\u53D6<strong>\u7ED3\u679C</strong>: boolean r1= result1.get() 7.\u5173\u95ED\u670D\u52A1:ser. shutdownNow()</li></ul></li></ul><p>\u603B\u7ED3\uFF1AThread\u4E3A\u57FA\uFF0C\u53E6\u5916\u4E24\u4E2A\u901A\u8FC7Thread \u5B9E\u4F8B\u5B9E\u73B0\uFF0C\u901A\u8FC7\u63A5\u53E3\u907F\u514D\u5355\u7EE7\u627F\u5C40\u9650\u6027\uFF0C\u7075\u6D3B\u65B9\u4FBF\u540C\u4E00\u4E2A\u5BF9\u8C61\u88AB\u591A\u4E2A\u7EBF\u7A0B\u4F7F\u7528\uFF0C\u533A\u522B\u5728Callable \u6709<strong>\u8FD4\u56DE\u503C</strong>\uFF0C\u8FD4\u56DE\u503C\u901A\u8FC7<strong>FutureTask</strong>\u5C01\u88C5\u518D\u7ED9Thread\u5B9E\u4F8B\uFF0C\u800CRunnable\u5B9E\u4F8B\u76F4\u63A5\u7ED9Thread \u5B9E\u4F8B\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">pers<span class="token punctuation">.</span>lxl<span class="token punctuation">.</span>mylearnproject<span class="token punctuation">.</span>javase<span class="token punctuation">.</span>thread</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Callable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ExecutionException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">FutureTask</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u5FEB\u901F\u4EA4\u66FF\u6267\u884C\u770B\u8D77\u6765\u50CF\u662F\u540C\u65F6\u6267\u884C
 * \u8FDB\u7A0B\u548C\u7EBF\u7A0B\u7684\u5173\u7CFB\uFF1A\u4E00\u4E2A\u8FDB\u7A0B\u53EF\u4EE5\u5305\u542B\u4E00\u4E2A\u6216\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u4F46\u81F3\u5C11\u4F1A\u6709\u4E00\u4E2A\u7EBF\u7A0B
 * \u591A\u8FDB\u7A0B\u6A21\u5F0F\uFF08\u6BCF\u4E2A\u8FDB\u7A0B\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\uFF09
 * \u591A\u7EBF\u7A0B\u6A21\u5F0F\uFF08\u4E00\u4E2A\u8FDB\u7A0B\u6709\u591A\u4E2A\u7EBF\u7A0B\uFF09
 * \u591A\u8FDB\u7A0B\uFF0B\u591A\u7EBF\u7A0B\u6A21\u5F0F\uFF08\u590D\u6742\u5EA6\u6700\u9AD8\uFF09
 * \u548C\u591A\u7EBF\u7A0B\u76F8\u6BD4\uFF0C\u591A\u8FDB\u7A0B\u7684\u7F3A\u70B9\u5728\u4E8E\uFF1A
 * \u521B\u5EFA\u8FDB\u7A0B\u6BD4\u521B\u5EFA\u7EBF\u7A0B\u5F00\u9500\u5927\uFF0C\u5C24\u5176\u662F\u5728Windows\u7CFB\u7EDF\u4E0A\uFF1B
 * \u8FDB\u7A0B\u95F4\u901A\u4FE1\u6BD4\u7EBF\u7A0B\u95F4\u901A\u4FE1\u8981\u6162\uFF0C\u56E0\u4E3A\u7EBF\u7A0B\u95F4\u901A\u4FE1\u5C31\u662F\u8BFB\u5199\u540C\u4E00\u4E2A\u53D8\u91CF\uFF0C\u901F\u5EA6\u5F88\u5FEB\u3002
 * \u591A\u8FDB\u7A0B\u7684\u4F18\u70B9\u5728\u4E8E\uFF1A
 * \u591A\u8FDB\u7A0B\u7A33\u5B9A\u6027\u6BD4\u591A\u7EBF\u7A0B\u9AD8\uFF0C\u56E0\u4E3A\u5728\u591A\u8FDB\u7A0B\u7684\u60C5\u51B5\u4E0B\uFF0C\u4E00\u4E2A\u8FDB\u7A0B\u5D29\u6E83\u4E0D\u4F1A\u5F71\u54CD\u5176\u4ED6\u8FDB\u7A0B\uFF0C\u800C\u5728\u591A\u7EBF\u7A0B\u7684\u60C5\u51B5\u4E0B\uFF0C\u4EFB\u4F55\u4E00\u4E2A\u7EBF\u7A0B\u5D29\u6E83\u4F1A\u76F4\u63A5\u5BFC\u81F4\u6574\u4E2A\u8FDB\u7A0B\u5D29\u6E83\u3002
 * Java\u8BED\u8A00\u5185\u7F6E\u4E86\u591A\u7EBF\u7A0B\u652F\u6301\uFF1A\u4E00\u4E2AJava\u7A0B\u5E8F\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2AJVM\u8FDB\u7A0B\uFF0CJVM\u8FDB\u7A0B\u7528\u4E00\u4E2A\u4E3B\u7EBF\u7A0B\u6765\u6267\u884Cmain()\u65B9\u6CD5\uFF0C\u5728main()\u65B9\u6CD5\u5185\u90E8\uFF0C\u6211\u4EEC\u53C8\u53EF\u4EE5\u542F\u52A8\u591A\u4E2A\u7EBF\u7A0B\u3002\u6B64\u5916\uFF0CJVM\u8FD8\u6709\u8D1F\u8D23\u5783\u573E\u56DE\u6536\u7684\u5176\u4ED6\u5DE5\u4F5C\u7EBF\u7A0B\u7B49\u3002
 * \u56E0\u6B64\uFF0C\u5BF9\u4E8E\u5927\u591A\u6570Java\u7A0B\u5E8F\u6765\u8BF4\uFF0C\u6211\u4EEC\u8BF4\u591A\u4EFB\u52A1\uFF0C\u5B9E\u9645\u4E0A\u662F\u8BF4\u5982\u4F55\u4F7F\u7528\u591A\u7EBF\u7A0B\u5B9E\u73B0\u591A\u4EFB\u52A1\u3002
 * \u548C\u5355\u7EBF\u7A0B\u76F8\u6BD4\uFF0C\u591A\u7EBF\u7A0B\u7F16\u7A0B\u7684\u7279\u70B9\u5728\u4E8E\uFF1A\u591A\u7EBF\u7A0B\u7ECF\u5E38\u9700\u8981\u8BFB\u5199\u5171\u4EAB\u6570\u636E\uFF0C\u5E76\u4E14\u9700\u8981\u540C\u6B65\u3002\u4F8B\u5982\uFF0C\u64AD\u653E\u7535\u5F71\u65F6\uFF0C\u5C31\u5FC5\u987B\u7531\u4E00\u4E2A\u7EBF\u7A0B\u64AD\u653E\u89C6\u9891\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u64AD\u653E\u97F3\u9891\uFF0C\u4E24\u4E2A\u7EBF\u7A0B\u9700\u8981\u534F\u8C03\u8FD0\u884C\uFF0C\u5426\u5219\u753B\u9762\u548C\u58F0\u97F3\u5C31\u4E0D\u540C\u6B65\u3002\u56E0\u6B64\uFF0C\u591A\u7EBF\u7A0B\u7F16\u7A0B\u7684\u590D\u6742\u5EA6\u9AD8\uFF0C\u8C03\u8BD5\u66F4\u56F0\u96BE\u3002
 * Java\u591A\u7EBF\u7A0B\u7F16\u7A0B\u7684\u7279\u70B9\u53C8\u5728\u4E8E\uFF1A
 * \u591A\u7EBF\u7A0B\u6A21\u578B\u662FJava\u7A0B\u5E8F\u6700\u57FA\u672C\u7684\u5E76\u53D1\u6A21\u578B\uFF1B
 * \u540E\u7EED\u8BFB\u5199\u7F51\u7EDC\u3001\u6570\u636E\u5E93\u3001Web\u5F00\u53D1\u7B49\u90FD\u4F9D\u8D56Java\u591A\u7EBF\u7A0B\u6A21\u578B\u3002
 *
 * <span class="token keyword">@author</span> lxl
 **/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloClass</span> <span class="token punctuation">{</span>

    <span class="token comment">//\u5E0C\u671B\u65B0\u7EBF\u7A0B\u80FD\u6267\u884C\u6307\u5B9A\u7684\u4EE3\u7801\uFF0C\u6709\u4EE5\u4E0B\u51E0\u79CD\u65B9\u6CD5\uFF1A</span>

    <span class="token doc-comment comment">/**
     * \u65B9\u6CD5\u4E00\uFF1A\u4ECEThread\u6D3E\u751F\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7C7B\uFF0C\u7136\u540E\u8986\u5199run()\u65B9\u6CD5\uFF0C\u542F\u52A8\uFF1A\u5B50\u7C7B\u5BF9\u8C61.start(),\u4E3A\u907F\u514DOOP\u5355\u7EE7\u627F\u5C40\u9650\u6027\uFF0C\u4E0D\u5EFA\u8BAE\u4F7F\u7528
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;start new thread!extends Thread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u65B9\u6CD5\u4E8C\uFF1A\u521B\u5EFAThread\u5B9E\u4F8B\u65F6\uFF0C\u4F20\u5165\u4E00\u4E2ARunnable\u5B9E\u4F8B\uFF1A\u542F\u52A8\uFF1A\u4F20\u5165\u76EE\u6807\u5BF9\u8C61+Thread\u5BF9\u8C61.start()\uFF0C\u5EFA\u8BAE\u4F7F\u7528:\u907F\u514D\u5355\u7EE7\u627F\u5C40\u9650\u6027\uFF0C\u7075\u6D3B\u65B9\u4FBF\u540C\u4E00\u4E2A\u5BF9\u8C61\u88AB\u591A\u4E2A\u7EBF\u7A0B\u4F7F\u7528
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyRunnable</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;start new thread!implements Runnable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;thread end.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u65B9\u6CD5\u4E09\uFF1A\u5B9E\u73B0Callable\u63A5\u53E3,\u4E0ERunnable\u76F8\u6BD4,Callable\u53EF\u4EE5\u6709\u8FD4\u56DE\u503C,\u8FD4\u56DE\u503C\u901A\u8FC7FutureTask\u3010\u672A\u6765\u4EFB\u52A1\u3011\u8FDB\u884C\u5C01\u88C5
     */</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyCallable</span> <span class="token keyword">implements</span> <span class="token class-name">Callable</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">123</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token comment">//\u76F8\u6BD4\u4E4B\u4E0B,\u63A5\u53E3\u53EF\u4EE5\u5B9E\u73B0\u591A\u4E2A,\u800CThread\u53EA\u80FD\u5355\u7EE7\u627F,</span>
<span class="token comment">// \u7EE7\u627F\u6574\u4E2AThrea\u7C7B\u5F00\u9500\u8FC7\u5927,\u6240\u4EE5\u5B9E\u73B0\u63A5\u53E3\u65B9\u5F0F\u66F4\u597D\u4E00\u4E9B</span>


    <span class="token doc-comment comment">/**
     * \u5F53Java\u7A0B\u5E8F\u542F\u52A8\u7684\u65F6\u5019\uFF0C\u5B9E\u9645\u4E0A\u662F\u542F\u52A8\u4E86\u4E00\u4E2AJVM\u8FDB\u7A0B\uFF0C\u7136\u540E\uFF0CJVM\u542F\u52A8\u4E3B\u7EBF\u7A0B\u6765\u6267\u884Cmain()\u65B9\u6CD5\u3002\u5728main()\u65B9\u6CD5\u4E2D\uFF0C\u6211\u4EEC\u53C8\u53EF\u4EE5\u542F\u52A8\u5176\u4ED6\u7EBF\u7A0B\u3002
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u521B\u5EFA\u65B0\u7EBF\u7A0B</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main start...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//Thread thread = new Thread();//\u4E0D\u80FD\u6267\u884C\u6307\u5B9A\u4EE3\u7801</span>


<span class="token comment">//extends Thread==============</span>
        <span class="token comment">// Thread thread = new MyThread();</span>

<span class="token comment">//implements Callable=============</span>
        <span class="token class-name">MyCallable</span> mc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCallable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FutureTask</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ft <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>mc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>ft<span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ft<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//lambda Callbale</span>
        <span class="token class-name">FutureTask</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> futureTask2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;come in callbale&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">111</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">new</span> <span class="token function">thread</span><span class="token punctuation">(</span>futureTask2<span class="token punctuation">,</span><span class="token string">&quot;hahha&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hahha come in callbale</span>
	    
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>futuretask2<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;wait....&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>futureTask2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//111</span>
<span class="token comment">//implements Runnable===============</span>
        <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//Thread thread = new Thread(() -&gt; {System.out.println(&quot;start new thread!&quot;); });//Java8\u5F15\u5165\u7684lambda\u5199\u6CD5</span>
        thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u542F\u52A8\u65B0\u7EBF\u7A0B\uFF0C\u76F4\u63A5\u8C03\u7528Thread\u5B9E\u4F8B\u7684run()\u65B9\u6CD5\u662F\u65E0\u6548\u7684\uFF0C\u7EBF\u7A0B\u5F00\u542F\u4E0D\u4E00\u5B9A\u7ACB\u5373\u6267\u884C\uFF0C\u7531CPU\u8C03\u5EA6\u51B3\u5B9A</span>


<span class="token comment">//        Thread.setPriority(int n) // 1~10, \u9ED8\u8BA4\u503C5</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            sleep() \u53EF\u80FD\u4F1A\u629B\u51FA InterruptedException\uFF0C\u56E0\u4E3A\u5F02\u5E38\u4E0D\u80FD\u8DE8\u7EBF\u7A0B\u4F20\u64AD\u56DE main() \u4E2D\uFF0C\u56E0\u6B64\u5FC5\u987B\u5728\u672C\u5730\u8FDB\u884C\u5904\u7406\u3002\u7EBF\u7A0B\u4E2D\u629B\u51FA\u7684\u5176\u5B83\u5F02\u5E38\u4E5F\u540C\u6837\u9700\u8981\u5728\u672C\u5730\u8FDB\u884C\u5904\u7406\u3002</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main end...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7EBF\u7A0B\u7684\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u7684\u72B6\u6001" aria-hidden="true">#</a> \u7EBF\u7A0B\u7684\u72B6\u6001</h2><ul><li>\u5728Java\u7A0B\u5E8F\u4E2D\uFF0C\u4E00\u4E2A\u7EBF\u7A0B\u5BF9\u8C61\u53EA\u80FD\u8C03\u7528\u4E00\u6B21start()\u65B9\u6CD5\u542F\u52A8\u65B0\u7EBF\u7A0B\uFF0C\u5E76\u5728\u65B0\u7EBF\u7A0B\u4E2D\u6267\u884Crun()\u65B9\u6CD5\u3002\u4E00\u65E6run()\u65B9\u6CD5\u6267\u884C\u5B8C\u6BD5\uFF0C\u7EBF\u7A0B\u5C31\u7ED3\u675F\u4E86\u3002\u56E0\u6B64\uFF0CJava\u7EBF\u7A0B\u7684\u72B6\u6001\u6709\u4EE5\u4E0B\u51E0\u79CD\uFF1A</li></ul><p>New\uFF1A\u65B0\u521B\u5EFA\u7684\u7EBF\u7A0B\uFF0C\u5C1A\u672A\u6267\u884C\uFF1B Runnable\uFF1A\u8FD0\u884C\u4E2D\u7684\u7EBF\u7A0B\uFF0C\u6B63\u5728\u6267\u884Crun()\u65B9\u6CD5\u7684Java\u4EE3\u7801\uFF1B Blocked\uFF1A\u8FD0\u884C\u4E2D\u7684\u7EBF\u7A0B\uFF0C\u56E0\u4E3A\u67D0\u4E9B\u64CD\u4F5C\u88AB\u963B\u585E\u800C\u6302\u8D77\uFF1B Waiting\uFF08<strong>\u4E0D\u89C1\u4E0D\u6563</strong>\uFF09\uFF1A\u8FD0\u884C\u4E2D\u7684\u7EBF\u7A0B\uFF0C\u56E0\u4E3A\u67D0\u4E9B\u64CD\u4F5C\u5728\u7B49\u5F85\u4E2D\uFF1B Timed Waiting\uFF08<strong>\u8FC7\u65F6\u4E0D\u5019</strong>\uFF09\uFF1A\u8FD0\u884C\u4E2D\u7684\u7EBF\u7A0B\uFF0C\u56E0\u4E3A\u6267\u884Csleep()\u65B9\u6CD5\u6B63\u5728\u8BA1\u65F6\u7B49\u5F85\uFF1B Terminated\uFF1A\u7EBF\u7A0B\u5DF2\u7EC8\u6B62\uFF0C\u56E0\u4E3Arun()\u65B9\u6CD5\u6267\u884C\u5B8C\u6BD5\u3002</p><img src="http://qnimg.gisfsde.com/image-20220305164846160.png" alt="image-20220305164846160" style="zoom:80%;"><p><img src="http://qnimg.gisfsde.com/image-20220305200131513.png" alt="image-20220305200131513" loading="lazy"></p><ul><li>\u7EBF\u7A0B\u7EC8\u6B62\u7684\u539F\u56E0\u6709\uFF1A</li></ul><p>\u7EBF\u7A0B\u6B63\u5E38\u7EC8\u6B62\uFF1Arun()\u65B9\u6CD5\u6267\u884C\u5230return\u8BED\u53E5\u8FD4\u56DE\uFF1B \u7EBF\u7A0B\u610F\u5916\u7EC8\u6B62\uFF1Arun()\u65B9\u6CD5\u56E0\u4E3A\u672A\u6355\u83B7\u7684\u5F02\u5E38\u5BFC\u81F4\u7EBF\u7A0B\u7EC8\u6B62\uFF1B \u5BF9\u67D0\u4E2A\u7EBF\u7A0B\u7684Thread\u5B9E\u4F8B\u8C03\u7528stop()\u65B9\u6CD5\u5F3A\u5236\u7EC8\u6B62\uFF08\u5F3A\u70C8\u4E0D\u63A8\u8350\u4F7F\u7528\uFF09\u3002</p><ul><li>\u901A\u8FC7\u5BF9\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u5BF9\u8C61\u8C03\u7528join()\u65B9\u6CD5\u53EF\u4EE5\u7B49\u5F85\u5176\u6267\u884C\u7ED3\u675F\uFF1B</li></ul><p>\u53EF\u4EE5\u6307\u5B9A\u7B49\u5F85\u65F6\u95F4\uFF0C\u8D85\u8FC7\u7B49\u5F85\u65F6\u95F4\u7EBF\u7A0B\u4ECD\u7136\u6CA1\u6709\u7ED3\u675F\u5C31\u4E0D\u518D\u7B49\u5F85\uFF1B</p><p>\u5BF9\u5DF2\u7ECF\u8FD0\u884C\u7ED3\u675F\u7684\u7EBF\u7A0B\u8C03\u7528join()\u65B9\u6CD5\u4F1A\u7ACB\u523B\u8FD4\u56DE\u3002</p><ul><li><p>\u4E2D\u65AD\u7EBF\u7A0B</p><ul><li>\u5BF9\u76EE\u6807\u7EBF\u7A0B\u8C03\u7528interrupt()\u65B9\u6CD5\u53EF\u4EE5\u8BF7\u6C42\u4E2D\u65AD\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u76EE\u6807\u7EBF\u7A0B\u901A\u8FC7\u68C0\u6D4BisInterrupted()\u6807\u5FD7\u83B7\u53D6\u81EA\u8EAB\u662F\u5426\u5DF2\u4E2D\u65AD\u3002\u5982\u679C\u76EE\u6807\u7EBF\u7A0B\u5904\u4E8E\u7B49\u5F85\u72B6\u6001\uFF0C\u8BE5\u7EBF\u7A0B\u4F1A\u6355\u83B7\u5230InterruptedException\uFF1B \u76EE\u6807\u7EBF\u7A0B\u68C0\u6D4B\u5230isInterrupted()\u4E3Atrue\u6216\u8005\u6355\u83B7\u4E86InterruptedException\u90FD\u5E94\u8BE5\u7ACB\u523B\u7ED3\u675F\u81EA\u8EAB\u7EBF\u7A0B\uFF1B \u901A\u8FC7\u6807\u5FD7\u4F4D\u5224\u65AD\u9700\u8981\u6B63\u786E\u4F7F\u7528volatile\u5173\u952E\u5B57\uFF1B volatile\u5173\u952E\u5B57\u89E3\u51B3\u4E86\u5171\u4EAB\u53D8\u91CF\u5728\u7EBF\u7A0B\u95F4\u7684\u53EF\u89C1\u6027\u95EE\u9898\u3002</li></ul></li></ul><h2 id="\u7EBF\u7A0B\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u5C5E\u6027" aria-hidden="true">#</a> \u7EBF\u7A0B\u5C5E\u6027</h2><h3 id="\u7EBF\u7A0B\u4F18\u5148\u7EA7" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u4F18\u5148\u7EA7" aria-hidden="true">#</a> \u7EBF\u7A0B\u4F18\u5148\u7EA7</h3><ul><li>setPriority</li></ul><h3 id="\u5B88\u62A4\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5B88\u62A4\u7EBF\u7A0B" aria-hidden="true">#</a> \u5B88\u62A4\u7EBF\u7A0B</h3><ul><li><p><strong>\u5B88\u62A4\u7EBF\u7A0B\u662F\u6307\u4E3A\u5176\u4ED6\u7EBF\u7A0B\u670D\u52A1\u7684\u7EBF\u7A0B</strong>\u3002\u5728JVM\u4E2D\uFF0C\u6240\u6709\u975E\u5B88\u62A4\u7EBF\u7A0B\u90FD\u6267\u884C\u5B8C\u6BD5\u540E\uFF0C\u65E0\u8BBA\u6709\u6CA1\u6709\u5B88\u62A4\u7EBF\u7A0B\uFF0C\u865A\u62DF\u673A\u90FD\u4F1A\u81EA\u52A8\u9000\u51FA\u3002\u56E0\u6B64\uFF0CJVM\u9000\u51FA\u65F6\uFF0C\u4E0D\u5FC5\u5173\u5FC3\u5B88\u62A4\u7EBF\u7A0B\u662F\u5426\u5DF2\u7ED3\u675F\u3002\u5982\u4F55\u521B\u5EFA\u5B88\u62A4\u7EBF\u7A0B\u5462\uFF1F\u65B9\u6CD5\u548C\u666E\u901A\u7EBF\u7A0B\u4E00\u6837\uFF0C\u53EA\u662F\u5728\u8C03\u7528start()\u65B9\u6CD5\u524D\uFF0C\u8C03\u7528setDaemon(true)\u628A\u8BE5\u7EBF\u7A0B\u6807\u8BB0\u4E3A\u5B88\u62A4\u7EBF\u7A0B\uFF1A</p></li><li><p>\u5B88\u62A4\u7EBF\u7A0B\u4E0D\u80FD\u6301\u6709\u4EFB\u4F55\u9700\u8981\u5173\u95ED\u7684\u8D44\u6E90\uFF0C\u4F8B\u5982\u6253\u5F00\u6587\u4EF6\u7B49\uFF0C\u56E0\u4E3A\u865A\u62DF\u673A\u9000\u51FA\u65F6\uFF0C\u5B88\u62A4\u7EBF\u7A0B\u6CA1\u6709\u4EFB\u4F55\u673A\u4F1A\u6765\u5173\u95ED\u6587\u4EF6\uFF0C\u8FD9\u4F1A\u5BFC\u81F4\u6570\u636E\u4E22\u5931\u3002</p></li><li><p>\u5E94\u7528\uFF1AJVM\u5783\u573E\u56DE\u6536\u3001\u4E8B\u4EF6\u76D1\u542C\u3001\u5FC3\u8DF3\u76D1\u6D4B</p></li><li><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>        <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8C03\u7528start()\u65B9\u6CD5\u524D\uFF0C\u8C03\u7528setDaemon(true)\u628A\u8BE5\u7EBF\u7A0B\u6807\u8BB0\u4E3A\u5B88\u62A4\u7EBF\u7A0B</span>
        t<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5B88\u62A4\u7EBF\u7A0B\u4E0D\u80FD\u6301\u6709\u4EFB\u4F55\u9700\u8981\u5173\u95ED\u7684\u8D44\u6E90\uFF0C\u4F8B\u5982\u6253\u5F00\u6587\u4EF6\u7B49\uFF0C\u56E0\u4E3A\u865A\u62DF\u673A\u9000\u51FA\u65F6\uFF0C\u5B88\u62A4\u7EBF\u7A0B\u6CA1\u6709\u4EFB\u4F55\u673A\u4F1A\u6765\u5173\u95ED\u6587\u4EF6\uFF0C\u8FD9\u4F1A\u5BFC\u81F4\u6570\u636E\u4E22\u5931\u3002</span>
        t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      		<span class="token comment">//\u5224\u65AD\u662F\u5426\u4E3A\u5B88\u62A4\u7EBF\u7A0B</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">isDaemon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="\u7EBF\u7A0B\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u7EC4" aria-hidden="true">#</a> \u7EBF\u7A0B\u7EC4</h3><h3 id="\u5904\u7406\u672A\u6355\u83B7\u5F02\u5E38\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u672A\u6355\u83B7\u5F02\u5E38\u5904\u7406\u5668" aria-hidden="true">#</a> \u5904\u7406\u672A\u6355\u83B7\u5F02\u5E38\u5904\u7406\u5668</h3><h2 id="\u591A\u7EBF\u7A0B\u7F16\u7A0B\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u591A\u7EBF\u7A0B\u7F16\u7A0B\u6B65\u9AA4" aria-hidden="true">#</a> \u591A\u7EBF\u7A0B\u7F16\u7A0B\u6B65\u9AA4</h2><ol><li>\u521B\u5EFA\u8D44\u6E90\u7C7B\uFF0C\u5728\u8D44\u6E90\u7C7B\u521B\u5EFA\u5C5E\u6027\u548C\u64CD\u4F5C\u65B9\u6CD5</li><li>\u5728\u8D44\u6E90\u7C7B\u4E2D\u6DFB\u52A0\u64CD\u4F5C\u65B9\u6CD5\u3010\u5224\u65AD\u3001\u5E72\u6D3B\u3001\u901A\u77E5\u3011</li><li>\u521B\u5EFA\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u8C03\u7528\u8D44\u6E90\u7C7B\u7684\u64CD\u4F5C\u65B9\u6CD5</li></ol><h2 id="synchronized" tabindex="-1"><a class="header-anchor" href="#synchronized" aria-hidden="true">#</a> synchronized</h2><p>synchronized\u662FJava\u4E2D\u7684\u5173\u952E\u5B57\uFF0C\u662F\u4E00\u79CD<strong>\u540C\u6B65\u9501</strong>\u3002\u5B83\u4FEE\u9970\u7684\u5BF9\u8C61\u6709\u4EE5\u4E0B\u51E0\u79CD\uFF1A</p><ol><li>\u4FEE\u9970\u4E00\u4E2A<strong>\u4EE3\u7801\u5757</strong>\uFF0C\u88AB\u4FEE\u9970\u7684\u4EE3\u7801\u5757\u79F0\u4E3A\u540C\u6B65\u8BED\u53E5\u5757\uFF0C\u5176\u4F5C\u7528\u7684\u8303\u56F4\u662F\u5927\u62EC\u53F7{}\u62EC\u8D77\u6765\u7684\u4EE3\u7801\uFF0C\u4F5C\u7528\u7684\u5BF9\u8C61\u662F\u8C03\u7528\u8FD9\u4E2A\u4EE3\u7801\u5757\u7684\u5BF9\u8C61\uFF1B</li><li>\u4FEE\u9970\u4E00\u4E2A<strong>\u65B9\u6CD5</strong>\uFF0C\u88AB\u4FEE\u9970\u7684\u65B9\u6CD5\u79F0\u4E3A\u540C\u6B65\u65B9\u6CD5\uFF0C\u5176\u4F5C\u7528\u7684\u8303\u56F4\u662F\u6574\u4E2A\u65B9\u6CD5\uFF0C\u4F5C\u7528\u7684\u5BF9\u8C61\u662F\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\u7684\u5BF9\u8C61\uFF1B\u867D\u7136\u53EF\u4EE5\u4F7F\u7528synchronized\u6765\u5B9A\u4E49\u65B9\u6CD5\uFF0C\u4F46synchronized\u5E76\u4E0D\u5C5E\u4E8E\u65B9\u6CD5\u5B9A\u4E49\u7684\u4E00\u90E8\u5206\uFF0C\u56E0\u6B64\uFF0Csynchronized\u5173\u952E\u5B57<strong>\u4E0D\u80FD\u88AB\u7EE7\u627F</strong>\u3002\u5982\u679C\u5728\u7236\u7C7B\u4E2D\u7684\u67D0\u4E2A\u65B9\u6CD5\u4F7F\u7528\u4E86synchronized\u5173\u952E\u5B57\uFF0C\u800C\u5728\u5B50\u7C7B\u4E2D\u8986\u76D6\u4E86\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u5728\u5B50\u7C7B\u4E2D\u7684\u8FD9\u4E2A\u65B9\u6CD5\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u5E76\u4E0D\u662F\u540C\u6B65\u7684\uFF0C\u800C\u5FC5\u987B\u663E\u5F0F\u5730\u5728\u5B50\u7C7B\u7684\u8FD9\u4E2A\u65B9\u6CD5\u4E2D\u52A0\u4E0Asynchronized\u5173\u952E\u5B57\u624D\u53EF\u4EE5\u3002\u5F53\u7136\uFF0C\u8FD8\u53EF\u4EE5\u5728\u5B50\u7C7B\u65B9\u6CD5\u4E2D\u8C03\u7528\u7236\u7C7B\u4E2D\u76F8\u5E94\u7684\u65B9\u6CD5\uFF0C\u8FD9\u6837\u867D\u7136\u5B50\u7C7B\u4E2D\u7684\u65B9\u6CD5\u4E0D\u662F\u540C\u6B65\u7684\uFF0C\u4F46\u5B50\u7C7B\u8C03\u7528\u4E86\u7236\u7C7B\u7684\u540C\u6B65\u65B9\u6CD5\uFF0C\u56E0\u6B64\uFF0C\u5B50\u7C7B\u7684\u65B9\u6CD5\u4E5F\u5C31\u76F8\u5F53\u4E8E\u540C\u6B65\u4E86\u3002</li><li>\u4FEE\u9970\u4E00\u4E2A<strong>\u9759\u6001\u7684\u65B9\u6CD5</strong>\uFF0C\u5176\u4F5C\u7528\u7684\u8303\u56F4\u662F\u6574\u4E2A\u9759\u6001\u65B9\u6CD5\uFF0C\u4F5C\u7528\u7684\u5BF9\u8C61\u662F\u8FD9\u4E2A\u7C7B\u7684\u6240\u6709\u5BF9\u8C61\uFF1B</li><li>\u4FEE\u9970\u4E00\u4E2A<strong>\u7C7B</strong>\uFF0C\u5176\u4F5C\u7528\u7684\u8303\u56F4\u662Fsynchronized\u540E\u9762\u62EC\u53F7\u62EC\u8D77\u6765\u7684\u90E8\u5206\uFF0C\u4F5C\u7528\u4E3B\u7684\u5BF9\u8C61\u662F\u8FD9\u4E2A\u7C7B\u7684\u6240\u6709\u5BF9\u8C61\u3002</li></ol><p>\u200B \u4E00\u4E2A\u5BF9\u8C61\u91CC\u9762\u5982\u679C\u6709\u591A\u4E2Asynchronized\u65B9\u6CD5\uFF0C\u67D0\u4E00\u4E2A\u65F6\u523B\u5185\uFF0C\u53EA\u8981\u4E00\u4E2A\u7EBF\u7A0B\u53BB\u8C03\u7528\u5176\u4E2D\u7684\u4E00\u4E2Asynchronized\u65B9\u6CD5\u4E86\uFF0C\u5176\u5B83\u7684\u7EBF\u7A0B\u90FD\u53EA\u80FD\u7B49\u5F85\uFF0C\u6362\u53E5\u8BDD\u8BF4\uFF0C\u67D0\u4E00\u4E2A\u65F6\u523B\u5185\uFF0C\u53EA\u80FD\u6709\u552F\u4E00\u4E00\u4E2A\u7EBF\u7A0B\u53BB\u8BBF\u95EE\u8FD9\u4E9Bsynchronized\u65B9\u6CD5\uFF0C\u9501\u7684\u662F\u5F53\u524D\u5BF9\u8C61this\uFF0C\u88AB\u9501\u5B9A\u540E\uFF0C\u5176\u5B83\u7684\u7EBF\u7A0B\u90FD\u4E0D\u80FD\u8FDB\u5165\u5230\u5F53\u524D\u5BF9\u8C61\u7684\u5176\u5B83\u7684synchronized\u65B9\u6CD5\uFF0C\u52A0\u4E2A\u666E\u901A\u65B9\u6CD5\u540E\u53D1\u73B0\u548C\u540C\u6B65\u9501\u65E0\u5173\uFF0C\u6362\u6210\u4E24\u4E2A\u5BF9\u8C61\u540E\uFF0C\u4E0D\u662F\u540C\u4E00\u628A\u9501\u4E86\uFF0C\u60C5\u51B5\u7ACB\u523B\u53D8\u5316\u3002 synchronized\u5B9E\u73B0\u540C\u6B65\u7684\u57FA\u7840\uFF1AJava\u4E2D\u7684\u6BCF\u4E00\u4E2A\u5BF9\u8C61\u90FD\u53EF\u4EE5\u4F5C\u4E3A\u9501\u3002 <strong>\u5177\u4F53\u8868\u73B0\u4E3A\u4EE5\u4E0B3\u79CD\u5F62\u5F0F\u3002</strong><strong>\u5BF9\u4E8E\u666E\u901A\u540C\u6B65\u65B9\u6CD5\uFF0C\u9501\u662F\u5F53\u524D\u5B9E\u4F8B\u5BF9\u8C61\u3002</strong><strong>\u5BF9\u4E8E\u9759\u6001\u540C\u6B65\u65B9\u6CD5\uFF0C\u9501\u662F\u5F53\u524D\u7C7B\u7684Class\u5BF9\u8C61\u3002</strong><strong>\u5BF9\u4E8E\u540C\u6B65\u65B9\u6CD5\u5757\uFF0C\u9501\u662FSynchonized\u62EC\u53F7\u91CC\u914D\u7F6E\u7684\u5BF9\u8C61</strong> \u200B \u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8BD5\u56FE\u8BBF\u95EE\u540C\u6B65\u4EE3\u7801\u5757\u65F6\uFF0C\u5B83\u9996\u5148\u5FC5\u987B\u5F97\u5230\u9501\uFF0C\u9000\u51FA\u6216\u629B\u51FA\u5F02\u5E38\u65F6\u5FC5\u987B\u91CA\u653E\u9501\u3002\u4E5F\u5C31\u662F\u8BF4\u5982\u679C\u4E00\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\u7684\u975E\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u83B7\u53D6\u9501\u540E\uFF0C\u8BE5\u5B9E\u4F8B\u5BF9\u8C61\u7684\u5176\u4ED6\u975E\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u5FC5\u987B\u7B49\u5F85\u83B7\u53D6\u9501\u7684\u65B9\u6CD5\u91CA\u653E\u9501\u540E\u624D\u80FD\u83B7\u53D6\u9501\uFF0C\u53EF\u662F\u522B\u7684\u5B9E\u4F8B\u5BF9\u8C61\u7684\u975E\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u56E0\u4E3A\u8DDF\u8BE5\u5B9E\u4F8B\u5BF9\u8C61\u7684\u975E\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u7528\u7684\u662F\u4E0D\u540C\u7684\u9501\uFF0C\u6240\u4EE5\u6BCB\u987B\u7B49\u5F85\u8BE5\u5B9E\u4F8B\u5BF9\u8C61\u5DF2\u83B7\u53D6\u9501\u7684\u975E\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u91CA\u653E\u9501\u5C31\u53EF\u4EE5\u83B7\u53D6\u4ED6\u4EEC\u81EA\u5DF1\u7684\u9501\u3002\u6240\u6709\u7684\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u7528\u7684\u4E5F\u662F\u540C\u4E00\u628A\u9501\u2014\u2014\u7C7B\u5BF9\u8C61\u672C\u8EAB\uFF0C\u8FD9\u4E24\u628A\u9501\u662F\u4E24\u4E2A\u4E0D\u540C\u7684\u5BF9\u8C61\uFF0C\u6240\u4EE5<strong>\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u4E0E\u975E\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u4E4B\u95F4\u662F\u4E0D\u4F1A\u6709\u7ADE\u6001\u6761\u4EF6\u7684\u3002</strong> \u200B \u4F46\u662F\u4E00\u65E6\u4E00\u4E2A\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u83B7\u53D6\u9501\u540E\uFF0C\u5176\u4ED6\u7684\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u90FD\u5FC5\u987B\u7B49\u5F85\u8BE5\u65B9\u6CD5\u91CA\u653E\u9501\u540E\u624D\u80FD\u83B7\u53D6\u9501\uFF0C\u800C\u4E0D\u7BA1\u662F\u540C\u4E00\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\u7684\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u4E4B\u95F4\uFF0C\u8FD8\u662F\u4E0D\u540C\u7684\u5B9E\u4F8B\u5BF9\u8C61\u7684\u9759\u6001\u540C\u6B65\u65B9\u6CD5\u4E4B\u95F4\uFF0C\u53EA\u8981\u5B83\u4EEC\u540C\u4E00\u4E2A\u7C7B\u7684\u5B9E\u4F8B\u5BF9\u8C61\uFF01</p><h2 id="\u7EBF\u7A0B\u540C\u6B65" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u540C\u6B65" aria-hidden="true">#</a> \u7EBF\u7A0B\u540C\u6B65</h2><ul><li>\u591A\u7EBF\u7A0B\u540C\u65F6\u8BFB\u5199\u5171\u4EAB\u53D8\u91CF\u65F6\uFF0C\u4F1A\u9020\u6210\u903B\u8F91\u9519\u8BEF\uFF0C\u56E0\u6B64\u9700\u8981\u901A\u8FC7synchronized\u540C\u6B65\uFF1B\u540C\u6B65\u7684\u672C\u8D28\u5C31\u662F\u7ED9\u6307\u5B9A\u5BF9\u8C61\u52A0\u9501\uFF0C\u52A0\u9501\u540E\u624D\u80FD\u7EE7\u7EED\u6267\u884C\u540E\u7EED\u4EE3\u7801\uFF1B\u6CE8\u610F\u52A0\u9501\u5BF9\u8C61\u5FC5\u987B\u662F\u540C\u4E00\u4E2A\u5B9E\u4F8B\uFF1B\u5BF9JVM\u5B9A\u4E49\u7684\u5355\u4E2A\u539F\u5B50\u64CD\u4F5C\u4E0D\u9700\u8981\u540C\u6B65\u3002</li></ul><h2 id="\u540C\u6B65\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u540C\u6B65\u65B9\u6CD5" aria-hidden="true">#</a> \u540C\u6B65\u65B9\u6CD5</h2><ul><li>\u7528synchronized\u4FEE\u9970\u65B9\u6CD5\u53EF\u4EE5\u628A\u6574\u4E2A\u65B9\u6CD5\u53D8\u4E3A\u540C\u6B65\u4EE3\u7801\u5757\uFF0Csynchronized\u65B9\u6CD5\u52A0\u9501\u5BF9\u8C61\u662Fthis\uFF1B \u901A\u8FC7\u5408\u7406\u7684\u8BBE\u8BA1\u548C\u6570\u636E\u5C01\u88C5\u53EF\u4EE5\u8BA9\u4E00\u4E2A\u7C7B\u53D8\u4E3A\u201C\u7EBF\u7A0B\u5B89\u5168\u201D\uFF1B \u4E00\u4E2A\u7C7B\u6CA1\u6709\u7279\u6B8A\u8BF4\u660E\uFF0C\u9ED8\u8BA4\u4E0D\u662Fthread-safe\uFF1B \u591A\u7EBF\u7A0B\u80FD\u5426\u5B89\u5168\u8BBF\u95EE\u67D0\u4E2A\u975E\u7EBF\u7A0B\u5B89\u5168\u7684\u5B9E\u4F8B\uFF0C\u9700\u8981\u5177\u4F53\u95EE\u9898\u5177\u4F53\u5206\u6790\u3002</li></ul><h2 id="\u6B7B\u9501" tabindex="-1"><a class="header-anchor" href="#\u6B7B\u9501" aria-hidden="true">#</a> \u6B7B\u9501</h2><ul><li>Java\u7684synchronized\u9501\u662F\u9690\u5F0F\u3010\u81EA\u52A8\u4E0A\u9501\u89E3\u9501\u3011\u7684<strong>\u53EF\u91CD\u5165\u9501\uFF08\u9012\u5F52\u9501\uFF09</strong>\uFF0CLock\u662F\u663E\u5F0F\u7684\u53EF\u91CD\u5165\u9501\uFF1B\u6B7B\u9501\u4EA7\u751F\u7684\u6761\u4EF6\u662F\u591A\u7EBF\u7A0B\u5404\u81EA\u6301\u6709\u4E0D\u540C\u7684\u9501\uFF0C\u5E76\u4E92\u76F8\u8BD5\u56FE\u83B7\u53D6\u5BF9\u65B9\u5DF2\u6301\u6709\u7684\u9501\uFF0C\u5BFC\u81F4\u65E0\u9650\u7B49\u5F85\uFF1B\u907F\u514D\u6B7B\u9501\u7684\u65B9\u6CD5\u662F\u591A\u7EBF\u7A0B\u83B7\u53D6\u9501\u7684\u987A\u5E8F\u8981\u4E00\u81F4\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>sync</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u6F14\u793A\u6B7B\u9501
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeadLock</span> <span class="token punctuation">{</span>

    <span class="token comment">//\u521B\u5EFA\u4E24\u4E2A\u5BF9\u8C61</span>
    <span class="token keyword">static</span> <span class="token class-name">Object</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">Object</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u6301\u6709\u9501a\uFF0C\u8BD5\u56FE\u83B7\u53D6\u9501b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u83B7\u53D6\u9501b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u6301\u6709\u9501b\uFF0C\u8BD5\u56FE\u83B7\u53D6\u9501a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u83B7\u53D6\u9501a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9A8C\u8BC1\u662F\u5426\u4E3A\u6B7B\u9501" tabindex="-1"><a class="header-anchor" href="#\u9A8C\u8BC1\u662F\u5426\u4E3A\u6B7B\u9501" aria-hidden="true">#</a> \u9A8C\u8BC1\u662F\u5426\u4E3A\u6B7B\u9501</h3><p>\u914D\u7F6EJDK\u73AF\u5883\u53D8\u91CF</p><p>\u9879\u76EE\u4E2D\u6253\u5F00\u7EC8\u7AEF</p><p>\u8F93\u5165jps -l \u67E5\u770B\u5F53\u524D\u7C7B\u7684\u8FDB\u7A0B\u53F7</p><p>jstack -\u8FDB\u7A0B\u53F7\u53EF\u67E5\u770B\u662F\u5426\u6709\u6B7B\u9501\u53CA\u76F8\u5173\u4FE1\u606F</p><h2 id="\u4F7F\u7528wait\u548Cnotify" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528wait\u548Cnotify" aria-hidden="true">#</a> \u4F7F\u7528wait\u548Cnotify</h2><ul><li><p>wait\u548Cnotify\u7528\u4E8E\u591A\u7EBF\u7A0B\u534F\u8C03\u8FD0\u884C\uFF1A \u5728synchronized\u5185\u90E8\u53EF\u4EE5\u8C03\u7528wait()\u4F7F\u7EBF\u7A0B\u8FDB\u5165\u7B49\u5F85\u72B6\u6001\uFF1B \u5FC5\u987B\u5728\u5DF2\u83B7\u5F97\u7684\u9501\u5BF9\u8C61\u4E0A\u8C03\u7528wait()\u65B9\u6CD5\uFF1B \u5728synchronized\u5185\u90E8\u53EF\u4EE5\u8C03\u7528notify()\u6216notifyAll()\u5524\u9192\u5176\u4ED6\u7B49\u5F85\u7EBF\u7A0B\uFF1B \u5FC5\u987B\u5728\u5DF2\u83B7\u5F97\u7684\u9501\u5BF9\u8C61\u4E0A\u8C03\u7528notify()\u6216notifyAll()\u65B9\u6CD5\uFF1B \u5DF2\u5524\u9192\u7684\u7EBF\u7A0B\u8FD8\u9700\u8981\u91CD\u65B0\u83B7\u5F97\u9501\u540E\u624D\u80FD\u7EE7\u7EED\u6267\u884C\u3002</p></li><li><p>\u865A\u5047\u5524\u9192</p><p>wait()\u5728\u54EA\u91CC\u7761\u5C31\u5728\u90A3\u91CC\u9192\u4F7F\u7528\u65F6\u5E94\u4F7F\u7528while\u800C\u4E0D\u662Fif</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span>num<span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//notifyAll\uFF08\uFF09\u5524\u9192\u4E4B\u540E\u4F1A\u76F4\u63A5\u4ECEthis.wait\uFF08\uFF09\u8BED\u53E5\u5F00\u59CB\u6267\u884C\uFF0C\u8DF3\u8FC7\u4E86if\u5224\u65AD</span>
<span class="token punctuation">}</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>num<span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="\u4F7F\u7528reentrantlock" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528reentrantlock" aria-hidden="true">#</a> \u4F7F\u7528ReentrantLock</h2><ul><li>ReentrantLock\u53EF\u4EE5\u66FF\u4EE3synchronized\u8FDB\u884C\u540C\u6B65\uFF1B</li></ul><p>ReentrantLock\u83B7\u53D6\u9501\u66F4\u5B89\u5168\uFF1B</p><p>\u5FC5\u987B\u5148\u83B7\u53D6\u5230\u9501\uFF0C\u518D\u8FDB\u5165try {...}\u4EE3\u7801\u5757\uFF0C\u6700\u540E\u4F7F\u7528finally\u4FDD\u8BC1\u91CA\u653E\u9501\uFF1B</p><p>\u53EF\u4EE5\u4F7F\u7528tryLock()\u5C1D\u8BD5\u83B7\u53D6\u9501\u3002</p><p>\u8BBE\u7F6E\u4E3AReentrantLock\uFF08true\uFF09\u4F7F\u5176\u6210\u4E3A\u516C\u5E73\u9501</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>   <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Thread</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7EBF\u7A0B\u542F\u52A8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BD5\u56FE\u5360\u6709\u5BF9\u8C61\uFF1Alock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">//lock\u540C\u6B65</span>
                    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u5360\u6709\u5BF9\u8C61\uFF1Alock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDB\u884C5\u79D2\u7684\u4E1A\u52A1\u64CD\u4F5C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u91CA\u653E\u5BF9\u8C61\uFF1Alock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//\u624B\u52A8\u91CA\u653E</span>
                    lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7EBF\u7A0B\u7ED3\u675F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        t1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;t1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528condition" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528condition" aria-hidden="true">#</a> \u4F7F\u7528Condition</h2><ul><li>Condition\u53EF\u4EE5\u66FF\u4EE3wait\u548Cnotify\uFF1B</li></ul><p>Condition\u5BF9\u8C61\u5FC5\u987B\u4ECELock\u5BF9\u8C61\u83B7\u53D6\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Lock</span> lock<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">Condition</span> condition<span class="token operator">=</span>lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,110),Bn={id:"\u9501",tabindex:"-1"},En=n("a",{class:"header-anchor",href:"#\u9501","aria-hidden":"true"},"#",-1),Tn=s(),In={href:"https://tech.meituan.com/2018/11/15/java-lock.html",target:"_blank",rel:"noopener noreferrer"},Fn=n("strong",null,"\u9501",-1),An=p(`<p>\u4E00\u79CD\u8BBE\u8BA1\u601D\u60F3\u3001\u4E0D\u540C\u73AF\u5883\u4F7F\u7528\u4E0D\u540C\u7684\u9501\u4EE5\u8FBE\u5230\u8D44\u6E90\u6700\u4F18\u5229\u7528\u3002</p><img src="http://qnimg.gisfsde.com/image-20220313114343901.png" alt="image-20220313114343901" style="zoom:80%;"><h3 id="\u4E50\u89C2\u9501-vs-\u60B2\u89C2\u9501" tabindex="-1"><a class="header-anchor" href="#\u4E50\u89C2\u9501-vs-\u60B2\u89C2\u9501" aria-hidden="true">#</a> \u4E50\u89C2\u9501 VS \u60B2\u89C2\u9501</h3><p><strong>\u60B2\u89C2\u9501\u5148\u52A0\u9501\u518D\u64CD\u4F5C\u8D44\u6E90\uFF0C\u4E50\u89C2\u9501\u76F4\u63A5\u64CD\u4F5C\u8D44\u6E90\u3002</strong></p><p>\u4E3A\u4F55\u4E50\u89C2\u9501\u80FD\u591F\u505A\u5230\u4E0D\u9501\u5B9A\u540C\u6B65\u8D44\u6E90\u4E5F\u53EF\u4EE5\u6B63\u786E\u7684\u5B9E\u73B0\u7EBF\u7A0B\u540C\u6B65\u5462\uFF1F\u6211\u4EEC\u901A\u8FC7\u4ECB\u7ECD\u4E50\u89C2\u9501\u7684\u4E3B\u8981\u5B9E\u73B0\u65B9\u5F0F \u201CCAS\u201D \u7684\u6280\u672F\u539F\u7406\u6765\u4E3A\u5927\u5BB6\u89E3\u60D1\u3002</p><p><strong>CAS</strong>\u5168\u79F0 Compare And Swap\uFF08\u6BD4\u8F83\u4E0E\u4EA4\u6362\uFF09\uFF0C\u662F\u4E00\u79CD\u65E0\u9501\u7B97\u6CD5\u3002\u5728\u4E0D\u4F7F\u7528\u9501\uFF08\u6CA1\u6709\u7EBF\u7A0B\u88AB\u963B\u585E\uFF09\u7684\u60C5\u51B5\u4E0B\u5B9E\u73B0\u591A\u7EBF\u7A0B\u4E4B\u95F4\u7684\u53D8\u91CF\u540C\u6B65\u3002java.util.concurrent\u5305\u4E2D\u7684\u539F\u5B50\u7C7B\u5C31\u662F\u901A\u8FC7CAS\u6765\u5B9E\u73B0\u4E86\u4E50\u89C2\u9501\u3002</p><p>CAS\u7B97\u6CD5\u6D89\u53CA\u5230\u4E09\u4E2A\u64CD\u4F5C\u6570\uFF1A</p><ul><li>\u9700\u8981\u8BFB\u5199\u7684\u5185\u5B58\u503C V\u3002</li><li>\u8FDB\u884C\u6BD4\u8F83\u7684\u503C A\u3002</li><li>\u8981\u5199\u5165\u7684\u65B0\u503C B\u3002</li></ul><p>\u5F53\u4E14\u4EC5\u5F53 V \u7684\u503C\u7B49\u4E8E A \u65F6\uFF0CCAS\u901A\u8FC7\u539F\u5B50\u65B9\u5F0F\u7528\u65B0\u503CB\u6765\u66F4\u65B0V\u7684\u503C\uFF08\u201C\u6BD4\u8F83+\u66F4\u65B0\u201D\u6574\u4F53\u662F\u4E00\u4E2A\u539F\u5B50\u64CD\u4F5C\uFF09\uFF0C\u5426\u5219\u4E0D\u4F1A\u6267\u884C\u4EFB\u4F55\u64CD\u4F5C\u3002\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u201C\u66F4\u65B0\u201D\u662F\u4E00\u4E2A\u4E0D\u65AD\u91CD\u8BD5\u7684\u64CD\u4F5C\u3002</p><p><strong>CAS\u95EE\u9898</strong>\uFF1A</p><ol><li><p>ABA\u95EE\u9898</p><p>\u3002CAS\u9700\u8981\u5728\u64CD\u4F5C\u503C\u7684\u65F6\u5019\u68C0\u67E5\u5185\u5B58\u503C\u662F\u5426\u53D1\u751F\u53D8\u5316\uFF0C\u6CA1\u6709\u53D1\u751F\u53D8\u5316\u624D\u4F1A\u66F4\u65B0\u5185\u5B58\u503C\u3002\u4F46\u662F\u5982\u679C\u5185\u5B58\u503C\u539F\u6765\u662FA\uFF0C\u540E\u6765\u53D8\u6210\u4E86B\uFF0C\u7136\u540E\u53C8\u53D8\u6210\u4E86A\uFF0C\u90A3\u4E48CAS\u8FDB\u884C\u68C0\u67E5\u65F6\u4F1A\u53D1\u73B0\u503C\u6CA1\u6709\u53D1\u751F\u53D8\u5316\uFF0C\u4F46\u662F\u5B9E\u9645\u4E0A\u662F\u6709\u53D8\u5316\u7684\u3002ABA\u95EE\u9898\u7684\u89E3\u51B3\u601D\u8DEF\u5C31\u662F\u5728\u53D8\u91CF\u524D\u9762\u6DFB\u52A0\u7248\u672C\u53F7\uFF0C\u6BCF\u6B21\u53D8\u91CF\u66F4\u65B0\u7684\u65F6\u5019\u90FD\u628A\u7248\u672C\u53F7\u52A0\u4E00\uFF0C\u8FD9\u6837\u53D8\u5316\u8FC7\u7A0B\u5C31\u4ECE\u201CA\uFF0DB\uFF0DA\u201D\u53D8\u6210\u4E86\u201C1A\uFF0D2B\uFF0D3A\u201D\u3002</p><ul><li>JDK\u4ECE1.5\u5F00\u59CB\u63D0\u4F9B\u4E86AtomicStampedReference\u7C7B\u6765\u89E3\u51B3ABA\u95EE\u9898\uFF0C\u5177\u4F53\u64CD\u4F5C\u5C01\u88C5\u5728compareAndSet()\u4E2D\u3002compareAndSet()\u9996\u5148\u68C0\u67E5\u5F53\u524D\u5F15\u7528\u548C\u5F53\u524D\u6807\u5FD7\u4E0E\u9884\u671F\u5F15\u7528\u548C\u9884\u671F\u6807\u5FD7\u662F\u5426\u76F8\u7B49\uFF0C\u5982\u679C\u90FD\u76F8\u7B49\uFF0C\u5219\u4EE5\u539F\u5B50\u65B9\u5F0F\u5C06\u5F15\u7528\u503C\u548C\u6807\u5FD7\u7684\u503C\u8BBE\u7F6E\u4E3A\u7ED9\u5B9A\u7684\u66F4\u65B0\u503C\u3002</li></ul></li><li><p><strong>\u5FAA\u73AF\u65F6\u95F4\u957F\u5F00\u9500\u5927</strong>\u3002CAS\u64CD\u4F5C\u5982\u679C\u957F\u65F6\u95F4\u4E0D\u6210\u529F\uFF0C\u4F1A\u5BFC\u81F4\u5176\u4E00\u76F4\u81EA\u65CB\uFF0C\u7ED9CPU\u5E26\u6765\u975E\u5E38\u5927\u7684\u5F00\u9500\u3002</p></li><li><p>\u53EA\u80FD\u4FDD\u8BC1\u4E00\u4E2A\u5171\u4EAB\u53D8\u91CF\u7684\u539F\u5B50\u64CD\u4F5C</p><ul><li><p>\u5BF9\u4E00\u4E2A\u5171\u4EAB\u53D8\u91CF\u6267\u884C\u64CD\u4F5C\u65F6\uFF0CCAS\u80FD\u591F\u4FDD\u8BC1\u539F\u5B50\u64CD\u4F5C\uFF0C\u4F46\u662F\u5BF9\u591A\u4E2A\u5171\u4EAB\u53D8\u91CF\u64CD\u4F5C\u65F6\uFF0CCAS\u662F\u65E0\u6CD5\u4FDD\u8BC1\u64CD\u4F5C\u7684\u539F\u5B50\u6027\u7684\u3002</p></li><li><p>Java\u4ECE1.5\u5F00\u59CBJDK\u63D0\u4F9B\u4E86AtomicReference\u7C7B\u6765\u4FDD\u8BC1\u5F15\u7528\u5BF9\u8C61\u4E4B\u95F4\u7684\u539F\u5B50\u6027\uFF0C\u53EF\u4EE5\u628A\u591A\u4E2A\u53D8\u91CF\u653E\u5728\u4E00\u4E2A\u5BF9\u8C61\u91CC\u6765\u8FDB\u884CCAS\u64CD\u4F5C\u3002</p></li></ul></li></ol><h3 id="\u81EA\u65CB\u9501-vs-\u9002\u5E94\u6027\u81EA\u65CB\u9501" tabindex="-1"><a class="header-anchor" href="#\u81EA\u65CB\u9501-vs-\u9002\u5E94\u6027\u81EA\u65CB\u9501" aria-hidden="true">#</a> \u81EA\u65CB\u9501 VS \u9002\u5E94\u6027\u81EA\u65CB\u9501</h3><p>\u200B \u81EA\u65CB\u9501\u4E0D\u653E\u5F03CPU\u65F6\u95F4\u7247\uFF0C\u81EA\u65CB\u7B49\u5F85\u9501\u91CA\u653E\uFF0C\u5982\u679C\u81EA\u65CB\u8D85\u8FC7\u4E86\u9650\u5B9A\u6B21\u6570\uFF08\u9ED8\u8BA4\u662F10\u6B21\uFF0C\u53EF\u4EE5\u4F7F\u7528-XX:PreBlockSpin\u6765\u66F4\u6539\uFF09\u6CA1\u6709\u6210\u529F\u83B7\u5F97\u9501\uFF0C\u5C31\u5E94\u5F53\u6302\u8D77\u7EBF\u7A0B\u3002 \u200B \u9002\u5E94\u6027\u81EA\u65CB\u9501\u7684\u81EA\u9002\u5E94\u610F\u5473\u7740\u81EA\u65CB\u7684\u65F6\u95F4\uFF08\u6B21\u6570\uFF09\u4E0D\u518D\u56FA\u5B9A\uFF0C\u800C\u662F\u7531\u524D\u4E00\u6B21\u5728\u540C\u4E00\u4E2A\u9501\u4E0A\u7684\u81EA\u65CB\u65F6\u95F4\u53CA\u9501\u7684\u62E5\u6709\u8005\u7684\u72B6\u6001\u6765\u51B3\u5B9A\u3002\u5982\u679C\u5728\u540C\u4E00\u4E2A\u9501\u5BF9\u8C61\u4E0A\uFF0C\u81EA\u65CB\u7B49\u5F85\u521A\u521A\u6210\u529F\u83B7\u5F97\u8FC7\u9501\uFF0C\u5E76\u4E14\u6301\u6709\u9501\u7684\u7EBF\u7A0B\u6B63\u5728\u8FD0\u884C\u4E2D\uFF0C\u90A3\u4E48\u865A\u62DF\u673A\u5C31\u4F1A\u8BA4\u4E3A\u8FD9\u6B21\u81EA\u65CB\u4E5F\u662F\u5F88\u6709\u53EF\u80FD\u518D\u6B21\u6210\u529F\uFF0C\u8FDB\u800C\u5B83\u5C06\u5141\u8BB8\u81EA\u65CB\u7B49\u5F85\u6301\u7EED\u76F8\u5BF9\u66F4\u957F\u7684\u65F6\u95F4\u3002\u5982\u679C\u5BF9\u4E8E\u67D0\u4E2A\u9501\uFF0C\u81EA\u65CB\u5F88\u5C11\u6210\u529F\u83B7\u5F97\u8FC7\uFF0C\u90A3\u5728\u4EE5\u540E\u5C1D\u8BD5\u83B7\u53D6\u8FD9\u4E2A\u9501\u65F6\u5C06\u53EF\u80FD\u7701\u7565\u6389\u81EA\u65CB\u8FC7\u7A0B\uFF0C\u76F4\u63A5\u963B\u585E\u7EBF\u7A0B\uFF0C\u907F\u514D\u6D6A\u8D39\u5904\u7406\u5668\u8D44\u6E90\u3002\u5728\u81EA\u65CB\u9501\u4E2D \u53E6\u6709\u4E09\u79CD\u5E38\u89C1\u7684\u9501\u5F62\u5F0F:TicketLock\u3001CLHlock\u548CMCSlock</p><h3 id="\u65E0\u9501-vs-\u504F\u5411\u9501-vs-\u8F7B\u91CF\u7EA7\u9501-vs-\u91CD\u91CF\u7EA7\u9501" tabindex="-1"><a class="header-anchor" href="#\u65E0\u9501-vs-\u504F\u5411\u9501-vs-\u8F7B\u91CF\u7EA7\u9501-vs-\u91CD\u91CF\u7EA7\u9501" aria-hidden="true">#</a> \u65E0\u9501 VS \u504F\u5411\u9501 VS \u8F7B\u91CF\u7EA7\u9501 VS \u91CD\u91CF\u7EA7\u9501</h3><p><strong>\u65E0\u9501</strong>\uFF0C\u6CA1\u6709\u5BF9\u8D44\u6E90\u8FDB\u884C\u9501\u5B9A\uFF0C\u6240\u6709\u7684\u7EBF\u7A0B\u90FD\u80FD\u8BBF\u95EE\u5E76\u4FEE\u6539\u540C\u4E00\u4E2A\u8D44\u6E90\uFF0C\u4F46<strong>\u540C\u65F6\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u80FD\u4FEE\u6539\u6210\u529F</strong>\u3002</p><p><strong>\u504F\u5411\u9501</strong>\uFF0C\u4E00\u6BB5\u4EE3\u7801<strong>\u4E00\u76F4</strong>\u88AB\u4E00\u4E2A\u7EBF\u7A0B\u8BBF\u95EE\uFF0C\u90A3\u4E48\u8BE5\u7EBF\u7A0B\u4F1A<strong>\u81EA\u52A8\u83B7\u53D6\u9501</strong>\uFF0C\u964D\u4F4E\u83B7\u53D6\u9501\u7684\u4EE3\u4EF7\u3002</p><p>\u504F\u5411\u9501\u65F6\uFF0C\u88AB<strong>\u53E6\u5916\u7684\u7EBF\u7A0B\u6240\u8BBF\u95EE</strong>\uFF0C\u504F\u5411\u9501\u5C31\u4F1A\u5347\u7EA7\u4E3A<strong>\u8F7B\u91CF\u7EA7\u9501</strong>\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u4F1A\u901A\u8FC7\u81EA\u65CB\u7684\u5F62\u5F0F\u5C1D\u8BD5\u83B7\u53D6\u9501\uFF0C\u4E0D\u4F1A\u963B\u585E\uFF0C\u4ECE\u800C\u63D0\u9AD8\u6027\u80FD\u3002</p><p>\u82E5\u5F53\u524D\u53EA\u6709\u4E00\u4E2A\u7B49\u5F85\u7EBF\u7A0B\uFF0C\u5219\u8BE5\u7EBF\u7A0B\u901A\u8FC7\u81EA\u65CB\u8FDB\u884C\u7B49\u5F85\u3002\u4F46\u662F\u5F53<strong>\u81EA\u65CB\u8D85\u8FC7\u4E00\u5B9A\u7684\u6B21\u6570</strong>\uFF0C\u6216\u8005\u4E00\u4E2A\u7EBF\u7A0B\u5728\u6301\u6709\u9501\uFF0C\u4E00\u4E2A\u5728\u81EA\u65CB\uFF0C\u53C8\u6709\u7B2C\u4E09\u4E2A\u6765\u8BBF\u65F6\uFF08<strong>\u6216\u8F7B\u91CF\u7EA7\u9501\u65F6\u6709\u7B2C\u4E09\u8005</strong>\uFF09\uFF0C\u8F7B\u91CF\u7EA7\u9501\u5347\u7EA7\u4E3A<strong>\u91CD\u91CF\u7EA7\u9501</strong>\u3002</p><h3 id="\u516C\u5E73\u9501-vs-\u975E\u516C\u5E73\u9501" tabindex="-1"><a class="header-anchor" href="#\u516C\u5E73\u9501-vs-\u975E\u516C\u5E73\u9501" aria-hidden="true">#</a> \u516C\u5E73\u9501 VS \u975E\u516C\u5E73\u9501</h3><p><strong>\u516C\u5E73\u9501</strong>\u901A\u8FC7\u7533\u8BF7\u9501\u7684\u987A\u5E8F\u6765\u83B7\u53D6\u9501 <strong>\u975E\u516C\u5E73\u9501</strong>\u76F4\u63A5\u83B7\u53D6\u9501\uFF0C\u83B7\u53D6\u4E0D\u5230\u4F1A\u5230\u7B49\u5F85\u961F\u5217\u672B\u5C3E\u7B49\u5F85\uFF0C\u8282\u7EA6\u5524\u8D77\u7EBF\u7A0B\u7684\u5F00\u9500\uFF0C\u63D0\u9AD8\u541E\u5410\u7387\uFF0C\u4F46\u662F\u90E8\u5206\u7EBF\u7A0B\u53EF\u80FD\u4F1A\u88AB\u997F\u6B7B\uFF0C\u6216\u7B49\u5F85\u65F6\u95F4\u5F88\u957F\u3002</p><h3 id="\u53EF\u91CD\u5165\u9501-vs-\u975E\u53EF\u91CD\u5165\u9501" tabindex="-1"><a class="header-anchor" href="#\u53EF\u91CD\u5165\u9501-vs-\u975E\u53EF\u91CD\u5165\u9501" aria-hidden="true">#</a> \u53EF\u91CD\u5165\u9501 VS \u975E\u53EF\u91CD\u5165\u9501</h3><p><strong>\u53EF\u91CD\u5165\u9501\uFF08\u9012\u5F52\u9501\uFF09</strong>\uFF0C\u662F\u6307\u5728\u540C\u4E00\u4E2A\u7EBF\u7A0B\u5728\u5916\u5C42\u65B9\u6CD5\u83B7\u53D6\u9501\u7684\u65F6\u5019\uFF0C\u518D\u8FDB\u5165\u8BE5\u7EBF\u7A0B\u7684\u5185\u5C42\u65B9\u6CD5\u4F1A\u81EA\u52A8\u83B7\u53D6\u9501\uFF08\u524D\u63D0\u9501\u5BF9\u8C61\u5F97\u662F\u540C\u4E00\u4E2A\u5BF9\u8C61\u6216\u8005class\uFF09\uFF0C\u4E0D\u4F1A\u56E0\u4E3A\u4E4B\u524D\u5DF2\u7ECF\u83B7\u53D6\u8FC7\u8FD8\u6CA1\u91CA\u653E\u800C\u963B\u585E\u3002</p><p><strong>\u975E\u53EF\u91CD\u5165\u9501</strong>\uFF0C\u53CD\u4E4B\u540C\u7EBF\u7A0B\u5728\u5916\u5C42\u83B7\u53D6\u9501\u65F6\u5728\u8FDB\u5165\u5185\u5C42\u9700\u8981\u5148\u91CA\u653E\u9501\uFF0C\u91CD\u590D\u8C03\u7528\u540C\u6B65\u6570\u636E\u65F6\u53EF\u80FD\u4F1A\u5BFC\u81F4\u6B7B\u9501\u3002</p><h3 id="\u72EC\u4EAB\u9501-vs-\u5171\u4EAB\u9501" tabindex="-1"><a class="header-anchor" href="#\u72EC\u4EAB\u9501-vs-\u5171\u4EAB\u9501" aria-hidden="true">#</a> \u72EC\u4EAB\u9501 VS \u5171\u4EAB\u9501</h3><p><strong>\u72EC\u4EAB\u9501\uFF08\u6392\u4ED6\u9501\uFF09</strong>\uFF0C\u8BE5\u9501\u4E00\u6B21\u53EA\u80FD\u88AB\u4E00\u4E2A\u7EBF\u7A0B\u62E5\u6709\uFF0C\u52A0\u9501\u540E\u4E0D\u80FD\u518D\u52A0\u5176\u4ED6\u9501\uFF0C\u7EBF\u7A0B\u62E5\u6709\u540E\u53EF\u8BFB\u4E0E\u6539\u3002 <strong>\u5171\u4EAB\u9501</strong>\uFF0C\u8BE5\u9501\u80FD\u88AB\u591A\u4E2A\u7EBF\u7A0B\u6240\u62E5\u6709\u7684\uFF0C\u62E5\u6709\u540E\u53EA\u80FD\u8BFB\u4E0D\u53EF\u6539\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u53EF\u4EE5\u52A0\u5171\u4EAB\u9501\u4E0D\u80FD\u52A0\u72EC\u4EAB\u9501\uFF08\u6392\u5B83\u9501\uFF09\u3002</p><h3 id="\u8BFB\u9501\u5199\u9501" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u9501\u5199\u9501" aria-hidden="true">#</a> \u8BFB\u9501\u5199\u9501</h3><h3 id="reentrantreadwritelock-\u91CC\u7684\u4E24\u628A\u9501-readlock-\u548C-writelock-\u8BFB\u9501\u662F\u5171\u4EAB\u9501-\u5199\u9501\u662F\u72EC\u4EAB\u9501-\u90FD\u4F1A\u53D1\u751F\u6B7B\u9501\u3002" tabindex="-1"><a class="header-anchor" href="#reentrantreadwritelock-\u91CC\u7684\u4E24\u628A\u9501-readlock-\u548C-writelock-\u8BFB\u9501\u662F\u5171\u4EAB\u9501-\u5199\u9501\u662F\u72EC\u4EAB\u9501-\u90FD\u4F1A\u53D1\u751F\u6B7B\u9501\u3002" aria-hidden="true">#</a> ReentrantReadWriteLock \u91CC\u7684\u4E24\u628A\u9501 ReadLock \u548C WriteLock\uFF0C\u8BFB\u9501\u662F\u5171\u4EAB\u9501\uFF0C\u5199\u9501\u662F\u72EC\u4EAB\u9501\uFF0C\u90FD\u4F1A\u53D1\u751F\u6B7B\u9501\u3002</h3><img src="http://qnimg.gisfsde.com/work/14-\u8BFB\u5199\u9501\u6F14\u53D8.png" alt="14-\u8BFB\u5199\u9501\u6F14\u53D8" style="zoom:80%;"><p>\u73B0\u5B9E\u4E2D\u6709\u8FD9\u6837\u4E00\u79CD\u573A\u666F\uFF1A\u5BF9\u5171\u4EAB\u8D44\u6E90\u6709\u8BFB\u548C\u5199\u7684\u64CD\u4F5C\uFF0C\u4E14\u5199\u64CD\u4F5C\u6CA1\u6709\u8BFB\u64CD\u4F5C\u90A3\u4E48\u9891\u7E41\u3002\u5728\u6CA1\u6709\u5199\u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u8BFB\u4E00\u4E2A\u8D44\u6E90\u6CA1\u6709\u4EFB\u4F55\u95EE\u9898\uFF0C\u6240\u4EE5\u5E94\u8BE5\u5141\u8BB8\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u8BFB\u53D6\u5171\u4EAB\u8D44\u6E90\uFF1B\u4F46\u662F\u5982\u679C\u4E00\u4E2A\u7EBF\u7A0B\u60F3\u53BB\u5199\u8FD9\u4E9B\u5171\u4EAB\u8D44\u6E90\uFF0C\u5C31\u4E0D\u5E94\u8BE5\u5141\u8BB8\u5176\u4ED6\u7EBF\u7A0B\u5BF9\u8BE5\u8D44\u6E90\u8FDB\u884C\u8BFB\u548C\u5199\u7684\u64CD\u4F5C\u4E86\u3002 \u9488\u5BF9\u8FD9\u79CD\u573A\u666F\uFF0CJAVA\u7684\u5E76\u53D1\u5305\u63D0\u4F9B\u4E86\u8BFB\u5199\u9501ReentrantReadWriteLock\uFF0C\u5B83\u8868\u793A\u4E24\u4E2A\u9501\uFF0C\u4E00\u4E2A\u662F\u8BFB\u64CD\u4F5C\u76F8\u5173\u7684\u9501\uFF0C\u79F0\u4E3A\u5171\u4EAB\u9501\uFF1B\u4E00\u4E2A\u662F\u5199\u76F8\u5173\u7684\u9501\uFF0C\u79F0\u4E3A\u6392\u4ED6\u9501</p><ol><li>\u7EBF\u7A0B\u8FDB\u5165\u8BFB\u9501\u7684\u524D\u63D0\u6761\u4EF6\uFF1A \u2022 \u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u7684\u5199\u9501 \u2022 \u6CA1\u6709\u5199\u8BF7\u6C42, \u6216\u8005<mark>\u6709\u5199\u8BF7\u6C42\uFF0C\u4F46\u8C03\u7528\u7EBF\u7A0B\u548C\u6301\u6709\u9501\u7684\u7EBF\u7A0B\u662F\u540C\u4E00\u4E2A(\u53EF\u91CD\u5165\u9501)\u3002</mark></li><li>\u7EBF\u7A0B\u8FDB\u5165\u5199\u9501\u7684\u524D\u63D0\u6761\u4EF6\uFF1A \u2022 \u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u7684\u8BFB\u9501 \u2022 \u6CA1\u6709\u5176\u4ED6\u7EBF\u7A0B\u7684\u5199\u9501 \u800C\u8BFB\u5199\u9501\u6709\u4EE5\u4E0B\u4E09\u4E2A\u91CD\u8981\u7684\u7279\u6027\uFF1A \uFF081\uFF09\u516C\u5E73\u9009\u62E9\u6027\uFF1A\u652F\u6301\u975E\u516C\u5E73\uFF08\u9ED8\u8BA4\uFF09\u548C\u516C\u5E73\u7684\u9501\u83B7\u53D6\u65B9\u5F0F\uFF0C\u541E\u5410\u91CF\u8FD8\u662F\u975E\u516C\u5E73\u4F18\u4E8E\u516C\u5E73\u3002 \uFF082\uFF09\u91CD\u8FDB\u5165\uFF1A\u8BFB\u9501\u548C\u5199\u9501\u90FD\u652F\u6301\u7EBF\u7A0B\u91CD\u8FDB\u5165\u3002 \uFF083\uFF09\u9501\u964D\u7EA7\uFF1A\u9075\u5FAA\u83B7\u53D6\u5199\u9501\u3001\u83B7\u53D6\u8BFB\u9501\u518D\u91CA\u653E\u5199\u9501\u7684\u6B21\u5E8F\uFF0C\u5199\u9501\u80FD\u591F\u964D\u7EA7\u6210\u4E3A\u8BFB\u9501\u3002</li></ol><img src="http://qnimg.gisfsde.com/work/15-\u8BFB\u5199\u9501\u964D\u7EA7.png" alt="15-\u8BFB\u5199\u9501\u964D\u7EA7" style="zoom:67%;"><h3 id="\u8868\u9501\u884C\u9501" tabindex="-1"><a class="header-anchor" href="#\u8868\u9501\u884C\u9501" aria-hidden="true">#</a> \u8868\u9501\u884C\u9501</h3><p>\u8868\u9501\u6574\u5F20\u8868\uFF0C\u800C\u884C\u9501\u9501\u5355\u6761\u6570\u636E\u4E14\u53EF\u80FD\u53D1\u751F\u6B7B\u9501\u3002</p><h4 id="\u4F7F\u7528readwritelock" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528readwritelock" aria-hidden="true">#</a> \u4F7F\u7528ReadWriteLock</h4><ul><li>\u4F7F\u7528ReadWriteLock\u53EF\u4EE5\u63D0\u9AD8\u8BFB\u53D6\u6548\u7387\uFF1A ReadWriteLock\u53EA\u5141\u8BB8\u4E00\u4E2A\u7EBF\u7A0B\u5199\u5165\uFF1B ReadWriteLock\u5141\u8BB8\u591A\u4E2A\u7EBF\u7A0B\u5728\u6CA1\u6709\u5199\u5165\u65F6\u540C\u65F6\u8BFB\u53D6\uFF1B ReadWriteLock\u9002\u5408\u8BFB\u591A\u5199\u5C11\u7684\u573A\u666F\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>readwrite</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">Lock</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">ReadWriteLock</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>locks<span class="token punctuation">.</span></span><span class="token class-name">ReentrantReadWriteLock</span></span><span class="token punctuation">;</span>

<span class="token comment">//\u8D44\u6E90\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">MyCache</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u521B\u5EFAmap\u96C6\u5408</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">Map</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u521B\u5EFA\u8BFB\u5199\u9501\u5BF9\u8C61</span>
    <span class="token keyword">private</span> <span class="token class-name">ReadWriteLock</span> rwLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantReadWriteLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u653E\u6570\u636E</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span><span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u6DFB\u52A0\u5199\u9501</span>
        rwLock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u6B63\u5728\u5199\u64CD\u4F5C&quot;</span><span class="token operator">+</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u6682\u505C\u4E00\u4F1A</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u653E\u6570\u636E</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u5199\u5B8C\u4E86&quot;</span><span class="token operator">+</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u91CA\u653E\u5199\u9501</span>
            rwLock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u53D6\u6570\u636E</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u6DFB\u52A0\u8BFB\u9501</span>
        rwLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u6B63\u5728\u8BFB\u53D6\u64CD\u4F5C&quot;</span><span class="token operator">+</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u6682\u505C\u4E00\u4F1A</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            result <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u53D6\u5B8C\u4E86&quot;</span><span class="token operator">+</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u91CA\u653E\u8BFB\u9501</span>
            rwLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReadWriteLockDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">MyCache</span> myCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u521B\u5EFA\u7EBF\u7A0B\u653E\u6570\u636E</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> num <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                myCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>num<span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>num<span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MICROSECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u521B\u5EFA\u7EBF\u7A0B\u53D6\u6570\u636E</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> num <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                myCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>num<span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4F7F\u7528stampedlock" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528stampedlock" aria-hidden="true">#</a> \u4F7F\u7528StampedLock</h4><ul><li>StampedLock\u63D0\u4F9B\u4E86\u4E50\u89C2\u8BFB\u9501\uFF0C\u53EF\u53D6\u4EE3ReadWriteLock\u4EE5\u8FDB\u4E00\u6B65\u63D0\u5347\u5E76\u53D1\u6027\u80FD\uFF1BStampedLock\u662F\u4E0D\u53EF\u91CD\u5165\u9501\u3002</li></ul><h2 id="\u4F7F\u7528concurrent\u96C6\u5408" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528concurrent\u96C6\u5408" aria-hidden="true">#</a> \u4F7F\u7528Concurrent\u96C6\u5408</h2><ul><li>\u4F7F\u7528java.util.concurrent\u5305\u63D0\u4F9B\u7684\u7EBF\u7A0B\u5B89\u5168\u7684\u5E76\u53D1\u96C6\u5408\u53EF\u4EE5\u5927\u5927\u7B80\u5316\u591A\u7EBF\u7A0B\u7F16\u7A0B\uFF1A</li></ul><p>\u591A\u7EBF\u7A0B\u540C\u65F6\u8BFB\u5199\u5E76\u53D1\u96C6\u5408\u662F\u5B89\u5168\u7684\uFF1B</p><p>\u5C3D\u91CF\u4F7F\u7528Java\u6807\u51C6\u5E93\u63D0\u4F9B\u7684\u5E76\u53D1\u96C6\u5408\uFF0C\u907F\u514D\u81EA\u5DF1\u7F16\u5199\u540C\u6B65\u4EE3\u7801\u3002</p><h2 id="\u4F7F\u7528atomic" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528atomic" aria-hidden="true">#</a> \u4F7F\u7528Atomic</h2><ul><li>\u4F7F\u7528java.util.concurrent.atomic\u63D0\u4F9B\u7684\u539F\u5B50\u64CD\u4F5C\u53EF\u4EE5\u7B80\u5316\u591A\u7EBF\u7A0B\u7F16\u7A0B\uFF1A</li></ul><p>\u539F\u5B50\u64CD\u4F5C\u5B9E\u73B0\u4E86\u65E0\u9501\u7684\u7EBF\u7A0B\u5B89\u5168\uFF1B</p><p>\u9002\u7528\u4E8E\u8BA1\u6570\u5668\uFF0C\u7D2F\u52A0\u5668\u7B49\u3002</p><ul><li>\u589E\u52A0\u503C\u5E76\u8FD4\u56DE\u65B0\u503C\uFF1Aint addAndGet(int delta) \u52A01\u540E\u8FD4\u56DE\u65B0\u503C\uFF1Aint incrementAndGet() \u83B7\u53D6\u5F53\u524D\u503C\uFF1Aint get() \u7528CAS\u65B9\u5F0F\u8BBE\u7F6E\uFF1Aint compareAndSet(int expect, int update)</li></ul><h2 id="\u4F7F\u7528-future" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-future" aria-hidden="true">#</a> \u4F7F\u7528 Future</h2><ul><li>\u5BF9\u7EBF\u7A0B\u6C60\u63D0\u4EA4\u4E00\u4E2ACallable\u4EFB\u52A1\uFF0C\u53EF\u4EE5\u83B7\u5F97\u4E00\u4E2AFuture\u5BF9\u8C61\uFF1B</li></ul><p>\u53EF\u4EE5\u7528Future\u5728\u5C06\u6765\u67D0\u4E2A\u65F6\u523B\u83B7\u53D6\u7ED3\u679C\u3002</p><h2 id="\u4F7F\u7528-completablefuture" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-completablefuture" aria-hidden="true">#</a> \u4F7F\u7528 CompletableFuture</h2><ul><li>CompletableFuture\u53EF\u4EE5\u6307\u5B9A\u5F02\u6B65\u5904\u7406\u6D41\u7A0B\uFF1A thenAccept()\u5904\u7406\u6B63\u5E38\u7ED3\u679C\uFF1B exceptional()\u5904\u7406\u5F02\u5E38\u7ED3\u679C\uFF1B thenApplyAsync()\u7528\u4E8E\u4E32\u884C\u5316\u53E6\u4E00\u4E2ACompletableFuture\uFF1B anyOf()\u548CallOf()\u7528\u4E8E\u5E76\u884C\u5316\u591A\u4E2ACompletableFuture\u3002</li></ul><h2 id="\u4F7F\u7528-forkjoin" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-forkjoin" aria-hidden="true">#</a> \u4F7F\u7528 ForkJoin</h2><ul><li>Fork/Join\u662F\u4E00\u79CD\u57FA\u4E8E\u201C\u5206\u6CBB\u201D\u7684\u7B97\u6CD5\uFF1A\u901A\u8FC7\u5206\u89E3\u4EFB\u52A1\uFF0C\u5E76\u884C\u6267\u884C\uFF0C\u6700\u540E\u5408\u5E76\u7ED3\u679C\u5F97\u5230\u6700\u7EC8\u7ED3\u679C\u3002</li></ul><p>ForkJoinPool\u7EBF\u7A0B\u6C60\u53EF\u4EE5\u628A\u4E00\u4E2A\u5927\u4EFB\u52A1\u5206\u62C6\u6210\u5C0F\u4EFB\u52A1\u5E76\u884C\u6267\u884C\uFF0C\u4EFB\u52A1\u7C7B\u5FC5\u987B\u7EE7\u627F\u81EARecursiveTask\u6216RecursiveAction\u3002</p><p>\u4F7F\u7528Fork/Join\u6A21\u5F0F\u53EF\u4EE5\u8FDB\u884C\u5E76\u884C\u8BA1\u7B97\u4EE5\u63D0\u9AD8\u6548\u7387\u3002</p><h2 id="\u4F7F\u7528-threadlocal" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-threadlocal" aria-hidden="true">#</a> \u4F7F\u7528 ThreadLocal</h2><ul><li>ThreadLocal\u8868\u793A<strong>\u7EBF\u7A0B\u7684\u201C\u5C40\u90E8\u53D8\u91CF\u201D</strong>\uFF0C\u5B83\u786E\u4FDD\u6BCF\u4E2A\u7EBF\u7A0B\u7684ThreadLocal\u53D8\u91CF\u90FD\u662F\u5404\u81EA\u72EC\u7ACB\u7684\uFF1B</li></ul><p>ThreadLocal\u9002\u5408\u5728\u4E00\u4E2A\u7EBF\u7A0B\u7684\u5904\u7406\u6D41\u7A0B\u4E2D\u4FDD\u6301\u4E0A\u4E0B\u6587\uFF08\u907F\u514D\u4E86\u540C\u4E00\u53C2\u6570\u5728\u6240\u6709\u65B9\u6CD5\u4E2D\u4F20\u9012\uFF09\uFF1B</p><p>\u4F7F\u7528ThreadLocal\u8981\u7528try ... finally\u7ED3\u6784\uFF0C\u5E76\u5728finally\u4E2D\u6E05\u9664\u3002</p><h2 id="\u96C6\u5408\u7EBF\u7A0B\u5B89\u5168" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408\u7EBF\u7A0B\u5B89\u5168" aria-hidden="true">#</a> \u96C6\u5408\u7EBF\u7A0B\u5B89\u5168</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u521B\u5EFAArrayList\u96C6\u5408</span>
<span class="token comment">//        List\\&lt;String&gt; list = new ArrayList\\&lt;&gt;();</span>
        <span class="token comment">// Vector\u89E3\u51B3</span>
<span class="token comment">//        List\\&lt;String&gt; list = new Vector\\&lt;&gt;();</span>

        <span class="token comment">//Collections\u89E3\u51B3</span>
<span class="token comment">//        List\\&lt;String&gt; list = Collections.synchronizedList(new ArrayList\\&lt;&gt;());</span>

        <span class="token comment">// CopyOnWriteArrayList\u5199\u65F6\u590D\u5236\u6280\u672F\u89E3\u51B3</span>
<span class="token comment">//        List\\&lt;String&gt; list = new CopyOnWriteArrayList\\&lt;&gt;();</span>
<span class="token comment">//        for (int i = 0; i \\&lt;30; i++) {</span>
<span class="token comment">//            new Thread(()-&gt;{</span>
<span class="token comment">//                //\u5411\u96C6\u5408\u6DFB\u52A0\u5185\u5BB9</span>
<span class="token comment">//                list.add(UUID.randomUUID().toString().substring(0,8));</span>
<span class="token comment">//                //\u4ECE\u96C6\u5408\u83B7\u53D6\u5185\u5BB9</span>
<span class="token comment">//                System.out.println(list);</span>
<span class="token comment">//            },String.valueOf(i)).start();</span>
<span class="token comment">//        }</span>

        <span class="token comment">//\u6F14\u793AHashset</span>
<span class="token comment">//        Set\\&lt;String&gt; set = new HashSet\\&lt;&gt;();</span>

<span class="token comment">//        Set\\&lt;String&gt; set = new CopyOnWriteArraySet\\&lt;&gt;();</span>
<span class="token comment">//        for (int i = 0; i \\&lt;30; i++) {</span>
<span class="token comment">//            new Thread(()-&gt;{</span>
<span class="token comment">//                //\u5411\u96C6\u5408\u6DFB\u52A0\u5185\u5BB9</span>
<span class="token comment">//                set.add(UUID.randomUUID().toString().substring(0,8));</span>
<span class="token comment">//                //\u4ECE\u96C6\u5408\u83B7\u53D6\u5185\u5BB9</span>
<span class="token comment">//                System.out.println(set);</span>
<span class="token comment">//            },String.valueOf(i)).start();</span>
<span class="token comment">//        }</span>

        <span class="token comment">//\u6F14\u793AHashMap</span>
<span class="token comment">//        Map\\&lt;String,String&gt; map = new HashMap\\&lt;&gt;();</span>

        <span class="token class-name">Map</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;</span><span class="token number">30</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                <span class="token comment">//\u5411\u96C6\u5408\u6DFB\u52A0\u5185\u5BB9</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u4ECE\u96C6\u5408\u83B7\u53D6\u5185\u5BB9</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="juc\u4E09\u5927\u8F85\u52A9\u7C7B" tabindex="-1"><a class="header-anchor" href="#juc\u4E09\u5927\u8F85\u52A9\u7C7B" aria-hidden="true">#</a> JUC\u4E09\u5927\u8F85\u52A9\u7C7B</h2><p>JUC\u4E2D\u63D0\u4F9B\u4E86\u4E09\u79CD\u5E38\u7528\u7684\u8F85\u52A9\u7C7B\uFF0C\u901A\u8FC7\u8FD9\u4E9B\u8F85\u52A9\u7C7B\u53EF\u4EE5\u5F88\u597D\u7684\u89E3\u51B3\u7EBF\u7A0B\u6570\u91CF\u8FC7\u591A\u65F6Lock\u9501\u7684\u9891\u7E41\u64CD\u4F5C\u3002\u8FD9\u4E09\u79CD\u8F85\u52A9\u7C7B\u4E3A\uFF1A \u2022 CountDownLatch: \u51CF\u5C11\u8BA1\u6570 \u2022 CyclicBarrier: \u5FAA\u73AF\u6805\u680F \u2022 Semaphore: \u4FE1\u53F7\u706F</p><h3 id="countdownlatch-\u51CF\u5C11\u8BA1\u6570" tabindex="-1"><a class="header-anchor" href="#countdownlatch-\u51CF\u5C11\u8BA1\u6570" aria-hidden="true">#</a> CountDownLatch:\u51CF\u5C11\u8BA1\u6570</h3><p>CountDownLatch\u7C7B\u53EF\u4EE5\u8BBE\u7F6E\u4E00\u4E2A<strong>\u8BA1\u6570\u5668</strong>\uFF0C\u7136\u540E\u901A\u8FC7<strong>countDown\u65B9\u6CD5</strong>\u6765\u8FDB\u884C\u51CF1\u7684\u64CD\u4F5C\uFF0C\u4F7F\u7528await\u65B9\u6CD5\u7B49\u5F85\u8BA1\u6570\u5668\u4E0D\u5927\u4E8E0\uFF0C\u7136\u540E\u7EE7\u7EED\u6267\u884Cawait\u65B9\u6CD5\u4E4B\u540E\u7684\u8BED\u53E5\u3002 \u2022 CountDownLatch\u4E3B\u8981\u6709\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u5F53\u4E00\u4E2A\u6216\u591A\u4E2A\u7EBF\u7A0B\u8C03\u7528await\u65B9\u6CD5\u65F6\uFF0C\u8FD9\u4E9B\u7EBF\u7A0B\u4F1A\u963B\u585E \u2022 \u5176\u5B83\u7EBF\u7A0B\u8C03\u7528countDown\u65B9\u6CD5\u4F1A\u5C06\u8BA1\u6570\u5668\u51CF1(\u8C03\u7528countDown\u65B9\u6CD5\u7684\u7EBF\u7A0B\u4E0D\u4F1A\u963B\u585E) \u2022 \u5F53\u8BA1\u6570\u5668\u7684\u503C\u53D8\u4E3A0\u65F6\uFF0C\u56E0await\u65B9\u6CD5\u963B\u585E\u7684\u7EBF\u7A0B\u4F1A\u88AB\u5524\u9192\uFF0C\u7EE7\u7EED\u6267\u884C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>juc</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">CountDownLatch</span></span><span class="token punctuation">;</span>

<span class="token comment">//\u6F14\u793A CountDownLatch</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CountDownLatchDemo</span> <span class="token punctuation">{</span>
    <span class="token comment">//6\u4E2A\u540C\u5B66\u9646\u7EED\u79BB\u5F00\u6559\u5BA4\u4E4B\u540E\uFF0C\u73ED\u957F\u9501\u95E8</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>   
<span class="token comment">//\u521B\u5EFACountDownLatch\u5BF9\u8C61\uFF0C\u8BBE\u7F6E\u521D\u59CB\u503C</span>
    <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//6\u4E2A\u540C\u5B66\u9646\u7EED\u79BB\u5F00\u6559\u5BA4\u4E4B\u540E</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;=</span><span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u53F7\u540C\u5B66\u79BB\u5F00\u4E86\u6559\u5BA4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//\u8BA1\u6570  -1</span>
            countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u7B49\u5F85</span>
    countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u73ED\u957F\u9501\u95E8\u8D70\u4EBA\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cyclicbarrier-\u5FAA\u73AF\u6805\u680F" tabindex="-1"><a class="header-anchor" href="#cyclicbarrier-\u5FAA\u73AF\u6805\u680F" aria-hidden="true">#</a> CyclicBarrier: \u5FAA\u73AF\u6805\u680F</h3><p>\u200B CyclicBarrier\u770B\u82F1\u6587\u5355\u8BCD\u53EF\u4EE5\u770B\u51FA\u5927\u6982\u5C31\u662F\u5FAA\u73AF\u963B\u585E\u7684\u610F\u601D\uFF0C\u5728\u4F7F\u7528\u4E2DCyclicBarrier\u7684\u6784\u9020\u65B9\u6CD5\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u76EE\u6807\u969C\u788D\u6570\uFF0C\u6BCF\u6B21\u6267\u884CCyclicBarrier\u4E00\u6B21\u969C\u788D\u6570\u4F1A\u52A0\u4E00\uFF0C\u5982\u679C<strong>\u8FBE\u5230\u4E86\u76EE\u6807\u969C\u788D\u6570\uFF0C\u624D\u4F1A\u6267\u884CcyclicBarrier.await()\u4E4B\u540E\u7684\u8BED\u53E5</strong>\u3002\u53EF\u4EE5\u5C06CyclicBarrier\u7406\u89E3\u4E3A\u52A01\u64CD\u4F5C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>juc</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">BrokenBarrierException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">CyclicBarrier</span></span><span class="token punctuation">;</span>

<span class="token comment">//\u96C6\u9F507\u9897\u9F99\u73E0\u5C31\u53EF\u4EE5\u53EC\u5524\u795E\u9F99</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CyclicBarrierDemo</span> <span class="token punctuation">{</span>
<span class="token comment">//\u521B\u5EFA\u56FA\u5B9A\u503C</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> NUMBER <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u521B\u5EFACyclicBarrier</span>
    <span class="token class-name">CyclicBarrier</span> cyclicBarrier <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span>NUMBER<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;*****\u96C6\u9F507\u9897\u9F99\u73E0\u5C31\u53EF\u4EE5\u53EC\u5524\u795E\u9F99&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//\u96C6\u9F50\u4E03\u9897\u9F99\u73E0\u8FC7\u7A0B</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;=</span><span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u661F\u9F99\u88AB\u6536\u96C6\u5230\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u7B49\u5F85</span>
                cyclicBarrier<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="semaphore-\u4FE1\u53F7\u706F" tabindex="-1"><a class="header-anchor" href="#semaphore-\u4FE1\u53F7\u706F" aria-hidden="true">#</a> Semaphore: \u4FE1\u53F7\u706F</h3><p>\u200B Semaphore\u7684\u6784\u9020\u65B9\u6CD5\u4E2D\u4F20\u5165\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F<strong>\u6700\u5927\u4FE1\u53F7\u91CF\uFF08\u53EF\u4EE5\u770B\u6210\u6700\u5927\u7EBF\u7A0B\u6C60\uFF09</strong>\uFF0C\u6BCF\u4E2A\u4FE1\u53F7\u91CF\u521D\u59CB\u5316\u4E3A\u4E00\u4E2A\u6700\u591A\u53EA\u80FD\u5206\u53D1\u4E00\u4E2A\u8BB8\u53EF\u8BC1\u3002\u4F7F\u7528<strong>acquire\u65B9\u6CD5\u83B7\u5F97\u8BB8\u53EF\u8BC1\uFF0Crelease\u65B9\u6CD5\u91CA\u653E\u8BB8\u53EF</strong>\u3002\u573A\u666F: \u62A2\u8F66\u4F4D, 6\u90E8\u6C7D\u8F663\u4E2A\u505C\u8F66\u4F4D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>juc</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Semaphore</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token comment">//6\u8F86\u6C7D\u8F66\uFF0C\u505C3\u4E2A\u8F66\u4F4D</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SemaphoreDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u521B\u5EFASemaphore\uFF0C\u8BBE\u7F6E\u8BB8\u53EF\u6570\u91CF</span>
        <span class="token class-name">Semaphore</span> semaphore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u6A21\u62DF6\u8F86\u6C7D\u8F66</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;=</span><span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">//\u62A2\u5360</span>
                    semaphore<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u62A2\u5230\u4E86\u8F66\u4F4D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">//\u8BBE\u7F6E\u968F\u673A\u505C\u8F66\u65F6\u95F4</span>
                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; ------\u79BB\u5F00\u4E86\u8F66\u4F4D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token comment">//\u91CA\u653E</span>
                    semaphore<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u963B\u585E\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u963B\u585E\u961F\u5217" aria-hidden="true">#</a> \u963B\u585E\u961F\u5217</h2><h3 id="blockingqueue" tabindex="-1"><a class="header-anchor" href="#blockingqueue" aria-hidden="true">#</a> BlockingQueue</h3><p>Concurrent\u5305\u4E2D\uFF0CBlockingQueue\u5F88\u597D\u7684\u89E3\u51B3\u4E86\u591A\u7EBF\u7A0B\u4E2D\uFF0C\u5982\u4F55\u9AD8\u6548\u5B89\u5168\u201C\u4F20\u8F93\u201D\u6570\u636E\u7684\u95EE\u9898\u3002\u901A\u8FC7\u8FD9\u4E9B\u9AD8\u6548\u5E76\u4E14\u7EBF\u7A0B\u5B89\u5168\u7684\u961F\u5217\u7C7B\uFF0C\u4E3A\u6211\u4EEC\u5FEB\u901F\u642D\u5EFA\u9AD8\u8D28\u91CF\u7684\u591A\u7EBF\u7A0B\u7A0B\u5E8F\u5E26\u6765\u6781\u5927\u7684\u4FBF\u5229\u3002\u672C\u6587\u8BE6\u7EC6\u4ECB\u7ECD\u4E86BlockingQueue\u5BB6\u5EAD\u4E2D\u7684\u6240\u6709\u6210\u5458\uFF0C\u5305\u62EC\u4ED6\u4EEC\u5404\u81EA\u7684\u529F\u80FD\u4EE5\u53CA\u5E38\u89C1\u4F7F\u7528\u573A\u666F\u3002 \u963B\u585E\u961F\u5217\uFF0C\u987E\u540D\u601D\u4E49\uFF0C\u9996\u5148\u5B83\u662F\u4E00\u4E2A\u961F\u5217, \u901A\u8FC7\u4E00\u4E2A\u5171\u4EAB\u7684\u961F\u5217\uFF0C\u53EF\u4EE5\u4F7F\u5F97\u6570\u636E\u7531\u961F\u5217\u7684\u4E00\u7AEF\u8F93\u5165\uFF0C\u4ECE\u53E6\u5916\u4E00\u7AEF\u8F93\u51FA\uFF1B</p><p>\u5F53\u961F\u5217\u662F\u7A7A\u7684\uFF0C\u4ECE\u961F\u5217\u4E2D\u83B7\u53D6\u5143\u7D20\u7684\u64CD\u4F5C\u5C06\u4F1A\u88AB\u963B\u585E \u5F53\u961F\u5217\u662F\u6EE1\u7684\uFF0C\u4ECE\u961F\u5217\u4E2D\u6DFB\u52A0\u5143\u7D20\u7684\u64CD\u4F5C\u5C06\u4F1A\u88AB\u963B\u585E \u8BD5\u56FE\u4ECE\u7A7A\u7684\u961F\u5217\u4E2D\u83B7\u53D6\u5143\u7D20\u7684\u7EBF\u7A0B\u5C06\u4F1A\u88AB\u963B\u585E\uFF0C\u76F4\u5230\u5176\u4ED6\u7EBF\u7A0B\u5F80\u7A7A\u7684\u961F\u5217\u63D2\u5165\u65B0\u7684\u5143\u7D20 \u8BD5\u56FE\u5411\u5DF2\u6EE1\u7684\u961F\u5217\u4E2D\u6DFB\u52A0\u65B0\u5143\u7D20\u7684\u7EBF\u7A0B\u5C06\u4F1A\u88AB\u963B\u585E\uFF0C\u76F4\u5230\u5176\u4ED6\u7EBF\u7A0B\u4ECE\u961F\u5217\u4E2D\u79FB\u9664\u4E00\u4E2A\u6216\u591A\u4E2A\u5143\u7D20\u6216\u8005\u5B8C\u5168\u6E05\u7A7A\uFF0C\u4F7F\u961F\u5217\u53D8\u5F97\u7A7A\u95F2\u8D77\u6765\u5E76\u540E\u7EED\u65B0\u589E \u5E38\u7528\u7684\u961F\u5217\u4E3B\u8981\u6709\u4EE5\u4E0B\u4E24\u79CD\uFF1A \u2022 \u5148\u8FDB\u5148\u51FA\uFF08FIFO\uFF09\uFF1A\u5148\u63D2\u5165\u7684\u961F\u5217\u7684\u5143\u7D20\u4E5F\u6700\u5148\u51FA\u961F\u5217\uFF0C\u7C7B\u4F3C\u4E8E\u6392\u961F\u7684\u529F\u80FD\u3002\u4ECE\u67D0\u79CD\u7A0B\u5EA6\u4E0A\u6765\u8BF4\u8FD9\u79CD\u961F\u5217\u4E5F\u4F53\u73B0\u4E86\u4E00\u79CD\u516C\u5E73\u6027 \u2022 \u540E\u8FDB\u5148\u51FA\uFF08LIFO\uFF09\uFF1A\u540E\u63D2\u5165\u961F\u5217\u7684\u5143\u7D20\u6700\u5148\u51FA\u961F\u5217\uFF0C\u8FD9\u79CD\u961F\u5217\u4F18\u5148\u5904\u7406\u6700\u8FD1\u53D1\u751F\u7684\u4E8B\u4EF6(\u6808) \u5728\u591A\u7EBF\u7A0B\u9886\u57DF\uFF1A\u6240\u8C13\u963B\u585E\uFF0C\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u4F1A\u6302\u8D77\u7EBF\u7A0B\uFF08\u5373\u963B\u585E\uFF09\uFF0C\u4E00\u65E6\u6761\u4EF6\u6EE1\u8DB3\uFF0C\u88AB\u6302\u8D77\u7684\u7EBF\u7A0B\u53C8\u4F1A\u81EA\u52A8\u88AB\u5524\u8D77</p><h4 id="\u4E3A\u4EC0\u4E48\u9700\u8981blockingqueue" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u9700\u8981blockingqueue" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u9700\u8981BlockingQueue</h4><p>\u597D\u5904\u662F\u6211\u4EEC\u4E0D\u9700\u8981\u5173\u5FC3\u4EC0\u4E48\u65F6\u5019\u9700\u8981\u963B\u585E\u7EBF\u7A0B\uFF0C\u4EC0\u4E48\u65F6\u5019\u9700\u8981\u5524\u9192\u7EBF\u7A0B\uFF0C\u56E0\u4E3A\u8FD9\u4E00\u5207BlockingQueue\u90FD\u7ED9\u4F60\u4E00\u624B\u5305\u529E\u4E86 \u5728concurrent\u5305\u53D1\u5E03\u4EE5\u524D\uFF0C\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\uFF0C\u6211\u4EEC\u5FC5\u987B\u53BB\u81EA\u5DF1\u63A7\u5236\u8FD9\u4E9B\u7EC6\u8282\uFF0C\u5C24\u5176\u8FD8\u8981\u517C\u987E\u6548\u7387\u548C\u7EBF\u7A0B\u5B89\u5168\uFF0C\u800C\u8FD9\u4F1A\u7ED9\u6211\u4EEC\u7684\u7A0B\u5E8F\u5E26\u6765\u4E0D\u5C0F\u7684\u590D\u6742\u5EA6\u3002 \u591A\u7EBF\u7A0B\u73AF\u5883\u4E2D\uFF0C\u901A\u8FC7\u961F\u5217\u53EF\u4EE5\u5F88\u5BB9\u6613\u5B9E\u73B0\u6570\u636E\u5171\u4EAB\uFF0C\u6BD4\u5982\u7ECF\u5178\u7684\u201C\u751F\u4EA7\u8005\u201D\u548C\u201C\u6D88\u8D39\u8005\u201D\u6A21\u578B\u4E2D\uFF0C\u901A\u8FC7\u961F\u5217\u53EF\u4EE5\u5F88\u4FBF\u5229\u5730\u5B9E\u73B0\u4E24\u8005\u4E4B\u95F4\u7684\u6570\u636E\u5171\u4EAB\u3002\u5047\u8BBE\u6211\u4EEC\u6709\u82E5\u5E72\u751F\u4EA7\u8005\u7EBF\u7A0B\uFF0C\u53E6\u5916\u53C8\u6709\u82E5\u5E72\u4E2A\u6D88\u8D39\u8005\u7EBF\u7A0B\u3002\u5982\u679C\u751F\u4EA7\u8005\u7EBF\u7A0B\u9700\u8981\u628A\u51C6\u5907\u597D\u7684\u6570\u636E\u5171\u4EAB\u7ED9\u6D88\u8D39\u8005\u7EBF\u7A0B\uFF0C\u5229\u7528\u961F\u5217\u7684\u65B9\u5F0F\u6765\u4F20\u9012\u6570\u636E\uFF0C\u5C31\u53EF\u4EE5\u5F88\u65B9\u4FBF\u5730\u89E3\u51B3\u4ED6\u4EEC\u4E4B\u95F4\u7684\u6570\u636E\u5171\u4EAB\u95EE\u9898\u3002\u4F46\u5982\u679C\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u5728\u67D0\u4E2A\u65F6\u95F4\u6BB5\u5185\uFF0C\u4E07\u4E00\u53D1\u751F\u6570\u636E\u5904\u7406\u901F\u5EA6\u4E0D\u5339\u914D\u7684\u60C5\u51B5\u5462\uFF1F\u7406\u60F3\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u751F\u4EA7\u8005\u4EA7\u51FA\u6570\u636E\u7684\u901F\u5EA6\u5927\u4E8E\u6D88\u8D39\u8005\u6D88\u8D39\u7684\u901F\u5EA6\uFF0C\u5E76\u4E14\u5F53\u751F\u4EA7\u51FA\u6765\u7684\u6570\u636E\u7D2F\u79EF\u5230\u4E00\u5B9A\u7A0B\u5EA6\u7684\u65F6\u5019\uFF0C\u90A3\u4E48\u751F\u4EA7\u8005\u5FC5\u987B\u6682\u505C\u7B49\u5F85\u4E00\u4E0B\uFF08\u963B\u585E\u751F\u4EA7\u8005\u7EBF\u7A0B\uFF09\uFF0C\u4EE5\u4FBF\u7B49\u5F85\u6D88\u8D39\u8005\u7EBF\u7A0B\u628A\u7D2F\u79EF\u7684\u6570\u636E\u5904\u7406\u5B8C\u6BD5\uFF0C\u53CD\u4E4B\u4EA6\u7136\u3002 \u2022 \u5F53\u961F\u5217\u4E2D\u6CA1\u6709\u6570\u636E\u7684\u60C5\u51B5\u4E0B\uFF0C\u6D88\u8D39\u8005\u7AEF\u7684\u6240\u6709\u7EBF\u7A0B\u90FD\u4F1A\u88AB\u81EA\u52A8\u963B\u585E\uFF08\u6302\u8D77\uFF09\uFF0C\u76F4\u5230\u6709\u6570\u636E\u653E\u5165\u961F\u5217 \u2022 \u5F53\u961F\u5217\u4E2D\u586B\u6EE1\u6570\u636E\u7684\u60C5\u51B5\u4E0B\uFF0C\u751F\u4EA7\u8005\u7AEF\u7684\u6240\u6709\u7EBF\u7A0B\u90FD\u4F1A\u88AB\u81EA\u52A8\u963B\u585E\uFF08\u6302\u8D77\uFF09\uFF0C\u76F4\u5230\u961F\u5217\u4E2D\u6709\u7A7A\u7684\u4F4D\u7F6E\uFF0C\u7EBF\u7A0B\u88AB\u81EA\u52A8\u5524\u9192</p><h3 id="blockingqueue\u6838\u5FC3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#blockingqueue\u6838\u5FC3\u65B9\u6CD5" aria-hidden="true">#</a> BlockingQueue\u6838\u5FC3\u65B9\u6CD5</h3><p><img src="http://qnimg.gisfsde.com/work/image-20220216205945389.png" alt="image-20220216205945389" loading="lazy"></p><h4 id="_1-\u653E\u5165\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_1-\u653E\u5165\u6570\u636E" aria-hidden="true">#</a> 1.\u653E\u5165\u6570\u636E</h4><p>\u2022 offer(anObject):\u8868\u793A\u5982\u679C\u53EF\u80FD\u7684\u8BDD,\u5C06anObject\u52A0\u5230BlockingQueue\u91CC,\u5373\u5982\u679CBlockingQueue\u53EF\u4EE5\u5BB9\u7EB3,\u5219\u8FD4\u56DEtrue,\u5426\u5219\u8FD4\u56DEfalse.\uFF08\u672C\u65B9\u6CD5\u4E0D\u963B\u585E\u5F53\u524D\u6267\u884C\u65B9\u6CD5\u7684\u7EBF\u7A0B\uFF09 \u2022 offer(E o, long timeout, TimeUnit unit)\uFF1A\u53EF\u4EE5\u8BBE\u5B9A\u7B49\u5F85\u7684\u65F6\u95F4\uFF0C\u5982\u679C\u5728\u6307\u5B9A\u7684\u65F6\u95F4\u5185\uFF0C\u8FD8\u4E0D\u80FD\u5F80\u961F\u5217\u4E2D\u52A0\u5165BlockingQueue\uFF0C\u5219\u8FD4\u56DE\u5931\u8D25 \u2022 put(anObject):\u628AanObject\u52A0\u5230BlockingQueue\u91CC,\u5982\u679CBlockQueue\u6CA1\u6709\u7A7A\u95F4,\u5219\u8C03\u7528\u6B64\u65B9\u6CD5\u7684\u7EBF\u7A0B\u88AB\u963B\u65AD\u76F4\u5230BlockingQueue\u91CC\u9762\u6709\u7A7A\u95F4\u518D\u7EE7\u7EED.</p><h4 id="_2-\u83B7\u53D6\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_2-\u83B7\u53D6\u6570\u636E" aria-hidden="true">#</a> 2.\u83B7\u53D6\u6570\u636E</h4><p>\u2022 poll(time): \u53D6\u8D70BlockingQueue\u91CC\u6392\u5728\u9996\u4F4D\u7684\u5BF9\u8C61,\u82E5\u4E0D\u80FD\u7ACB\u5373\u53D6\u51FA,\u5219\u53EF\u4EE5\u7B49time\u53C2\u6570\u89C4\u5B9A\u7684\u65F6\u95F4,\u53D6\u4E0D\u5230\u65F6\u8FD4\u56DEnull \u2022 poll(long timeout, TimeUnit unit)\uFF1A\u4ECEBlockingQueue\u53D6\u51FA\u4E00\u4E2A\u961F\u9996\u7684\u5BF9\u8C61\uFF0C\u5982\u679C\u5728\u6307\u5B9A\u65F6\u95F4\u5185\uFF0C\u961F\u5217\u4E00\u65E6\u6709\u6570\u636E\u53EF\u53D6\uFF0C\u5219\u7ACB\u5373\u8FD4\u56DE\u961F\u5217\u4E2D\u7684\u6570\u636E\u3002\u5426\u5219\u77E5\u9053\u65F6\u95F4\u8D85\u65F6\u8FD8\u6CA1\u6709\u6570\u636E\u53EF\u53D6\uFF0C\u8FD4\u56DE\u5931\u8D25\u3002 \u2022 take(): \u53D6\u8D70BlockingQueue\u91CC\u6392\u5728\u9996\u4F4D\u7684\u5BF9\u8C61,\u82E5BlockingQueue\u4E3A\u7A7A,\u963B\u65AD\u8FDB\u5165\u7B49\u5F85\u72B6\u6001\u76F4\u5230BlockingQueue\u6709\u65B0\u7684\u6570\u636E\u88AB\u52A0\u5165; \u2022 drainTo(): \u4E00\u6B21\u6027\u4ECEBlockingQueue\u83B7\u53D6\u6240\u6709\u53EF\u7528\u7684\u6570\u636E\u5BF9\u8C61\uFF08\u8FD8\u53EF\u4EE5\u6307\u5B9A\u83B7\u53D6\u6570\u636E\u7684\u4E2A\u6570\uFF09\uFF0C\u901A\u8FC7\u8BE5\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u63D0\u5347\u83B7\u53D6\u6570\u636E\u6548\u7387\uFF1B\u4E0D\u9700\u8981\u591A\u6B21\u5206\u6279\u52A0\u9501\u6216\u91CA\u653E\u9501\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>queue</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ArrayBlockingQueue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">BlockingQueue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token comment">//\u963B\u585E\u961F\u5217</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlockingQueueDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u521B\u5EFA\u963B\u585E\u961F\u5217</span>
        <span class="token class-name">BlockingQueue</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> blockingQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u7B2C\u4E00\u7EC4</span>
<span class="token comment">//        System.out.println(blockingQueue.add(&quot;a&quot;));</span>
<span class="token comment">////        System.out.println(blockingQueue.add(&quot;b&quot;));</span>
<span class="token comment">////        System.out.println(blockingQueue.add(&quot;c&quot;));</span>
<span class="token comment">////        //System.out.println(blockingQueue.element());</span>
<span class="token comment">////</span>
<span class="token comment">////        //System.out.println(blockingQueue.add(&quot;w&quot;));</span>
<span class="token comment">////        System.out.println(blockingQueue.remove());</span>
<span class="token comment">////        System.out.println(blockingQueue.remove());</span>
<span class="token comment">////        System.out.println(blockingQueue.remove());</span>
<span class="token comment">////        System.out.println(blockingQueue.remove());</span>

        <span class="token comment">//\u7B2C\u4E8C\u7EC4</span>
<span class="token comment">//        System.out.println(blockingQueue.offer(&quot;a&quot;));</span>
<span class="token comment">//        System.out.println(blockingQueue.offer(&quot;b&quot;));</span>
<span class="token comment">//        System.out.println(blockingQueue.offer(&quot;c&quot;));</span>
<span class="token comment">//        System.out.println(blockingQueue.offer(&quot;www&quot;));</span>
<span class="token comment">//</span>
<span class="token comment">//        System.out.println(blockingQueue.poll());</span>
<span class="token comment">//        System.out.println(blockingQueue.poll());</span>
<span class="token comment">//        System.out.println(blockingQueue.poll());</span>
<span class="token comment">//        System.out.println(blockingQueue.poll());</span>

        <span class="token comment">//\u7B2C\u4E09\u7EC4  put \u6CA1\u7A7A\u95F4\u963B\u585E  take \u6CA1\u6570\u636E\u963B\u585E</span>
<span class="token comment">//        blockingQueue.put(&quot;a&quot;);</span>
<span class="token comment">//        blockingQueue.put(&quot;b&quot;);</span>
<span class="token comment">//        blockingQueue.put(&quot;c&quot;);</span>
<span class="token comment">//        //blockingQueue.put(&quot;w&quot;);</span>
<span class="token comment">//</span>
<span class="token comment">//        System.out.println(blockingQueue.take());</span>
<span class="token comment">//        System.out.println(blockingQueue.take());</span>
<span class="token comment">//        System.out.println(blockingQueue.take());</span>
<span class="token comment">//        System.out.println(blockingQueue.take());</span>

        <span class="token comment">//\u7B2C\u56DB\u7EC4</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>blockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>blockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>blockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>blockingQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span><span class="token number">3L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="arrayblockingqueue-\u5E38\u7528" tabindex="-1"><a class="header-anchor" href="#arrayblockingqueue-\u5E38\u7528" aria-hidden="true">#</a> ArrayBlockingQueue(\u5E38\u7528)</h4><p>\u57FA\u4E8E\u6570\u7EC4\u7684\u963B\u585E\u961F\u5217\u5B9E\u73B0\uFF0C\u5728ArrayBlockingQueue\u5185\u90E8\uFF0C\u7EF4\u62A4\u4E86\u4E00\u4E2A\u5B9A\u957F\u6570\u7EC4\uFF0C\u4EE5\u4FBF\u7F13\u5B58\u961F\u5217\u4E2D\u7684\u6570\u636E\u5BF9\u8C61\uFF0C\u8FD9\u662F\u4E00\u4E2A\u5E38\u7528\u7684\u963B\u585E\u961F\u5217\uFF0C\u9664\u4E86\u4E00\u4E2A\u5B9A\u957F\u6570\u7EC4\u5916\uFF0CArrayBlockingQueue\u5185\u90E8\u8FD8\u4FDD\u5B58\u7740\u4E24\u4E2A\u6574\u5F62\u53D8\u91CF\uFF0C\u5206\u522B\u6807\u8BC6\u7740\u961F\u5217\u7684\u5934\u90E8\u548C\u5C3E\u90E8\u5728\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E\u3002 ArrayBlockingQueue\u5728\u751F\u4EA7\u8005\u653E\u5165\u6570\u636E\u548C\u6D88\u8D39\u8005\u83B7\u53D6\u6570\u636E\uFF0C\u90FD\u662F\u5171\u7528\u540C\u4E00\u4E2A\u9501\u5BF9\u8C61\uFF0C\u7531\u6B64\u4E5F\u610F\u5473\u7740\u4E24\u8005\u65E0\u6CD5\u771F\u6B63\u5E76\u884C\u8FD0\u884C\uFF0C\u8FD9\u70B9\u5C24\u5176\u4E0D\u540C\u4E8ELinkedBlockingQueue\uFF1B\u6309\u7167\u5B9E\u73B0\u539F\u7406\u6765\u5206\u6790\uFF0CArrayBlockingQueue\u5B8C\u5168\u53EF\u4EE5\u91C7\u7528\u5206\u79BB\u9501\uFF0C\u4ECE\u800C\u5B9E\u73B0\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u64CD\u4F5C\u7684\u5B8C\u5168\u5E76\u884C\u8FD0\u884C\u3002Doug Lea\u4E4B\u6240\u4EE5\u6CA1\u8FD9\u6837\u53BB\u505A\uFF0C\u4E5F\u8BB8\u662F\u56E0\u4E3AArrayBlockingQueue\u7684\u6570\u636E\u5199\u5165\u548C\u83B7\u53D6\u64CD\u4F5C\u5DF2\u7ECF\u8DB3\u591F\u8F7B\u5DE7\uFF0C\u4EE5\u81F3\u4E8E\u5F15\u5165\u72EC\u7ACB\u7684\u9501\u673A\u5236\uFF0C\u9664\u4E86\u7ED9\u4EE3\u7801\u5E26\u6765\u989D\u5916\u7684\u590D\u6742\u6027\u5916\uFF0C\u5176\u5728\u6027\u80FD\u4E0A\u5B8C\u5168\u5360\u4E0D\u5230\u4EFB\u4F55\u4FBF\u5B9C\u3002 ArrayBlockingQueue\u548CLinkedBlockingQueue\u95F4\u8FD8\u6709\u4E00\u4E2A\u660E\u663E\u7684\u4E0D\u540C\u4E4B\u5904\u5728\u4E8E\uFF0C\u524D\u8005\u5728\u63D2\u5165\u6216\u5220\u9664\u5143\u7D20\u65F6\u4E0D\u4F1A\u4EA7\u751F\u6216\u9500\u6BC1\u4EFB\u4F55\u989D\u5916\u7684\u5BF9\u8C61\u5B9E\u4F8B\uFF0C\u800C\u540E\u8005\u5219\u4F1A\u751F\u6210\u4E00\u4E2A\u989D\u5916\u7684Node\u5BF9\u8C61\u3002\u8FD9\u5728\u957F\u65F6\u95F4\u5185\u9700\u8981\u9AD8\u6548\u5E76\u53D1\u5730\u5904\u7406\u5927\u6279\u91CF\u6570\u636E\u7684\u7CFB\u7EDF\u4E2D\uFF0C\u5176\u5BF9\u4E8EGC\u7684\u5F71\u54CD\u8FD8\u662F\u5B58\u5728\u4E00\u5B9A\u7684\u533A\u522B\u3002\u800C\u5728\u521B\u5EFAArrayBlockingQueue\u65F6\uFF0C\u6211\u4EEC\u8FD8\u53EF\u4EE5\u63A7\u5236\u5BF9\u8C61\u7684\u5185\u90E8\u9501\u662F\u5426\u91C7\u7528\u516C\u5E73\u9501\uFF0C\u9ED8\u8BA4\u91C7\u7528\u975E\u516C\u5E73\u9501\u3002 <strong>\u4E00\u53E5\u8BDD\u603B\u7ED3: \u7531\u6570\u7EC4\u7ED3\u6784\u7EC4\u6210\u7684\u6709\u754C\u963B\u585E\u961F\u5217\u3002</strong></p><h4 id="linkedblockingqueue-\u5E38\u7528" tabindex="-1"><a class="header-anchor" href="#linkedblockingqueue-\u5E38\u7528" aria-hidden="true">#</a> LinkedBlockingQueue(\u5E38\u7528)</h4><p>\u57FA\u4E8E\u94FE\u8868\u7684\u963B\u585E\u961F\u5217\uFF0C\u540CArrayListBlockingQueue\u7C7B\u4F3C\uFF0C\u5176\u5185\u90E8\u4E5F\u7EF4\u6301\u7740\u4E00\u4E2A\u6570\u636E\u7F13\u51B2\u961F\u5217\uFF08\u8BE5\u961F\u5217\u7531\u4E00\u4E2A\u94FE\u8868\u6784\u6210\uFF09\uFF0C\u5F53\u751F\u4EA7\u8005\u5F80\u961F\u5217\u4E2D\u653E\u5165\u4E00\u4E2A\u6570\u636E\u65F6\uFF0C\u961F\u5217\u4F1A\u4ECE\u751F\u4EA7\u8005\u624B\u4E2D\u83B7\u53D6\u6570\u636E\uFF0C\u5E76\u7F13\u5B58\u5728\u961F\u5217\u5185\u90E8\uFF0C\u800C\u751F\u4EA7\u8005\u7ACB\u5373\u8FD4\u56DE\uFF1B\u53EA\u6709\u5F53\u961F\u5217\u7F13\u51B2\u533A\u8FBE\u5230\u6700\u5927\u503C\u7F13\u5B58\u5BB9\u91CF\u65F6\uFF08LinkedBlockingQueue\u53EF\u4EE5\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6307\u5B9A\u8BE5\u503C\uFF09\uFF0C\u624D\u4F1A\u963B\u585E\u751F\u4EA7\u8005\u961F\u5217\uFF0C\u76F4\u5230\u6D88\u8D39\u8005\u4ECE\u961F\u5217\u4E2D\u6D88\u8D39\u6389\u4E00\u4EFD \u6570\u636E\uFF0C\u751F\u4EA7\u8005\u7EBF\u7A0B\u4F1A\u88AB\u5524\u9192\uFF0C\u53CD\u4E4B\u5BF9\u4E8E\u6D88\u8D39\u8005\u8FD9\u7AEF\u7684\u5904\u7406\u4E5F\u57FA\u4E8E\u540C\u6837\u7684\u539F\u7406\u3002\u800CLinkedBlockingQueue\u4E4B\u6240\u4EE5\u80FD\u591F\u9AD8\u6548\u7684\u5904\u7406\u5E76\u53D1\u6570\u636E\uFF0C\u8FD8\u56E0\u4E3A\u5176\u5BF9\u4E8E\u751F\u4EA7\u8005\u7AEF\u548C\u6D88\u8D39\u8005\u7AEF\u5206\u522B\u91C7\u7528\u4E86\u72EC\u7ACB\u7684\u9501\u6765\u63A7\u5236\u6570\u636E\u540C\u6B65\uFF0C\u8FD9\u4E5F\u610F\u5473\u7740\u5728\u9AD8\u5E76\u53D1\u7684\u60C5\u51B5\u4E0B\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u53EF\u4EE5\u5E76\u884C\u5730\u64CD\u4F5C\u961F\u5217\u4E2D\u7684\u6570\u636E\uFF0C\u4EE5\u6B64\u6765\u63D0\u9AD8\u6574\u4E2A\u961F\u5217\u7684\u5E76\u53D1\u6027\u80FD\u3002 ArrayBlockingQueue\u548CLinkedBlockingQueue\u662F\u4E24\u4E2A\u6700\u666E\u901A\u4E5F\u662F\u6700\u5E38\u7528\u7684\u963B\u585E\u961F\u5217\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u5728\u5904\u7406\u591A\u7EBF\u7A0B\u95F4\u7684\u751F\u4EA7\u8005\u6D88\u8D39\u8005\u95EE\u9898\uFF0C\u4F7F\u7528\u8FD9\u4E24\u4E2A\u7C7B\u8DB3\u4EE5\u3002 <strong>\u4E00\u53E5\u8BDD\u603B\u7ED3: \u7531\u94FE\u8868\u7ED3\u6784\u7EC4\u6210\u7684\u6709\u754C\uFF08\u4F46\u5927\u5C0F\u9ED8\u8BA4\u503C\u4E3Ainteger.MAX_VALUE\uFF09\u963B\u585E\u961F\u5217\u3002</strong></p><h4 id="delayqueue" tabindex="-1"><a class="header-anchor" href="#delayqueue" aria-hidden="true">#</a> DelayQueue</h4><p>DelayQueue\u4E2D\u7684\u5143\u7D20\u53EA\u6709\u5F53\u5176\u6307\u5B9A\u7684\u5EF6\u8FDF\u65F6\u95F4\u5230\u4E86\uFF0C\u624D\u80FD\u591F\u4ECE\u961F\u5217\u4E2D\u83B7\u53D6\u5230\u8BE5\u5143\u7D20\u3002DelayQueue\u662F\u4E00\u4E2A\u6CA1\u6709\u5927\u5C0F\u9650\u5236\u7684\u961F\u5217\uFF0C\u56E0\u6B64\u5F80\u961F\u5217\u4E2D\u63D2\u5165\u6570\u636E\u7684\u64CD\u4F5C\uFF08\u751F\u4EA7\u8005\uFF09\u6C38\u8FDC\u4E0D\u4F1A\u88AB\u963B\u585E\uFF0C\u800C\u53EA\u6709\u83B7\u53D6\u6570\u636E\u7684\u64CD\u4F5C\uFF08\u6D88\u8D39\u8005\uFF09\u624D\u4F1A\u88AB\u963B\u585E\u3002 <strong>\u4E00\u53E5\u8BDD\u603B\u7ED3: \u4F7F\u7528\u4F18\u5148\u7EA7\u961F\u5217\u5B9E\u73B0\u7684\u5EF6\u8FDF\u65E0\u754C\u963B\u585E\u961F\u5217\u3002</strong></p><h4 id="priorityblockingqueue" tabindex="-1"><a class="header-anchor" href="#priorityblockingqueue" aria-hidden="true">#</a> PriorityBlockingQueue</h4><p>\u57FA\u4E8E\u4F18\u5148\u7EA7\u7684\u963B\u585E\u961F\u5217\uFF08\u4F18\u5148\u7EA7\u7684\u5224\u65AD\u901A\u8FC7\u6784\u9020\u51FD\u6570\u4F20\u5165\u7684Compator\u5BF9\u8C61\u6765\u51B3\u5B9A\uFF09\uFF0C\u4F46\u9700\u8981\u6CE8\u610F\u7684\u662FPriorityBlockingQueue\u5E76\u4E0D\u4F1A\u963B\u585E\u6570\u636E\u751F\u4EA7\u8005\uFF0C\u800C\u53EA\u4F1A\u5728\u6CA1\u6709\u53EF\u6D88\u8D39\u7684\u6570\u636E\u65F6\uFF0C\u963B\u585E\u6570\u636E\u7684\u6D88\u8D39\u8005\u3002 \u56E0\u6B64\u4F7F\u7528\u7684\u65F6\u5019\u8981\u7279\u522B\u6CE8\u610F\uFF0C\u751F\u4EA7\u8005\u751F\u4EA7\u6570\u636E\u7684\u901F\u5EA6\u7EDD\u5BF9\u4E0D\u80FD\u5FEB\u4E8E\u6D88\u8D39\u8005\u6D88\u8D39\u6570\u636E\u7684\u901F\u5EA6\uFF0C\u5426\u5219\u65F6\u95F4\u4E00\u957F\uFF0C\u4F1A\u6700\u7EC8\u8017\u5C3D\u6240\u6709\u7684\u53EF\u7528\u5806\u5185\u5B58\u7A7A\u95F4\u3002 \u5728\u5B9E\u73B0PriorityBlockingQueue\u65F6\uFF0C\u5185\u90E8\u63A7\u5236\u7EBF\u7A0B\u540C\u6B65\u7684\u9501\u91C7\u7528\u7684\u662F\u516C\u5E73\u9501\u3002 <strong>\u4E00\u53E5\u8BDD\u603B\u7ED3: \u652F\u6301\u4F18\u5148\u7EA7\u6392\u5E8F\u7684\u65E0\u754C\u963B\u585E\u961F\u5217\u3002</strong></p><h4 id="synchronousqueue" tabindex="-1"><a class="header-anchor" href="#synchronousqueue" aria-hidden="true">#</a> SynchronousQueue</h4><p>\u4E00\u79CD\u65E0\u7F13\u51B2\u7684\u7B49\u5F85\u961F\u5217\uFF0C\u7C7B\u4F3C\u4E8E\u65E0\u4E2D\u4ECB\u7684\u76F4\u63A5\u4EA4\u6613\uFF0C\u6709\u70B9\u50CF\u539F\u59CB\u793E\u4F1A\u4E2D\u7684\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\uFF0C\u751F\u4EA7\u8005\u62FF\u7740\u4EA7\u54C1\u53BB\u96C6\u5E02\u9500\u552E\u7ED9\u4EA7\u54C1\u7684\u6700\u7EC8\u6D88\u8D39\u8005\uFF0C\u800C\u6D88\u8D39\u8005\u5FC5\u987B\u4EB2\u81EA\u53BB\u96C6\u5E02\u627E\u5230\u6240\u8981\u5546\u54C1\u7684\u76F4\u63A5\u751F\u4EA7\u8005\uFF0C\u5982\u679C\u4E00\u65B9\u6CA1\u6709\u627E\u5230\u5408\u9002\u7684\u76EE\u6807\uFF0C\u90A3\u4E48\u5BF9\u4E0D\u8D77\uFF0C\u5927\u5BB6\u90FD\u5728\u96C6\u5E02\u7B49\u5F85\u3002\u76F8\u5BF9\u4E8E\u6709\u7F13\u51B2\u7684BlockingQueue\u6765\u8BF4\uFF0C\u5C11\u4E86\u4E00\u4E2A\u4E2D\u95F4\u7ECF\u9500\u5546\u7684\u73AF\u8282\uFF08\u7F13\u51B2\u533A\uFF09\uFF0C\u5982\u679C\u6709\u7ECF\u9500\u5546\uFF0C\u751F\u4EA7\u8005\u76F4\u63A5\u628A\u4EA7\u54C1\u6279\u53D1\u7ED9\u7ECF\u9500\u5546\uFF0C\u800C\u65E0\u9700\u5728\u610F\u7ECF\u9500\u5546\u6700\u7EC8\u4F1A\u5C06\u8FD9\u4E9B\u4EA7\u54C1\u5356\u7ED9\u90A3\u4E9B\u6D88\u8D39\u8005\uFF0C\u7531\u4E8E\u7ECF\u9500\u5546\u53EF\u4EE5\u5E93\u5B58\u4E00\u90E8\u5206\u5546\u54C1\uFF0C\u56E0\u6B64\u76F8\u5BF9\u4E8E\u76F4\u63A5\u4EA4\u6613\u6A21\u5F0F\uFF0C\u603B\u4F53\u6765\u8BF4\u91C7\u7528\u4E2D\u95F4\u7ECF\u9500\u5546\u7684\u6A21\u5F0F\u4F1A\u541E\u5410\u91CF\u9AD8\u4E00\u4E9B\uFF08\u53EF\u4EE5\u6279\u91CF\u4E70\u5356\uFF09\uFF1B\u4F46\u53E6\u4E00\u65B9\u9762\uFF0C\u53C8\u56E0\u4E3A\u7ECF\u9500\u5546\u7684\u5F15\u5165\uFF0C\u4F7F\u5F97\u4EA7\u54C1\u4ECE\u751F\u4EA7\u8005\u5230\u6D88\u8D39\u8005\u4E2D\u95F4\u589E\u52A0\u4E86\u989D\u5916\u7684\u4EA4\u6613\u73AF\u8282\uFF0C\u5355\u4E2A\u4EA7\u54C1\u7684\u53CA\u65F6\u54CD\u5E94\u6027\u80FD\u53EF\u80FD\u4F1A\u964D\u4F4E\u3002 \u58F0\u660E\u4E00\u4E2ASynchronousQueue\u6709\u4E24\u79CD\u4E0D\u540C\u7684\u65B9\u5F0F\uFF0C\u5B83\u4EEC\u4E4B\u95F4\u6709\u7740\u4E0D\u592A\u4E00\u6837\u7684\u884C\u4E3A\u3002 \u516C\u5E73\u6A21\u5F0F\u548C\u975E\u516C\u5E73\u6A21\u5F0F\u7684\u533A\u522B: \u2022 \u516C\u5E73\u6A21\u5F0F\uFF1ASynchronousQueue\u4F1A\u91C7\u7528\u516C\u5E73\u9501\uFF0C\u5E76\u914D\u5408\u4E00\u4E2AFIFO\u961F\u5217\u6765\u963B\u585E\u591A\u4F59\u7684\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\uFF0C\u4ECE\u800C\u4F53\u7CFB\u6574\u4F53\u7684\u516C\u5E73\u7B56\u7565\uFF1B \u2022 \u975E\u516C\u5E73\u6A21\u5F0F\uFF08SynchronousQueue\u9ED8\u8BA4\uFF09\uFF1ASynchronousQueue\u91C7\u7528\u975E\u516C\u5E73\u9501\uFF0C\u540C\u65F6\u914D\u5408\u4E00\u4E2ALIFO\u961F\u5217\u6765\u7BA1\u7406\u591A\u4F59\u7684\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\uFF0C\u800C\u540E\u4E00\u79CD\u6A21\u5F0F\uFF0C\u5982\u679C\u751F\u4EA7\u8005\u548C\u6D88\u8D39\u8005\u7684\u5904\u7406\u901F\u5EA6\u6709\u5DEE\u8DDD\uFF0C\u5219\u5F88\u5BB9\u6613\u51FA\u73B0\u9965\u6E34\u7684\u60C5\u51B5\uFF0C\u5373\u53EF\u80FD\u6709\u67D0\u4E9B\u751F\u4EA7\u8005\u6216\u8005\u662F\u6D88\u8D39\u8005\u7684\u6570\u636E\u6C38\u8FDC\u90FD\u5F97\u4E0D\u5230\u5904\u7406\u3002 <strong>\u4E00\u53E5\u8BDD\u603B\u7ED3: \u4E0D\u5B58\u50A8\u5143\u7D20\u7684\u963B\u585E\u961F\u5217\uFF0C\u4E5F\u5373\u5355\u4E2A\u5143\u7D20\u7684\u961F\u5217\u3002</strong></p><h4 id="linkedtransferqueue" tabindex="-1"><a class="header-anchor" href="#linkedtransferqueue" aria-hidden="true">#</a> LinkedTransferQueue</h4><p>LinkedTransferQueue\u662F\u4E00\u4E2A\u7531\u94FE\u8868\u7ED3\u6784\u7EC4\u6210\u7684\u65E0\u754C\u963B\u585ETransferQueue\u961F\u5217\u3002\u76F8\u5BF9\u4E8E\u5176\u4ED6\u963B\u585E\u961F\u5217\uFF0CLinkedTransferQueue\u591A\u4E86tryTransfer\u548Ctransfer\u65B9\u6CD5\u3002 LinkedTransferQueue\u91C7\u7528\u4E00\u79CD\u9884\u5360\u6A21\u5F0F\u3002\u610F\u601D\u5C31\u662F\u6D88\u8D39\u8005\u7EBF\u7A0B\u53D6\u5143\u7D20\u65F6\uFF0C\u5982\u679C\u961F\u5217\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u76F4\u63A5\u53D6\u8D70\u6570\u636E\uFF0C\u82E5\u961F\u5217\u4E3A\u7A7A\uFF0C\u90A3\u5C31\u751F\u6210\u4E00\u4E2A\u8282\u70B9\uFF08\u8282\u70B9\u5143\u7D20\u4E3Anull\uFF09\u5165\u961F\uFF0C\u7136\u540E\u6D88\u8D39\u8005\u7EBF\u7A0B\u88AB\u7B49\u5F85\u5728\u8FD9\u4E2A\u8282\u70B9\u4E0A\uFF0C\u540E\u9762\u751F\u4EA7\u8005\u7EBF\u7A0B\u5165\u961F\u65F6\u53D1\u73B0\u6709\u4E00\u4E2A\u5143\u7D20\u4E3Anull\u7684\u8282\u70B9\uFF0C\u751F\u4EA7\u8005\u7EBF\u7A0B\u5C31\u4E0D\u5165\u961F\u4E86\uFF0C\u76F4\u63A5\u5C31\u5C06\u5143\u7D20\u586B\u5145\u5230\u8BE5\u8282\u70B9\uFF0C\u5E76\u5524\u9192\u8BE5\u8282\u70B9\u7B49\u5F85\u7684\u7EBF\u7A0B\uFF0C\u88AB\u5524\u9192\u7684\u6D88\u8D39\u8005\u7EBF\u7A0B\u53D6\u8D70\u5143\u7D20\uFF0C\u4ECE\u8C03\u7528\u7684\u65B9\u6CD5\u8FD4\u56DE\u3002 <strong>\u4E00\u53E5\u8BDD\u603B\u7ED3: \u7531\u94FE\u8868\u7EC4\u6210\u7684\u65E0\u754C\u963B\u585E\u961F\u5217\u3002</strong></p><h4 id="linkedblockingdeque" tabindex="-1"><a class="header-anchor" href="#linkedblockingdeque" aria-hidden="true">#</a> LinkedBlockingDeque</h4><p>LinkedBlockingDeque\u662F\u4E00\u4E2A\u7531\u94FE\u8868\u7ED3\u6784\u7EC4\u6210\u7684\u53CC\u5411\u963B\u585E\u961F\u5217\uFF0C\u5373\u53EF\u4EE5\u4ECE\u961F\u5217\u7684\u4E24\u7AEF\u63D2\u5165\u548C\u79FB\u9664\u5143\u7D20\u3002 \u5BF9\u4E8E\u4E00\u4E9B\u6307\u5B9A\u7684\u64CD\u4F5C\uFF0C\u5728\u63D2\u5165\u6216\u8005\u83B7\u53D6\u961F\u5217\u5143\u7D20\u65F6\u5982\u679C\u961F\u5217\u72B6\u6001\u4E0D\u5141\u8BB8\u8BE5\u64CD\u4F5C\u53EF\u80FD\u4F1A\u963B\u585E\u4F4F\u8BE5\u7EBF\u7A0B\u76F4\u5230\u961F\u5217\u72B6\u6001\u53D8\u66F4\u4E3A\u5141\u8BB8\u64CD\u4F5C\uFF0C\u8FD9\u91CC\u7684\u963B\u585E\u4E00\u822C\u6709\u4E24\u79CD\u60C5\u51B5 \u2022 \u63D2\u5165\u5143\u7D20\u65F6: \u5982\u679C\u5F53\u524D\u961F\u5217\u5DF2\u6EE1\u5C06\u4F1A\u8FDB\u5165\u963B\u585E\u72B6\u6001\uFF0C\u4E00\u76F4\u7B49\u5230\u961F\u5217\u6709\u7A7A\u7684\u4F4D\u7F6E\u65F6\u518D\u8BB2\u8BE5\u5143\u7D20\u63D2\u5165\uFF0C\u8BE5\u64CD\u4F5C\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E\u8D85\u65F6\u53C2\u6570\uFF0C\u8D85\u65F6\u540E\u8FD4\u56DE false \u8868\u793A\u64CD\u4F5C\u5931\u8D25\uFF0C\u4E5F\u53EF\u4EE5\u4E0D\u8BBE\u7F6E\u8D85\u65F6\u53C2\u6570\u4E00\u76F4\u963B\u585E\uFF0C\u4E2D\u65AD\u540E\u629B\u51FAInterruptedException\u5F02\u5E38 \u2022 \u8BFB\u53D6\u5143\u7D20\u65F6: \u5982\u679C\u5F53\u524D\u961F\u5217\u4E3A\u7A7A\u4F1A\u963B\u585E\u4F4F\u76F4\u5230\u961F\u5217\u4E0D\u4E3A\u7A7A\u7136\u540E\u8FD4\u56DE\u5143\u7D20\uFF0C\u540C\u6837\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E\u8D85\u65F6\u53C2\u6570 <strong>\u4E00\u53E5\u8BDD\u603B\u7ED3: \u7531\u94FE\u8868\u7EC4\u6210\u7684\u53CC\u5411\u963B\u585E\u961F\u5217</strong></p><h3 id="\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3" aria-hidden="true">#</a> \u5C0F\u7ED3</h3><ol><li>\u5728\u591A\u7EBF\u7A0B\u9886\u57DF\uFF1A\u6240\u8C13\u963B\u585E\uFF0C\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u4F1A\u6302\u8D77\u7EBF\u7A0B\uFF08\u5373\u963B\u585E\uFF09\uFF0C\u4E00\u65E6\u6761\u4EF6\u6EE1\u8DB3\uFF0C\u88AB\u6302\u8D77\u7684\u7EBF\u7A0B\u53C8\u4F1A\u81EA\u52A8\u88AB\u5524\u8D77</li><li>\u4E3A\u4EC0\u4E48\u9700\u8981BlockingQueue? \u5728concurrent\u5305\u53D1\u5E03\u4EE5\u524D\uFF0C\u5728\u591A\u7EBF\u7A0B\u73AF\u5883\u4E0B\uFF0C\u6211\u4EEC\u6BCF\u4E2A\u7A0B\u5E8F\u5458\u90FD\u5FC5\u987B\u53BB\u81EA\u5DF1\u63A7\u5236\u8FD9\u4E9B\u7EC6\u8282\uFF0C\u5C24\u5176\u8FD8\u8981\u517C\u987E\u6548\u7387\u548C\u7EBF\u7A0B\u5B89\u5168\uFF0C\u800C\u8FD9\u4F1A\u7ED9\u6211\u4EEC\u7684\u7A0B\u5E8F\u5E26\u6765\u4E0D\u5C0F\u7684\u590D\u6742\u5EA6\u3002\u4F7F\u7528\u540E\u6211\u4EEC\u4E0D\u9700\u8981\u5173\u5FC3\u4EC0\u4E48\u65F6\u5019\u9700\u8981\u963B\u585E\u7EBF\u7A0B\uFF0C\u4EC0\u4E48\u65F6\u5019\u9700\u8981\u5524\u9192\u7EBF\u7A0B\uFF0C\u56E0\u4E3A\u8FD9\u4E00\u5207BlockingQueue\u90FD\u7ED9\u4F60\u4E00\u624B\u5305\u529E\u4E86</li></ol>`,102),_n={id:"\u7EBF\u7A0B\u6C60",tabindex:"-1"},On=n("a",{class:"header-anchor",href:"#\u7EBF\u7A0B\u6C60","aria-hidden":"true"},"#",-1),Pn=s(),Nn={href:"https://www.jianshu.com/p/7726c70cdc40",target:"_blank",rel:"noopener noreferrer"},Dn=s("\u7EBF\u7A0B\u6C60"),Ln=p(`<p>\u200B \u7EBF\u7A0B\u6C60\uFF08Thread Pool\uFF09\uFF1A\u4E00\u79CD\u7EBF\u7A0B\u4F7F\u7528\u6A21\u5F0F\u3002\u7EBF\u7A0B\u8FC7\u591A\u4F1A\u5E26\u6765\u8C03\u5EA6\u5F00\u9500\uFF0C\u8FDB\u800C\u5F71\u54CD\u7F13\u5B58\u5C40\u90E8\u6027\u548C\u6574\u4F53\u6027\u80FD\u3002\u800C\u7EBF\u7A0B\u6C60\u7EF4\u62A4\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u7B49\u5F85\u7740\u76D1\u7763\u7BA1\u7406\u8005\u5206\u914D\u53EF\u5E76\u53D1\u6267\u884C\u7684\u4EFB\u52A1\u3002\u8FD9\u907F\u514D\u4E86\u5728\u5904\u7406\u77ED\u65F6\u95F4\u4EFB\u52A1\u65F6\u521B\u5EFA\u4E0E\u9500\u6BC1\u7EBF\u7A0B\u7684\u4EE3\u4EF7\u3002\u7EBF\u7A0B\u6C60\u4E0D\u4EC5\u80FD\u591F\u4FDD\u8BC1\u5185\u6838\u7684\u5145\u5206\u5229\u7528\uFF0C\u8FD8\u80FD\u9632\u6B62\u8FC7\u5206\u8C03\u5EA6\u3002 \u200B \u4F8B\u5B50\uFF1A\u4EE5\u524D\u5355\u6838CPU\u7535\u8111\uFF0C\u5047\u7684\u591A\u7EBF\u7A0B\uFF0C\u50CF\u9A6C\u620F\u56E2\u5C0F\u4E11\u73A9\u591A\u4E2A\u7403\uFF0CCPU\u9700\u8981\u6765\u56DE\u5207\u6362\u3002 \u73B0\u5728\u591A\u6838\u7535\u8111\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u5404\u81EA\u8DD1\u5728\u72EC\u7ACB\u7684CPU\u4E0A\uFF0C\u4E0D\u7528\u5207\u6362\u6548\u7387\u9AD8\u3002 <strong>\u4F18\u52BF</strong>\uFF1A \u7EBF\u7A0B\u6C60\u505A\u7684\u5DE5\u4F5C\u53EA\u8981\u662F\u63A7\u5236\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u91CF\uFF0C\u5904\u7406\u8FC7\u7A0B\u4E2D\u5C06\u4EFB\u52A1\u653E\u5165\u961F\u5217\uFF0C\u7136\u540E\u5728\u7EBF\u7A0B\u521B\u5EFA\u540E\u542F\u52A8\u8FD9\u4E9B\u4EFB\u52A1\uFF0C\u5982\u679C\u7EBF\u7A0B\u6570\u91CF\u8D85\u8FC7\u4E86\u6700\u5927\u6570\u91CF\uFF0C\u8D85\u51FA\u6570\u91CF\u7684\u7EBF\u7A0B\u6392\u961F\u7B49\u5019\uFF0C\u7B49\u5176\u4ED6\u7EBF\u7A0B\u6267\u884C\u5B8C\u6BD5\uFF0C\u518D\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA\u4EFB\u52A1\u6765\u6267\u884C\u3002 <strong>\u7279\u70B9</strong>\uFF1A \u2022 \u964D\u4F4E\u8D44\u6E90\u6D88\u8017: \u901A\u8FC7\u91CD\u590D\u5229\u7528\u5DF2\u521B\u5EFA\u7684\u7EBF\u7A0B<strong>\u964D\u4F4E\u7EBF\u7A0B\u521B\u5EFA\u548C\u9500\u6BC1\u9020\u6210\u7684\u9500\u8017</strong>\u3002 \u2022 <strong>\u63D0\u9AD8\u54CD\u5E94\u901F\u5EA6</strong>: \u5F53\u4EFB\u52A1\u5230\u8FBE\u65F6\uFF0C\u4EFB\u52A1\u53EF\u4EE5\u4E0D\u9700\u8981\u7B49\u5F85\u7EBF\u7A0B\u521B\u5EFA\u5C31\u80FD\u7ACB\u5373\u6267\u884C\u3002 \u2022 <strong>\u63D0\u9AD8\u7EBF\u7A0B\u7684\u53EF\u7BA1\u7406\u6027</strong>: \u7EBF\u7A0B\u662F\u7A00\u7F3A\u8D44\u6E90\uFF0C\u5982\u679C\u65E0\u9650\u5236\u7684\u521B\u5EFA\uFF0C\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5185\u5B58\u5360\u7528\u8FC7\u591A\u800C\u4EA7\u751FOOM\uFF0C\u5E76\u4E14\u4F1A\u9020\u6210cpu\u8FC7\u5EA6\u5207\u6362\uFF08cpu\u5207\u6362\u7EBF\u7A0B\u662F\u6709\u65F6\u95F4\u6210\u672C\u7684\uFF08\u9700\u8981\u4FDD\u6301\u5F53\u524D\u6267\u884C\u7EBF\u7A0B\u7684\u73B0\u573A\uFF0C\u5E76\u6062\u590D\u8981\u6267\u884C\u7EBF\u7A0B\u7684\u73B0\u573A\uFF09\uFF09,\u4E0D\u4EC5\u4F1A\u9500\u8017\u7CFB\u7EDF\u8D44\u6E90\uFF0C\u8FD8\u4F1A\u964D\u4F4E\u7CFB\u7EDF\u7684\u7A33\u5B9A\u6027\uFF0C\u4F7F\u7528\u7EBF\u7A0B\u6C60\u53EF\u4EE5\u8FDB\u884C\u7EDF\u4E00\u7684\u5206\u914D\uFF0C\u8C03\u4F18\u548C\u76D1\u63A7\u3002\u65B9\u4FBF\u7EBF\u7A0B<strong>\u5E76\u53D1\u6570\u7684\u7BA1\u63A7</strong>\u3002 \u2022 \u63D0\u4F9B\u66F4\u5F3A\u5927\u7684\u529F\u80FD\uFF0C<strong>\u5EF6\u65F6\u5B9A\u65F6\u7EBF\u7A0B\u6C60</strong>\u3002 \u2022 Java\u4E2D\u7684\u7EBF\u7A0B\u6C60\u662F\u901A\u8FC7<strong>Executor\u6846\u67B6</strong>\u5B9E\u73B0\u7684\uFF0C\u8BE5\u6846\u67B6\u4E2D\u7528\u5230\u4E86<strong>Executor\uFF0CExecutors\uFF0CExecutorService\uFF0CThreadPoolExecutor</strong>\u8FD9\u51E0\u4E2A\u7C7B\u3002</p><p><img src="http://qnimg.gisfsde.com/work/image-20220216210901755.png" alt="image-20220216210901755" loading="lazy"></p><h3 id="\u521B\u5EFA\u5E38\u7528\u4E09\u79CD\u7EBF\u7A0B\u6C60\u7684\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u5E38\u7528\u4E09\u79CD\u7EBF\u7A0B\u6C60\u7684\u65B9\u5F0F" aria-hidden="true">#</a> \u521B\u5EFA\u5E38\u7528\u4E09\u79CD\u7EBF\u7A0B\u6C60\u7684\u65B9\u5F0F</h3><p><img src="https:////upload-images.jianshu.io/upload_images/6024478-26abbf2238c2d4ba.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="img" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>pool</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ExecutorService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executors</span></span><span class="token punctuation">;</span>

<span class="token comment">//\u6F14\u793A\u7EBF\u7A0B\u6C60\u4E09\u79CD\u5E38\u7528\u5206\u7C7B</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPoolDemo1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u4E00\u6C60\u4E94\u7EBF\u7A0B</span>
        <span class="token class-name">ExecutorService</span> threadPool1 <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//5\u4E2A\u7A97\u53E3</span>

        <span class="token comment">//\u4E00\u6C60\u4E00\u7EBF\u7A0B</span>
        <span class="token class-name">ExecutorService</span> threadPool2 <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4E00\u4E2A\u7A97\u53E3</span>

        <span class="token comment">//\u4E00\u6C60\u53EF\u6269\u5BB9\u7EBF\u7A0B</span>
        <span class="token class-name">ExecutorService</span> threadPool3 <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//10\u4E2A\u987E\u5BA2\u8BF7\u6C42</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;=</span><span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u6267\u884C</span>
                threadPool3<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u529E\u7406\u4E1A\u52A1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u5173\u95ED</span>
            threadPool3<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528\u53C2\u6570-\u91CD\u70B9" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u53C2\u6570-\u91CD\u70B9" aria-hidden="true">#</a> \u5E38\u7528\u53C2\u6570 (\u91CD\u70B9)</h3><p>\u200B \u5F53\u63D0\u4EA4\u4EFB\u52A1\u6570\u5927\u4E8E corePoolSize \u7684\u65F6\u5019\uFF0C\u4F1A\u4F18\u5148\u5C06\u4EFB\u52A1\u653E\u5230 workQueue \u963B\u585E\u961F\u5217\u4E2D\u3002\u5F53\u963B\u585E\u961F\u5217\u9971\u548C\u540E\uFF0C\u4F1A\u6269\u5145\u7EBF\u7A0B\u6C60\u4E2D\u7EBF\u7A0B\u6570\uFF0C\u76F4\u5230\u8FBE\u5230 maximumPoolSize \u6700\u5927\u7EBF\u7A0B\u6570\u914D\u7F6E\u3002\u6B64\u65F6\uFF0C\u518D\u591A\u4F59\u7684\u4EFB\u52A1\uFF0C\u5219\u4F1A\u89E6\u53D1\u7EBF\u7A0B\u6C60\u7684\u62D2\u7EDD\u7B56\u7565\u4E86\u3002</p><p>\u200B \u5373\uFF0C<strong>\u5F53\u63D0\u4EA4\u7684\u4EFB\u52A1\u6570\u5927\u4E8E\uFF08workQueue.size() + maximumPoolSize \uFF09\uFF0C\u5C31\u4F1A\u89E6\u53D1\u7EBF\u7A0B\u6C60\u7684\u62D2\u7EDD\u7B56\u7565\u3002</strong></p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">public</span> <span class="token function">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span> <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span> <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span> TimeUnit unit<span class="token punctuation">,</span> BlockingQueue\\<span class="token operator">&lt;</span>Runnable<span class="token operator">&gt;</span> workQueue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> maximumPoolSize<span class="token punctuation">,</span> keepAliveTime<span class="token punctuation">,</span> unit<span class="token punctuation">,</span> workQueue<span class="token punctuation">,</span>
         Executors<span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1\u3001corePoolSize\uFF08\u7EBF\u7A0B\u6C60\u57FA\u672C\u5927\u5C0F\uFF09\uFF1A\u5F53\u5411\u7EBF\u7A0B\u6C60\u63D0\u4EA4\u4E00\u4E2A\u4EFB\u52A1\u65F6\uFF0C\u82E5\u7EBF\u7A0B\u6C60\u5DF2\u521B\u5EFA\u7684\u7EBF\u7A0B\u6570\u5C0F\u4E8EcorePoolSize\uFF0C\u5373\u4FBF\u6B64\u65F6\u5B58\u5728\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u4E5F\u4F1A\u901A\u8FC7\u521B\u5EFA\u4E00\u4E2A\u65B0\u7EBF\u7A0B\u6765\u6267\u884C\u8BE5\u4EFB\u52A1\uFF0C\u76F4\u5230\u5DF2\u521B\u5EFA\u7684\u7EBF\u7A0B\u6570\u5927\u4E8E\u6216\u7B49\u4E8EcorePoolSize\u65F6\uFF0C\uFF08\u9664\u4E86\u5229\u7528\u63D0\u4EA4\u65B0\u4EFB\u52A1\u6765\u521B\u5EFA\u548C\u542F\u52A8\u7EBF\u7A0B\uFF08\u6309\u9700\u6784\u9020\uFF09\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 prestartCoreThread() \u6216 prestartAllCoreThreads() \u65B9\u6CD5\u6765\u63D0\u524D\u542F\u52A8\u7EBF\u7A0B\u6C60\u4E2D\u7684\u57FA\u672C\u7EBF\u7A0B\u3002\uFF09</p><p>2\u3001maximumPoolSize\uFF08\u7EBF\u7A0B\u6C60\u6700\u5927\u5927\u5C0F\uFF09\uFF1A\u7EBF\u7A0B\u6C60\u6240\u5141\u8BB8\u7684\u6700\u5927\u7EBF\u7A0B\u4E2A\u6570\u3002\u5F53\u961F\u5217\u6EE1\u4E86\uFF0C\u4E14\u5DF2\u521B\u5EFA\u7684\u7EBF\u7A0B\u6570\u5C0F\u4E8EmaximumPoolSize\uFF0C\u5219\u7EBF\u7A0B\u6C60\u4F1A\u521B\u5EFA\u65B0\u7684\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\u3002\u53E6\u5916\uFF0C\u5BF9\u4E8E\u65E0\u754C\u961F\u5217\uFF0C\u53EF\u5FFD\u7565\u8BE5\u53C2\u6570\u3002</p><p>3\u3001keepAliveTime\uFF08\u7EBF\u7A0B\u5B58\u6D3B\u4FDD\u6301\u65F6\u95F4\uFF09\uFF08\u79D2\uFF09\u5F53\u7EBF\u7A0B\u6C60\u4E2D\u7EBF\u7A0B\u6570\u5927\u4E8E\u6838\u5FC3\u7EBF\u7A0B\u6570\u65F6\uFF0C\u7EBF\u7A0B\u7684\u7A7A\u95F2\u65F6\u95F4\u5982\u679C\u8D85\u8FC7\u7EBF\u7A0B\u5B58\u6D3B\u65F6\u95F4\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u7EBF\u7A0B\u5C31\u4F1A\u88AB\u9500\u6BC1\uFF0C\u76F4\u5230\u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u6570\u5C0F\u4E8E\u7B49\u4E8E\u6838\u5FC3\u7EBF\u7A0B\u6570\u3002</p><p>4\u3001workQueue\uFF08\u4EFB\u52A1\u961F\u5217\uFF09\uFF1A\u7528\u4E8E\u4F20\u8F93\u548C\u4FDD\u5B58\u7B49\u5F85\u6267\u884C\u4EFB\u52A1\u7684\u963B\u585E\u961F\u5217\u3002</p><p>5\u3001threadFactory\uFF08\u7EBF\u7A0B\u5DE5\u5382\uFF09\uFF1A\u7528\u4E8E\u521B\u5EFA\u65B0\u7EBF\u7A0B\u3002threadFactory\u521B\u5EFA\u7684\u7EBF\u7A0B\u4E5F\u662F\u91C7\u7528new Thread()\u65B9\u5F0F\uFF0CthreadFactory\u521B\u5EFA\u7684\u7EBF\u7A0B\u540D\u90FD\u5177\u6709\u7EDF\u4E00\u7684\u98CE\u683C\uFF1Apool-m-thread-n\uFF08m\u4E3A\u7EBF\u7A0B\u6C60\u7684\u7F16\u53F7\uFF0Cn\u4E3A\u7EBF\u7A0B\u6C60\u5185\u7684\u7EBF\u7A0B\u7F16\u53F7\uFF09\u3002</p><p>6\u3001handler\uFF08\u7EBF\u7A0B\u9971\u548C\u7B56\u7565\uFF09\uFF1A\u5F53\u7EBF\u7A0B\u6C60\u548C\u961F\u5217\u90FD\u6EE1\u4E86\uFF0C\u518D\u52A0\u5165\u7EBF\u7A0B\u4F1A\u6267\u884C\u6B64\u7B56\u7565\u3002</p><p>7\u3001unit \u5B58\u6D3B\u7684\u65F6\u95F4\u5355\u4F4D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ThreadPoolExecutor</span> threadPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>corePoolSize\uFF1A<span class="token number">10</span><span class="token punctuation">,</span> maximumPoolSize\uFF1A<span class="token number">15</span><span class="token punctuation">,</span> keepAliveTime\uFF1A<span class="token number">6060</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>\u5373\u521D\u59CB\u531610\u4E2A\uFF0C\u6700\u592715\u4E2A\uFF0C\u5B58\u6D3B6060\uFF0C\u5355\u4F4D\u4E3A\u79D2\uFF0C\u6709\u54EA\u4E9B\u5F85\u6267\u884C\u4EFB\u52A1\u3002</strong></p></blockquote><h3 id="\u62D2\u7EDD\u7B56\u7565-\u91CD\u70B9" tabindex="-1"><a class="header-anchor" href="#\u62D2\u7EDD\u7B56\u7565-\u91CD\u70B9" aria-hidden="true">#</a> \u62D2\u7EDD\u7B56\u7565(\u91CD\u70B9)</h3><p>CallerRunsPolicy: \u5F53\u89E6\u53D1\u62D2\u7EDD\u7B56\u7565\uFF0C\u53EA\u8981\u7EBF\u7A0B\u6C60\u6CA1\u6709\u5173\u95ED\u7684\u8BDD\uFF0C\u5219\u4F7F\u7528\u8C03\u7528\u7EBF\u7A0B\u76F4\u63A5\u8FD0\u884C\u4EFB\u52A1\u3002\u4E00\u822C\u5E76\u53D1\u6BD4\u8F83\u5C0F\uFF0C\u6027\u80FD\u8981\u6C42\u4E0D\u9AD8\uFF0C\u4E0D\u5141\u8BB8\u5931\u8D25\u3002\u4F46\u662F\uFF0C\u7531\u4E8E\u8C03\u7528\u8005\u81EA\u5DF1\u8FD0\u884C\u4EFB\u52A1\uFF0C\u5982\u679C\u4EFB\u52A1\u63D0\u4EA4\u901F\u5EA6\u8FC7\u5FEB\uFF0C\u53EF\u80FD\u5BFC\u81F4\u7A0B\u5E8F\u963B\u585E\uFF0C\u6027\u80FD\u6548\u7387\u4E0A\u5FC5\u7136\u7684\u635F\u5931\u8F83\u5927 AbortPolicy: \u4E22\u5F03\u4EFB\u52A1\uFF0C\u5E76\u629B\u51FA\u62D2\u7EDD\u6267\u884C RejectedExecutionException \u5F02\u5E38\u4FE1\u606F\u3002\u7EBF\u7A0B\u6C60\u9ED8\u8BA4\u7684\u62D2\u7EDD\u7B56\u7565\u3002\u5FC5\u987B\u5904\u7406\u597D\u629B\u51FA\u7684\u5F02\u5E38\uFF0C\u5426\u5219\u4F1A\u6253\u65AD\u5F53\u524D\u7684\u6267\u884C\u6D41\u7A0B\uFF0C\u5F71\u54CD\u540E\u7EED\u7684\u4EFB\u52A1\u6267\u884C\u3002 DiscardPolicy: \u76F4\u63A5\u4E22\u5F03\uFF0C\u5176\u4ED6\u5565\u90FD\u6CA1\u6709 DiscardOldestPolicy: \u5F53\u89E6\u53D1\u62D2\u7EDD\u7B56\u7565\uFF0C\u53EA\u8981\u7EBF\u7A0B\u6C60\u6CA1\u6709\u5173\u95ED\u7684\u8BDD\uFF0C\u4E22\u5F03\u963B\u585E\u961F\u5217 workQueue \u4E2D\u6700\u8001\u7684\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u5E76\u5C06\u65B0\u4EFB\u52A1\u52A0\u5165</p><h3 id="\u7EBF\u7A0B\u6C60\u7684\u79CD\u7C7B\u4E0E\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60\u7684\u79CD\u7C7B\u4E0E\u521B\u5EFA" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60\u7684\u79CD\u7C7B\u4E0E\u521B\u5EFA</h3><h4 id="\u7EBF\u7A0B\u6C60\u603B\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60\u603B\u5BF9\u6BD4" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60\u603B\u5BF9\u6BD4</h4><p>1\u3001new<strong>Cached</strong>ThreadPool\uFF1A\u7528\u6765\u521B\u5EFA\u4E00\u4E2A\u53EF\u4EE5<strong>\u65E0\u9650\u6269\u5927</strong>\u7684\u7EBF\u7A0B\u6C60\uFF0C<strong>\u9002\u7528\u4E8E\u8D1F\u8F7D\u8F83\u8F7B</strong>\u7684\u573A\u666F\uFF0C\u6267\u884C<strong>\u77ED\u671F\u5F02\u6B65</strong>\u4EFB\u52A1\u3002\uFF08\u53EF\u4EE5\u4F7F\u5F97\u4EFB\u52A1\u5FEB\u901F\u5F97\u5230\u6267\u884C\uFF0C\u56E0\u4E3A\u4EFB\u52A1\u65F6\u95F4\u6267\u884C\u77ED\uFF0C\u53EF\u4EE5\u5F88\u5FEB\u7ED3\u675F\uFF0C\u4E5F\u4E0D\u4F1A\u9020\u6210cpu\u8FC7\u5EA6\u5207\u6362\uFF09 2\u3001new<strong>Fixed</strong>ThreadPool\uFF1A\u521B\u5EFA\u4E00\u4E2A<strong>\u56FA\u5B9A\u5927\u5C0F</strong>\u7684\u7EBF\u7A0B\u6C60\uFF0C\u56E0\u4E3A\u91C7\u7528\u65E0\u754C\u7684\u963B\u585E\u961F\u5217\uFF0C\u6240\u4EE5\u5B9E\u9645\u7EBF\u7A0B\u6570\u91CF\u6C38\u8FDC\u4E0D\u4F1A\u53D8\u5316\uFF0C\u9002\u7528\u4E8E<strong>\u8D1F\u8F7D\u8F83\u91CD</strong>\u7684\u573A\u666F\uFF0C\u5BF9\u5F53\u524D<strong>\u7EBF\u7A0B\u6570\u91CF\u8FDB\u884C\u9650\u5236</strong>\u3002\uFF08\u4FDD\u8BC1\u7EBF\u7A0B\u6570\u53EF\u63A7\uFF0C\u4E0D\u4F1A\u9020\u6210\u7EBF\u7A0B\u8FC7\u591A\uFF0C\u5BFC\u81F4\u7CFB\u7EDF\u8D1F\u8F7D\u66F4\u4E3A\u4E25\u91CD\uFF09 3\u3001new<strong>Single</strong>ThreadExecutor\uFF1A\u521B\u5EFA\u4E00\u4E2A<strong>\u5355\u7EBF\u7A0B</strong>\u7684\u7EBF\u7A0B\u6C60\uFF0C\u9002\u7528\u4E8E\u9700\u8981\u4FDD\u8BC1<strong>\u987A\u5E8F\u6267\u884C</strong>\u5404\u4E2A\u4EFB\u52A1\u3002 4\u3001new<strong>Scheduled</strong>ThreadPool\uFF1A\u9002\u7528\u4E8E\u6267\u884C<strong>\u5EF6\u65F6\u6216\u8005\u5468\u671F\u6027</strong>\u4EFB\u52A1\u3002</p><h4 id="newcachedthreadpool-\u5E38\u7528" tabindex="-1"><a class="header-anchor" href="#newcachedthreadpool-\u5E38\u7528" aria-hidden="true">#</a> newCachedThreadPool(\u5E38\u7528)</h4><p>\u4F5C\u7528\uFF1A\u521B\u5EFA\u4E00\u4E2A\u53EF\u7F13\u5B58\u7EBF\u7A0B\u6C60\uFF0C\u5982\u679C\u7EBF\u7A0B\u6C60\u957F\u5EA6\u8D85\u8FC7\u5904\u7406\u9700\u8981\uFF0C\u53EF\u7075\u6D3B\u56DE\u6536\u7A7A\u95F2\u7EBF\u7A0B\uFF0C\u82E5\u65E0\u53EF\u56DE\u6536\uFF0C\u5219\u65B0\u5EFA\u7EBF\u7A0B. \u7279\u70B9: \u2022 \u7EBF\u7A0B\u6C60\u4E2D\u6570\u91CF\u6CA1\u6709\u56FA\u5B9A\uFF0C\u53EF\u8FBE\u5230\u6700\u5927\u503C\uFF08Interger. MAX_VALUE\uFF09 \u2022 \u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u53EF\u8FDB\u884C\u7F13\u5B58\u91CD\u590D\u5229\u7528\u548C\u56DE\u6536\uFF08\u56DE\u6536\u9ED8\u8BA4\u65F6\u95F4\u4E3A1\u5206\u949F\uFF09 \u2022 \u5F53\u7EBF\u7A0B\u6C60\u4E2D\uFF0C\u6CA1\u6709\u53EF\u7528\u7EBF\u7A0B\uFF0C\u4F1A\u91CD\u65B0\u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B \u521B\u5EFA\u65B9\u5F0F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/** * \u53EF\u7F13\u5B58\u7EBF\u7A0B\u6C60 * @return */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
    <span class="token doc-comment comment">/** * corePoolSize\u7EBF\u7A0B\u6C60\u7684\u6838\u5FC3\u7EBF\u7A0B\u6570 
    * maximumPoolSize\u80FD\u5BB9\u7EB3\u7684\u6700\u5927\u7EBF\u7A0B\u6570 
    * keepAliveTime\u7A7A\u95F2\u7EBF\u7A0B\u5B58\u6D3B\u65F6\u95F4 
    * unit \u5B58\u6D3B\u7684\u65F6\u95F4\u5355\u4F4D 
    * workQueue \u5B58\u653E\u63D0\u4EA4\u4F46\u672A\u6267\u884C\u4EFB\u52A1\u7684\u961F\u5217 
    * threadFactory \u521B\u5EFA\u7EBF\u7A0B\u7684\u5DE5\u5382\u7C7B:\u53EF\u4EE5\u7701\u7565 
    * handler \u7B49\u5F85\u961F\u5217\u6EE1\u540E\u7684\u62D2\u7EDD\u7B56\u7565:\u53EF\u4EE5\u7701\u7565 */</span> 
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span> <span class="token number">60L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                                  <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="newfixedthreadpool-\u5E38\u7528" tabindex="-1"><a class="header-anchor" href="#newfixedthreadpool-\u5E38\u7528" aria-hidden="true">#</a> newFixedThreadPool(\u5E38\u7528)</h4><p>\u4F5C\u7528\uFF1A\u521B\u5EFA\u4E00\u4E2A\u53EF\u91CD\u7528\u56FA\u5B9A\u7EBF\u7A0B\u6570\u7684\u7EBF\u7A0B\u6C60\uFF0C\u4EE5\u5171\u4EAB\u7684\u65E0\u754C\u961F\u5217\u65B9\u5F0F\u6765\u8FD0\u884C\u8FD9\u4E9B\u7EBF\u7A0B\u3002\u5728\u4EFB\u610F\u70B9\uFF0C\u5728\u5927\u591A\u6570\u7EBF\u7A0B\u4F1A\u5904\u4E8E\u5904\u7406\u4EFB\u52A1\u7684\u6D3B\u52A8\u72B6\u6001\u3002\u5982\u679C\u5728\u6240\u6709\u7EBF\u7A0B\u5904\u4E8E\u6D3B\u52A8\u72B6\u6001\u65F6\u63D0\u4EA4\u9644\u52A0\u4EFB\u52A1\uFF0C\u5219\u5728\u6709\u53EF\u7528\u7EBF\u7A0B\u4E4B\u524D\uFF0C\u9644\u52A0\u4EFB\u52A1\u5C06\u5728\u961F\u5217\u4E2D\u7B49\u5F85\u3002\u5982\u679C\u5728\u5173\u95ED\u524D\u7684\u6267\u884C\u671F\u95F4\u7531\u4E8E\u5931\u8D25\u800C\u5BFC\u81F4\u4EFB\u4F55\u7EBF\u7A0B\u7EC8\u6B62\uFF0C\u90A3\u4E48\u4E00\u4E2A\u65B0\u7EBF\u7A0B\u5C06\u4EE3\u66FF\u5B83\u6267\u884C\u540E\u7EED\u7684\u4EFB\u52A1\uFF08\u5982\u679C\u9700\u8981\uFF09\u3002\u5728\u67D0\u4E2A\u7EBF\u7A0B\u88AB\u663E\u5F0F\u5730\u5173\u95ED\u4E4B\u524D\uFF0C\u6C60\u4E2D\u7684\u7EBF\u7A0B\u5C06\u4E00\u76F4\u5B58\u5728\u3002\u573A\u666F: \u9002\u7528\u4E8E\u53EF\u4EE5\u9884\u6D4B\u7EBF\u7A0B\u6570\u91CF\u7684\u4E1A\u52A1\u4E2D\uFF0C\u6216\u8005\u670D\u52A1\u5668\u8D1F\u8F7D\u8F83\u91CD\uFF0C\u5BF9\u7EBF\u7A0B\u6570\u6709\u4E25\u683C\u9650\u5236\u7684\u573A\u666F \u7279\u5F81\uFF1A \u2022 \u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u5904\u4E8E\u4E00\u5B9A\u7684\u91CF\uFF0C\u53EF\u4EE5\u5F88\u597D\u7684\u63A7\u5236\u7EBF\u7A0B\u7684\u5E76\u53D1\u91CF \u2022 \u7EBF\u7A0B\u53EF\u4EE5\u91CD\u590D\u88AB\u4F7F\u7528\uFF0C\u5728\u663E\u793A\u5173\u95ED\u4E4B\u524D\uFF0C\u90FD\u5C06\u4E00\u76F4\u5B58\u5728 \u2022 \u8D85\u51FA\u4E00\u5B9A\u91CF\u7684\u7EBF\u7A0B\u88AB\u63D0\u4EA4\u65F6\u5019\u9700\u5728\u961F\u5217\u4E2D\u7B49\u5F85 \u521B\u5EFA\u65B9\u5F0F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/** * \u56FA\u5B9A\u957F\u5EA6\u7EBF\u7A0B\u6C60 * @return */</span> 
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
    <span class="token doc-comment comment">/** * corePoolSize\u7EBF\u7A0B\u6C60\u7684\u6838\u5FC3\u7EBF\u7A0B\u6570 
    * maximumPoolSize\u80FD\u5BB9\u7EB3\u7684\u6700\u5927\u7EBF\u7A0B\u6570 
    * keepAliveTime\u7A7A\u95F2\u7EBF\u7A0B\u5B58\u6D3B\u65F6\u95F4 
    * unit \u5B58\u6D3B\u7684\u65F6\u95F4\u5355\u4F4D 
    * workQueue \u5B58\u653E\u63D0\u4EA4\u4F46\u672A\u6267\u884C\u4EFB\u52A1\u7684\u961F\u5217 
    * threadFactory \u521B\u5EFA\u7EBF\u7A0B\u7684\u5DE5\u5382\u7C7B:\u53EF\u4EE5\u7701\u7565 
    * handler \u7B49\u5F85\u961F\u5217\u6EE1\u540E\u7684\u62D2\u7EDD\u7B56\u7565:\u53EF\u4EE5\u7701\u7565 */</span> 
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                                  <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="newsinglethreadexecutor-\u5E38\u7528" tabindex="-1"><a class="header-anchor" href="#newsinglethreadexecutor-\u5E38\u7528" aria-hidden="true">#</a> newSingleThreadExecutor(\u5E38\u7528)</h4><p>\u4F5C\u7528\uFF1A\u521B\u5EFA\u4E00\u4E2A\u4F7F\u7528\u5355\u4E2A worker \u7EBF\u7A0B\u7684 Executor\uFF0C\u4EE5\u65E0\u754C\u961F\u5217\u65B9\u5F0F\u6765\u8FD0\u884C\u8BE5\u7EBF\u7A0B\u3002\uFF08\u6CE8\u610F\uFF0C\u5982\u679C\u56E0\u4E3A\u5728\u5173\u95ED\u524D\u7684\u6267\u884C\u671F\u95F4\u51FA\u73B0\u5931\u8D25\u800C\u7EC8\u6B62\u4E86\u6B64\u5355\u4E2A\u7EBF\u7A0B\uFF0C\u90A3\u4E48\u5982\u679C\u9700\u8981\uFF0C\u4E00\u4E2A\u65B0\u7EBF\u7A0B\u5C06\u4EE3\u66FF\u5B83\u6267\u884C\u540E\u7EED\u7684\u4EFB\u52A1\uFF09\u3002\u53EF\u4FDD\u8BC1\u987A\u5E8F\u5730\u6267\u884C\u5404\u4E2A\u4EFB\u52A1\uFF0C\u5E76\u4E14\u5728\u4EFB\u610F\u7ED9\u5B9A\u7684\u65F6\u95F4\u4E0D\u4F1A\u6709\u591A\u4E2A\u7EBF\u7A0B\u662F\u6D3B\u52A8\u7684\u3002\u4E0E\u5176\u4ED6\u7B49\u6548\u7684newFixedThreadPool\u4E0D\u540C\uFF0C\u53EF\u4FDD\u8BC1\u65E0\u9700\u91CD\u65B0\u914D\u7F6E\u6B64\u65B9\u6CD5\u6240\u8FD4\u56DE\u7684\u6267\u884C\u7A0B\u5E8F\u5373\u53EF\u4F7F\u7528\u5176\u4ED6\u7684\u7EBF\u7A0B\u3002\u573A\u666F: \u9002\u7528\u4E8E\u9700\u8981\u4FDD\u8BC1\u987A\u5E8F\u6267\u884C\u5404\u4E2A\u4EFB\u52A1\uFF0C\u5E76\u4E14\u5728\u4EFB\u610F\u65F6\u95F4\u70B9\uFF0C\u4E0D\u4F1A\u540C\u65F6\u6709\u591A\u4E2A\u7EBF\u7A0B\u7684\u573A\u666F\u3002 \u7279\u5F81\uFF1A \u7EBF\u7A0B\u6C60\u4E2D\u6700\u591A\u6267\u884C1\u4E2A\u7EBF\u7A0B\uFF0C\u4E4B\u540E\u63D0\u4EA4\u7684\u7EBF\u7A0B\u6D3B\u52A8\u5C06\u4F1A\u6392\u5728\u961F\u5217\u4E2D\u4EE5\u6B64\u6267\u884C \u521B\u5EFA\u65B9\u5F0F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/** * \u5355\u4E00\u7EBF\u7A0B\u6C60 * @return */</span> 
<span class="token doc-comment comment">/** * corePoolSize\u7EBF\u7A0B\u6C60\u7684\u6838\u5FC3\u7EBF\u7A0B\u6570 
* maximumPoolSize\u80FD\u5BB9\u7EB3\u7684\u6700\u5927\u7EBF\u7A0B\u6570 
* keepAliveTime\u7A7A\u95F2\u7EBF\u7A0B\u5B58\u6D3B\u65F6\u95F4 
* unit \u5B58\u6D3B\u7684\u65F6\u95F4\u5355\u4F4D 
* workQueue \u5B58\u653E\u63D0\u4EA4\u4F46\u672A\u6267\u884C\u4EFB\u52A1\u7684\u961F\u5217 
* threadFactory \u521B\u5EFA\u7EBF\u7A0B\u7684\u5DE5\u5382\u7C7B:\u53EF\u4EE5\u7701\u7565 
* handler \u7B49\u5F85\u961F\u5217\u6EE1\u540E\u7684\u62D2\u7EDD\u7B56\u7565:\u53EF\u4EE5\u7701\u7565 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                                  <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="newschedulethreadpool-\u4E86\u89E3" tabindex="-1"><a class="header-anchor" href="#newschedulethreadpool-\u4E86\u89E3" aria-hidden="true">#</a> newScheduleThreadPool(\u4E86\u89E3)</h4><p>\u4F5C\u7528: \u7EBF\u7A0B\u6C60\u652F\u6301\u5B9A\u65F6\u4EE5\u53CA\u5468\u671F\u6027\u6267\u884C\u4EFB\u52A1\uFF0C\u521B\u5EFA\u4E00\u4E2AcorePoolSize\u4E3A\u4F20\u5165\u53C2\u6570\uFF0C\u6700\u5927\u7EBF\u7A0B\u6570\u4E3A\u6574\u5F62\u7684\u6700\u5927\u6570\u7684\u7EBF\u7A0B\u6C60\u3002\u573A\u666F: \u9002\u7528\u4E8E\u9700\u8981\u591A\u4E2A\u540E\u53F0\u7EBF\u7A0B\u6267\u884C\u5468\u671F\u4EFB\u52A1\u7684\u573A\u666F\u3002 \u7279\u5F81: \uFF081\uFF09\u7EBF\u7A0B\u6C60\u4E2D\u5177\u6709\u6307\u5B9A\u6570\u91CF\u7684\u7EBF\u7A0B\uFF0C\u5373\u4FBF\u662F\u7A7A\u7EBF\u7A0B\u4E5F\u5C06\u4FDD\u7559 \uFF082\uFF09\u53EF\u5B9A\u65F6\u6216\u8005\u5EF6\u8FDF\u6267\u884C\u7EBF\u7A0B\u6D3B\u52A8 \u521B\u5EFA\u65B9\u5F0F:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ScheduledExecutorService</span> <span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span> <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">,</span> threadFactory<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="newworkstealingpool" tabindex="-1"><a class="header-anchor" href="#newworkstealingpool" aria-hidden="true">#</a> newWorkStealingPool</h4><p>jdk1.8\u63D0\u4F9B\u7684\u7EBF\u7A0B\u6C60\uFF0C\u5E95\u5C42\u4F7F\u7528\u7684\u662FForkJoinPool\u5B9E\u73B0\uFF0C\u521B\u5EFA\u4E00\u4E2A\u62E5\u6709\u591A\u4E2A\u4EFB\u52A1\u961F\u5217\u7684\u7EBF\u7A0B\u6C60\uFF0C\u53EF\u4EE5\u51CF\u5C11\u8FDE\u63A5\u6570\uFF0C\u521B\u5EFA\u5F53\u524D\u53EF\u7528cpu\u6838\u6570\u7684\u7EBF\u7A0B\u6765\u5E76\u884C\u6267\u884C\u4EFB\u52A1\u3002\u573A\u666F: \u9002\u7528\u4E8E\u5927\u8017\u65F6\uFF0C\u53EF\u5E76\u884C\u6267\u884C\u7684\u573A\u666F \u521B\u5EFA\u65B9\u5F0F:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ExecutorService</span> <span class="token function">newWorkStealingPool</span><span class="token punctuation">(</span><span class="token keyword">int</span> parallelism<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token doc-comment comment">/** 
    * parallelism\uFF1A\u5E76\u884C\u7EA7\u522B\uFF0C\u901A\u5E38\u9ED8\u8BA4\u4E3AJVM\u53EF\u7528\u7684\u5904\u7406\u5668\u4E2A\u6570 
    * factory\uFF1A\u7528\u4E8E\u521B\u5EFAForkJoinPool\u4E2D\u4F7F\u7528\u7684\u7EBF\u7A0B\u3002 
    * handler\uFF1A\u7528\u4E8E\u5904\u7406\u5DE5\u4F5C\u7EBF\u7A0B\u672A\u5904\u7406\u7684\u5F02\u5E38\uFF0C\u9ED8\u8BA4\u4E3Anull 
    * asyncMode\uFF1A\u7528\u4E8E\u63A7\u5236WorkQueue\u7684\u5DE5\u4F5C\u6A21\u5F0F:\u961F\u5217---\u53CD\u961F\u5217
*/</span> 
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span>parallelism<span class="token punctuation">,</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>defaultForkJoinWorkerThreadFactory<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E95\u5C42\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42\u539F\u7406" aria-hidden="true">#</a> \u5E95\u5C42\u539F\u7406</h3><p><img src="http://qnimg.gisfsde.com/work/image-20220216212625652.png" alt="image-20220216212625652" loading="lazy"></p><ol><li>\u5728\u521B\u5EFA\u4E86\u7EBF\u7A0B\u6C60\u540E\uFF0C\u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u6570\u4E3A\u96F6</li><li>\u5F53\u8C03\u7528execute()\u65B9\u6CD5\u6DFB\u52A0\u4E00\u4E2A\u8BF7\u6C42\u4EFB\u52A1\u65F6\uFF0C\u7EBF\u7A0B\u6C60\u4F1A\u505A\u51FA\u5982\u4E0B\u5224\u65AD\uFF1A <ul><li>2.1 \u5982\u679C\u6B63\u5728\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u91CF\u5C0F\u4E8EcorePoolSize\uFF0C\u90A3\u4E48\u9A6C\u4E0A\u521B\u5EFA\u7EBF\u7A0B\u8FD0\u884C\u8FD9\u4E2A\u4EFB\u52A1\uFF1B</li><li>2.2 \u5982\u679C\u6B63\u5728\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u91CF\u5927\u4E8E\u6216\u7B49\u4E8EcorePoolSize\uFF0C\u90A3\u4E48\u5C06\u8FD9\u4E2A\u4EFB\u52A1\u653E\u5165\u961F\u5217\uFF1B</li><li>2.3 \u5982\u679C\u8FD9\u4E2A\u65F6\u5019\u961F\u5217\u6EE1\u4E86\u4E14\u6B63\u5728\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u91CF\u8FD8\u5C0F\u4E8EmaximumPoolSize\uFF0C\u90A3\u4E48\u8FD8\u662F\u8981\u521B\u5EFA\u975E\u6838\u5FC3\u7EBF\u7A0B\u7ACB\u523B\u8FD0\u884C\u8FD9\u4E2A\u4EFB\u52A1\uFF1B</li><li>2.4 \u5982\u679C\u961F\u5217\u6EE1\u4E86\u4E14\u6B63\u5728\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u91CF\u5927\u4E8E\u6216\u7B49\u4E8EmaximumPoolSize\uFF0C\u90A3\u4E48\u7EBF\u7A0B\u6C60\u4F1A\u542F\u52A8\u9971\u548C\u62D2\u7EDD\u7B56\u7565\u6765\u6267\u884C\u3002</li></ul></li><li>\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u5B8C\u6210\u4EFB\u52A1\u65F6\uFF0C\u5B83\u4F1A\u4ECE\u961F\u5217\u4E2D\u53D6\u4E0B\u4E00\u4E2A\u4EFB\u52A1\u6765\u6267\u884C</li><li>\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u65E0\u4E8B\u53EF\u505A\u8D85\u8FC7\u4E00\u5B9A\u7684\u65F6\u95F4\uFF08keepAliveTime\uFF09\u65F6\uFF0C\u7EBF\u7A0B\u4F1A\u5224\u65AD\uFF1A <ul><li>4.1 \u5982\u679C\u5F53\u524D\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u5927\u4E8EcorePoolSize\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u7EBF\u7A0B\u5C31\u88AB\u505C\u6389\u3002</li><li>4.2 \u6240\u4EE5\u7EBF\u7A0B\u6C60\u7684\u6240\u6709\u4EFB\u52A1\u5B8C\u6210\u540E\uFF0C\u5B83\u6700\u7EC8\u4F1A\u6536\u7F29\u5230corePoolSize\u7684\u5927\u5C0F\u3002</li></ul></li></ol><p><img src="http://qnimg.gisfsde.com/work/image-20220216212644963.png" alt="image-20220216212644963" loading="lazy"></p><h3 id="\u6CE8\u610F\u4E8B\u9879-\u91CD\u8981" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F\u4E8B\u9879-\u91CD\u8981" aria-hidden="true">#</a> \u6CE8\u610F\u4E8B\u9879(\u91CD\u8981)</h3><ol><li>\u9879\u76EE\u4E2D\u521B\u5EFA\u591A\u7EBF\u7A0B\u65F6\uFF0C\u4F7F\u7528\u5E38\u89C1\u7684\u4E09\u79CD\u7EBF\u7A0B\u6C60\u521B\u5EFA\u65B9\u5F0F\uFF0C\u5355\u4E00\u3001\u53EF\u53D8\u3001\u5B9A\u957F\u90FD\u6709\u4E00\u5B9A\u95EE\u9898\uFF0C\u539F\u56E0\u662FFixedThreadPool\u548CSingleThreadExecutor\u5E95\u5C42\u90FD\u662F\u7528LinkedBlockingQueue\u5B9E\u73B0\u7684\uFF0C\u8FD9\u4E2A\u961F\u5217\u6700\u5927\u957F\u5EA6\u4E3AInteger.MAX_VALUE\uFF0C<strong>\u5BB9\u6613\u5BFC\u81F4OOM</strong>\u3002\u6240\u4EE5<strong>\u5B9E\u9645\u751F\u4EA7\u4E00\u822C\u81EA\u5DF1\u901A\u8FC7ThreadPoolExecutor\u76847\u4E2A\u53C2\u6570\uFF0C\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60</strong></li><li>\u521B\u5EFA\u7EBF\u7A0B\u6C60\u63A8\u8350\u9002\u7528ThreadPoolExecutor\u53CA\u51767\u4E2A\u53C2\u6570\u624B\u52A8\u521B\u5EFA corePoolSize\u7EBF\u7A0B\u6C60\u7684\u6838\u5FC3\u7EBF\u7A0B\u6570 maximumPoolSize\u80FD\u5BB9\u7EB3\u7684\u6700\u5927\u7EBF\u7A0B\u6570 keepAliveTime\u7A7A\u95F2\u7EBF\u7A0B\u5B58\u6D3B\u65F6\u95F4 unit \u5B58\u6D3B\u7684\u65F6\u95F4\u5355\u4F4D workQueue \u5B58\u653E\u63D0\u4EA4\u4F46\u672A\u6267\u884C\u4EFB\u52A1\u7684\u961F\u5217 threadFactory \u521B\u5EFA\u7EBF\u7A0B\u7684\u5DE5\u5382\u7C7B handler \u7B49\u5F85\u961F\u5217\u6EE1\u540E\u7684\u62D2\u7EDD\u7B56\u7565</li></ol><p>\u200B \u624B\u52A8\u521B\u5EFA\u793A\u4F8B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>pool</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token comment">//\u81EA\u5B9A\u4E49\u624B\u52A8\u7EBF\u7A0B\u6C60\u521B\u5EFA</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPoolDemo2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExecutorService</span> threadPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
                <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token number">5</span><span class="token punctuation">,</span>
                <span class="token number">2L</span><span class="token punctuation">,</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//10\u4E2A\u987E\u5BA2\u8BF7\u6C42</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;=</span><span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u6267\u884C</span>
                threadPool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; \u529E\u7406\u4E1A\u52A1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u5173\u95ED</span>
            threadPool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u4E3A\u4EC0\u4E48\u4E0D\u5141\u8BB8\u9002\u7528\u4E0D\u5141\u8BB8Executors.\u7684\u65B9\u5F0F\u624B\u52A8\u521B\u5EFA\u7EBF\u7A0B\u6C60,\u5982\u4E0B\u56FE</li></ol><p><img src="http://qnimg.gisfsde.com/work/image-20220216212705278.png" alt="image-20220216212705278" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token doc-comment comment">/**\u4F7F\u7528Executors\u521B\u5EFA\u7EBF\u7A0B\u6C60\uFF0C\u5EFA\u8BAE\u624B\u52A8\u521B\u5EFA\u7EBF\u7A0B\u6C60
     * \u7EBF\u7A0B\u6C60\u4E0D\u5141\u8BB8\u4F7F\u7528Executors\u53BB\u521B\u5EFA\uFF0C\u800C\u662F\u901A\u8FC7ThreadPoolExecutor\u7684\u65B9\u5F0F\uFF0C\u8FD9\u6837\u7684\u5904\u7406\u65B9\u5F0F\u8BA9\u5199\u7684\u540C\u5B66\u66F4\u52A0\u660E\u786E\u7EBF\u7A0B\u6C60\u7684\u8FD0\u884C\u89C4\u5219\uFF0C\u89C4\u907F\u8D44\u6E90\u8017\u5C3D\u7684\u98CE\u9669\u3002 \u8BF4\u660E\uFF1AExecutors\u8FD4\u56DE\u7684\u7EBF\u7A0B\u6C60\u5BF9\u8C61\u7684\u5F0A\u7AEF\u5982\u4E0B\uFF1A
     * 1\uFF09FixedThreadPool\u548CSingleThreadPool:
     * \u5141\u8BB8\u7684\u8BF7\u6C42\u961F\u5217\u957F\u5EA6\u4E3AInteger.MAX_VALUE\uFF0C\u53EF\u80FD\u4F1A\u5806\u79EF\u5927\u91CF\u7684\u8BF7\u6C42\uFF0C\u4ECE\u800C\u5BFC\u81F4OOM\u3002
     * 2\uFF09CachedThreadPool:
     * \u5141\u8BB8\u7684\u521B\u5EFA\u7EBF\u7A0B\u6570\u91CF\u4E3AInteger.MAX_VALUE\uFF0C\u53EF\u80FD\u4F1A\u521B\u5EFA\u5927\u91CF\u7684\u7EBF\u7A0B\uFF0C\u4ECE\u800C\u5BFC\u81F4OOM\u3002*/</span>
            
<span class="token class-name">Positive</span> example <span class="token number">1</span>\uFF1A
    <span class="token comment">//org.apache.commons.lang3.concurrent.BasicThreadFactory</span>
    <span class="token class-name">ScheduledExecutorService</span> executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScheduledThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">BasicThreadFactory<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">namingPattern</span><span class="token punctuation">(</span><span class="token string">&quot;example-schedule-pool-%d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">daemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       
        
            
<span class="token class-name">Positive</span> example <span class="token number">2</span>\uFF1A
    <span class="token class-name">ThreadFactory</span> namedThreadFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setNameFormat</span><span class="token punctuation">(</span><span class="token string">&quot;demo-pool-%d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//Common Thread Pool</span>
    <span class="token class-name">ExecutorService</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span>
        <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span> namedThreadFactory<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    pool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//gracefully shutdown</span>
       
        
            
<span class="token class-name">Positive</span> example <span class="token number">3</span>\uFF1A
    \\<span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">&quot;userThreadPool&quot;</span>
        <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor&quot;</span><span class="token operator">&gt;</span>
        \\<span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;corePoolSize&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;10&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        \\<span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;maxPoolSize&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;100&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        \\<span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;queueCapacity&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;2000&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

    \\<span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;threadFactory&quot;</span> value<span class="token operator">=</span> threadFactory <span class="token operator">/</span><span class="token operator">&gt;</span>
        \\<span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">&quot;rejectedExecutionHandler&quot;</span><span class="token operator">&gt;</span>
            \\<span class="token operator">&lt;</span>ref local<span class="token operator">=</span><span class="token string">&quot;rejectedExecutionHandler&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        \\<span class="token operator">&lt;</span><span class="token operator">/</span>property<span class="token operator">&gt;</span>
    \\<span class="token operator">&lt;</span><span class="token operator">/</span>bean<span class="token operator">&gt;</span>
    <span class="token comment">//in code</span>
    userThreadPool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>thread<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7EBF\u7A0B\u6C60\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60\u6D41\u7A0B" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60\u6D41\u7A0B</h3><p><img src="https:////upload-images.jianshu.io/upload_images/6024478-88ee7b20f8f45825.png?imageMogr2/auto-orient/strip|imageView2/2/w/937/format/webp" alt="img" loading="lazy"></p><p>\u7EBF\u7A0B\u6C60\u6D41\u7A0B</p><p>1\u3001\u5224\u65AD\u6838\u5FC3\u7EBF\u7A0B\u6C60\u662F\u5426\u5DF2\u6EE1\uFF0C\u6CA1\u6EE1\u5219\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5DE5\u4F5C\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\u3002\u5DF2\u6EE1\u5219\u3002 2\u3001\u5224\u65AD\u4EFB\u52A1\u961F\u5217\u662F\u5426\u5DF2\u6EE1\uFF0C\u6CA1\u6EE1\u5219\u5C06\u65B0\u63D0\u4EA4\u7684\u4EFB\u52A1\u6DFB\u52A0\u5728\u5DE5\u4F5C\u961F\u5217\uFF0C\u5DF2\u6EE1\u5219\u3002 3\u3001\u5224\u65AD\u6574\u4E2A\u7EBF\u7A0B\u6C60\u662F\u5426\u5DF2\u6EE1\uFF0C\u6CA1\u6EE1\u5219\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5DE5\u4F5C\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\uFF0C\u5DF2\u6EE1\u5219\u6267\u884C\u9971\u548C\u7B56\u7565\u3002</p><p>\uFF081\u3001\u5224\u65AD\u7EBF\u7A0B\u6C60\u4E2D\u5F53\u524D\u7EBF\u7A0B\u6570\u662F\u5426\u5927\u4E8E\u6838\u5FC3\u7EBF\u7A0B\u6570\uFF0C\u5982\u679C\u5C0F\u4E8E\uFF0C\u5728\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\uFF0C\u5982\u679C\u5927\u4E8E\u5219 2\u3001\u5224\u65AD\u4EFB\u52A1\u961F\u5217\u662F\u5426\u5DF2\u6EE1\uFF0C\u6CA1\u6EE1\u5219\u5C06\u65B0\u63D0\u4EA4\u7684\u4EFB\u52A1\u6DFB\u52A0\u5728\u5DE5\u4F5C\u961F\u5217\uFF0C\u5DF2\u6EE1\u5219\u3002 3\u3001\u5224\u65AD\u7EBF\u7A0B\u6C60\u4E2D\u5F53\u524D\u7EBF\u7A0B\u6570\u662F\u5426\u5927\u4E8E\u6700\u5927\u7EBF\u7A0B\u6570\uFF0C\u5982\u679C\u5C0F\u4E8E\uFF0C\u5219\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\uFF0C\u5982\u679C\u5927\u4E8E\uFF0C\u5219\u6267\u884C\u9971\u548C\u7B56\u7565\u3002\uFF09</p><h3 id="\u7EBF\u7A0B\u6C60\u4E3A\u4EC0\u4E48\u9700\u8981\u4F7F\u7528-\u963B\u585E-\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60\u4E3A\u4EC0\u4E48\u9700\u8981\u4F7F\u7528-\u963B\u585E-\u961F\u5217" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60\u4E3A\u4EC0\u4E48\u9700\u8981\u4F7F\u7528\uFF08\u963B\u585E\uFF09\u961F\u5217\uFF1F</h3><p>\u56DE\u5230\u4E86\u975E\u7EBF\u7A0B\u6C60\u7F3A\u70B9\u4E2D\u7684\u7B2C3\u70B9\uFF1A 1\u3001\u56E0\u4E3A\u7EBF\u7A0B\u82E5\u662F\u65E0\u9650\u5236\u7684\u521B\u5EFA\uFF0C\u53EF\u80FD\u4F1A\u5BFC\u81F4\u5185\u5B58\u5360\u7528\u8FC7\u591A\u800C\u4EA7\u751FOOM\uFF0C\u5E76\u4E14\u4F1A\u9020\u6210cpu\u8FC7\u5EA6\u5207\u6362\u3002</p><p>\u53E6\u5916\u56DE\u5230\u4E86\u975E\u7EBF\u7A0B\u6C60\u7F3A\u70B9\u4E2D\u7684\u7B2C1\u70B9\uFF1A 2\u3001\u521B\u5EFA\u7EBF\u7A0B\u7684\u6D88\u8017\u8F83\u9AD8\u3002 \u6216\u8005\u4E0B\u9762\u8FD9\u4E2A\u7F51\u4E0A\u5E76\u4E0D\u9AD8\u660E\u7684\u56DE\u7B54\uFF1A 2\u3001\u7EBF\u7A0B\u6C60\u521B\u5EFA\u7EBF\u7A0B\u9700\u8981\u83B7\u53D6mainlock\u8FD9\u4E2A\u5168\u5C40\u9501\uFF0C\u5F71\u54CD\u5E76\u53D1\u6548\u7387\uFF0C\u963B\u585E\u961F\u5217\u53EF\u4EE5\u5F88\u597D\u7684\u7F13\u51B2\u3002</p><h3 id="\u7EBF\u7A0B\u6C60\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528\u963B\u585E\u961F\u5217\u800C\u4E0D\u4F7F\u7528\u975E\u963B\u585E\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528\u963B\u585E\u961F\u5217\u800C\u4E0D\u4F7F\u7528\u975E\u963B\u585E\u961F\u5217" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528\u963B\u585E\u961F\u5217\u800C\u4E0D\u4F7F\u7528\u975E\u963B\u585E\u961F\u5217\uFF1F</h3><p>\u963B\u585E\u961F\u5217\u53EF\u4EE5\u4FDD\u8BC1\u4EFB\u52A1\u961F\u5217\u4E2D\u6CA1\u6709\u4EFB\u52A1\u65F6\u963B\u585E\u83B7\u53D6\u4EFB\u52A1\u7684\u7EBF\u7A0B\uFF0C\u4F7F\u5F97\u7EBF\u7A0B\u8FDB\u5165wait\u72B6\u6001\uFF0C\u91CA\u653Ecpu\u8D44\u6E90\u3002 \u5F53\u961F\u5217\u4E2D\u6709\u4EFB\u52A1\u65F6\u624D\u5524\u9192\u5BF9\u5E94\u7EBF\u7A0B\u4ECE\u961F\u5217\u4E2D\u53D6\u51FA\u6D88\u606F\u8FDB\u884C\u6267\u884C\u3002 \u4F7F\u5F97\u5728\u7EBF\u7A0B\u4E0D\u81F3\u4E8E\u4E00\u76F4\u5360\u7528cpu\u8D44\u6E90\u3002</p><p>\uFF08\u7EBF\u7A0B\u6267\u884C\u5B8C\u4EFB\u52A1\u540E\u901A\u8FC7\u5FAA\u73AF\u518D\u6B21\u4ECE\u4EFB\u52A1\u961F\u5217\u4E2D\u53D6\u51FA\u4EFB\u52A1\u8FDB\u884C\u6267\u884C\uFF0C\u4EE3\u7801\u7247\u6BB5\u5982\u4E0B while (task != null || (task = getTask()) != null) {}\uFF09\u3002</p><p>\u4E0D\u7528\u963B\u585E\u961F\u5217\u4E5F\u662F\u53EF\u4EE5\u7684\uFF0C\u4E0D\u8FC7\u5B9E\u73B0\u8D77\u6765\u6BD4\u8F83\u9EBB\u70E6\u800C\u5DF2\uFF0C\u6709\u597D\u7528\u7684\u4E3A\u5565\u4E0D\u7528\u5462\uFF1F</p><h4 id="\u5982\u4F55\u914D\u7F6E\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u914D\u7F6E\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> \u5982\u4F55\u914D\u7F6E\u7EBF\u7A0B\u6C60</h4><p>CPU\u5BC6\u96C6\u578B\u4EFB\u52A1 \u5C3D\u91CF\u4F7F\u7528\u8F83\u5C0F\u7684\u7EBF\u7A0B\u6C60\uFF0C\u4E00\u822C\u4E3ACPU\u6838\u5FC3\u6570+1\u3002 \u56E0\u4E3ACPU\u5BC6\u96C6\u578B\u4EFB\u52A1\u4F7F\u5F97CPU\u4F7F\u7528\u7387\u5F88\u9AD8\uFF0C\u82E5\u5F00\u8FC7\u591A\u7684\u7EBF\u7A0B\u6570\uFF0C\u4F1A\u9020\u6210CPU\u8FC7\u5EA6\u5207\u6362\u3002</p><p>IO\u5BC6\u96C6\u578B\u4EFB\u52A1 \u53EF\u4EE5\u4F7F\u7528\u7A0D\u5927\u7684\u7EBF\u7A0B\u6C60\uFF0C\u4E00\u822C\u4E3A2*CPU\u6838\u5FC3\u6570\u3002 IO\u5BC6\u96C6\u578B\u4EFB\u52A1CPU\u4F7F\u7528\u7387\u5E76\u4E0D\u9AD8\uFF0C\u56E0\u6B64\u53EF\u4EE5\u8BA9CPU\u5728\u7B49\u5F85IO\u7684\u65F6\u5019\u6709\u5176\u4ED6\u7EBF\u7A0B\u53BB\u5904\u7406\u522B\u7684\u4EFB\u52A1\uFF0C\u5145\u5206\u5229\u7528CPU\u65F6\u95F4\u3002</p><p>\u6DF7\u5408\u578B\u4EFB\u52A1 \u53EF\u4EE5\u5C06\u4EFB\u52A1\u5206\u6210IO\u5BC6\u96C6\u578B\u548CCPU\u5BC6\u96C6\u578B\u4EFB\u52A1\uFF0C\u7136\u540E\u5206\u522B\u7528\u4E0D\u540C\u7684\u7EBF\u7A0B\u6C60\u53BB\u5904\u7406\u3002 \u53EA\u8981\u5206\u5B8C\u4E4B\u540E\u4E24\u4E2A\u4EFB\u52A1\u7684\u6267\u884C\u65F6\u95F4\u76F8\u5DEE\u4E0D\u5927\uFF0C\u90A3\u4E48\u5C31\u4F1A\u6BD4\u4E32\u884C\u6267\u884C\u6765\u7684\u9AD8\u6548\u3002 \u56E0\u4E3A\u5982\u679C\u5212\u5206\u4E4B\u540E\u4E24\u4E2A\u4EFB\u52A1\u6267\u884C\u65F6\u95F4\u6709\u6570\u636E\u7EA7\u7684\u5DEE\u8DDD\uFF0C\u90A3\u4E48\u62C6\u5206\u6CA1\u6709\u610F\u4E49\u3002 \u56E0\u4E3A\u5148\u6267\u884C\u5B8C\u7684\u4EFB\u52A1\u5C31\u8981\u7B49\u540E\u6267\u884C\u5B8C\u7684\u4EFB\u52A1\uFF0C\u6700\u7EC8\u7684\u65F6\u95F4\u4ECD\u7136\u53D6\u51B3\u4E8E\u540E\u6267\u884C\u5B8C\u7684\u4EFB\u52A1\uFF0C\u800C\u4E14\u8FD8\u8981\u52A0\u4E0A\u4EFB\u52A1\u62C6\u5206\u4E0E\u5408\u5E76\u7684\u5F00\u9500\uFF0C\u5F97\u4E0D\u507F\u5931\u3002</p><h3 id="execute-\u548Csubmit-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#execute-\u548Csubmit-\u65B9\u6CD5" aria-hidden="true">#</a> execute()\u548Csubmit()\u65B9\u6CD5</h3><p>1\u3001execute()\uFF0C\u6267\u884C\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002 2\u3001submit()\uFF0C\u63D0\u4EA4\u4E00\u4E2A\u7EBF\u7A0B\u4EFB\u52A1\uFF0C\u6709\u8FD4\u56DE\u503C\u3002 submit(Callable&lt;T&gt; task)\u80FD\u83B7\u53D6\u5230\u5B83\u7684\u8FD4\u56DE\u503C\uFF0C\u901A\u8FC7future.get()\u83B7\u53D6\uFF08\u963B\u585E\u76F4\u5230\u4EFB\u52A1\u6267\u884C\u5B8C\uFF09\u3002\u4E00\u822C\u4F7F\u7528FutureTask+Callable\u914D\u5408\u4F7F\u7528\uFF08IntentService\u4E2D\u6709\u4F53\u73B0\uFF09\u3002</p><p>submit(Runnable task, T result)\u80FD\u901A\u8FC7\u4F20\u5165\u7684\u8F7D\u4F53result\u95F4\u63A5\u83B7\u5F97\u7EBF\u7A0B\u7684\u8FD4\u56DE\u503C\u3002 submit(Runnable task)\u5219\u662F\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\uFF0C\u5C31\u7B97\u83B7\u53D6\u5B83\u7684\u8FD4\u56DE\u503C\u4E5F\u662Fnull\u3002</p><p>Future.get\u65B9\u6CD5\u4F1A\u4F7F\u53D6\u7ED3\u679C\u7684\u7EBF\u7A0B\u8FDB\u5165\u963B\u585E\u72B6\u6001\uFF0C\u77E5\u9053\u7EBF\u7A0B\u6267\u884C\u5B8C\u6210\u4E4B\u540E\uFF0C\u5524\u9192\u53D6\u7ED3\u679C\u7684\u7EBF\u7A0B\uFF0C\u7136\u540E\u8FD4\u56DE\u7ED3\u679C\u3002</p><h2 id="fork-join" tabindex="-1"><a class="header-anchor" href="#fork-join" aria-hidden="true">#</a> Fork/Join</h2><h3 id="fork-join\u6846\u67B6\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#fork-join\u6846\u67B6\u7B80\u4ECB" aria-hidden="true">#</a> Fork/Join\u6846\u67B6\u7B80\u4ECB</h3><p>Fork/Join\u5B83\u53EF\u4EE5\u5C06\u4E00\u4E2A\u5927\u7684\u4EFB\u52A1\u62C6\u5206\u6210\u591A\u4E2A\u5B50\u4EFB\u52A1\u8FDB\u884C\u5E76\u884C\u5904\u7406\uFF0C\u6700\u540E\u5C06\u5B50\u4EFB\u52A1\u7ED3\u679C\u5408\u5E76\u6210\u6700\u540E\u7684\u8BA1\u7B97\u7ED3\u679C\uFF0C\u5E76\u8FDB\u884C\u8F93\u51FA\u3002Fork/Join\u6846\u67B6\u8981\u5B8C\u6210\u4E24\u4EF6\u4E8B\u60C5\uFF1A Fork\uFF1A\u628A\u4E00\u4E2A\u590D\u6742\u4EFB\u52A1\u8FDB\u884C\u5206\u62C6\uFF0C\u5927\u4E8B\u5316\u5C0F Join\uFF1A\u628A\u5206\u62C6\u4EFB\u52A1\u7684\u7ED3\u679C\u8FDB\u884C\u5408\u5E76</p><p><img src="http://qnimg.gisfsde.com/work/image-20220216213702462.png" alt="image-20220216213702462" loading="lazy"></p><ol><li>\u4EFB\u52A1\u5206\u5272\uFF1A\u9996\u5148Fork/Join\u6846\u67B6\u9700\u8981\u628A\u5927\u7684\u4EFB\u52A1\u5206\u5272\u6210\u8DB3\u591F\u5C0F\u7684\u5B50\u4EFB\u52A1\uFF0C\u5982\u679C\u5B50\u4EFB\u52A1\u6BD4\u8F83\u5927\u7684\u8BDD\u8FD8\u8981\u5BF9\u5B50\u4EFB\u52A1\u8FDB\u884C\u7EE7\u7EED\u5206\u5272</li><li>\u6267\u884C\u4EFB\u52A1\u5E76\u5408\u5E76\u7ED3\u679C\uFF1A\u5206\u5272\u7684\u5B50\u4EFB\u52A1\u5206\u522B\u653E\u5230\u53CC\u7AEF\u961F\u5217\u91CC\uFF0C\u7136\u540E\u51E0\u4E2A\u542F\u52A8\u7EBF\u7A0B\u5206\u522B\u4ECE\u53CC\u7AEF\u961F\u5217\u91CC\u83B7\u53D6\u4EFB\u52A1\u6267\u884C\u3002\u5B50\u4EFB\u52A1\u6267\u884C\u5B8C\u7684\u7ED3\u679C\u90FD\u653E\u5728\u53E6\u5916\u4E00\u4E2A\u961F\u5217\u91CC\uFF0C\u542F\u52A8\u4E00\u4E2A\u7EBF\u7A0B\u4ECE\u961F\u5217\u91CC\u53D6\u6570\u636E\uFF0C\u7136\u540E\u5408\u5E76\u8FD9\u4E9B\u6570\u636E\u3002 \u5728Java\u7684Fork/Join\u6846\u67B6\u4E2D\uFF0C\u4F7F\u7528\u4E24\u4E2A\u7C7B\u5B8C\u6210\u4E0A\u8FF0\u64CD\u4F5C</li></ol><p><strong>\u2022 ForkJoinTask</strong>:\u6211\u4EEC\u8981\u4F7F\u7528Fork/Join\u6846\u67B6\uFF0C\u9996\u5148\u9700\u8981\u521B\u5EFA\u4E00\u4E2AForkJoin\u4EFB\u52A1\u3002\u8BE5\u7C7B\u63D0\u4F9B\u4E86\u5728\u4EFB\u52A1\u4E2D\u6267\u884Cfork\u548Cjoin\u7684\u673A\u5236\u3002\u901A\u5E38\u60C5\u51B5\u4E0B\u6211\u4EEC\u4E0D\u9700\u8981\u76F4\u63A5\u96C6\u6210ForkJoinTask\u7C7B\uFF0C\u53EA\u9700\u8981\u7EE7\u627F\u5B83\u7684\u5B50\u7C7B\uFF0CFork/Join\u6846\u67B6\u63D0\u4F9B\u4E86\u4E24\u4E2A\u5B50\u7C7B\uFF1A a.RecursiveAction\uFF1A\u7528\u4E8E\u6CA1\u6709\u8FD4\u56DE\u7ED3\u679C\u7684\u4EFB\u52A1 b.RecursiveTask:\u7528\u4E8E\u6709\u8FD4\u56DE\u7ED3\u679C\u7684\u4EFB\u52A1 <strong>\u2022 ForkJoinPool</strong>:ForkJoinTask\u9700\u8981\u901A\u8FC7ForkJoinPool\u6765\u6267\u884C <strong>\u2022 RecursiveTask</strong>: \u7EE7\u627F\u540E\u53EF\u4EE5\u5B9E\u73B0\u9012\u5F52(\u81EA\u5DF1\u8C03\u81EA\u5DF1)\u8C03\u7528\u7684\u4EFB\u52A1</p><h3 id="fork-join\u6846\u67B6\u7684\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#fork-join\u6846\u67B6\u7684\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> Fork/Join\u6846\u67B6\u7684\u5B9E\u73B0\u539F\u7406</h3><p>\u200B ForkJoinPool\u7531ForkJoinTask\u6570\u7EC4\u548CForkJoinWorkerThread\u6570\u7EC4\u7EC4\u6210\uFF0CForkJoinTask\u6570\u7EC4\u8D1F\u8D23\u5C06\u5B58\u653E\u4EE5\u53CA\u5C06\u7A0B\u5E8F\u63D0\u4EA4\u7ED9ForkJoinPool\uFF0C\u800CForkJoinWorkerThread\u8D1F\u8D23\u6267\u884C\u8FD9\u4E9B\u4EFB\u52A1\u3002</p><h3 id="fork\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#fork\u65B9\u6CD5" aria-hidden="true">#</a> Fork\u65B9\u6CD5</h3><p><img src="http://qnimg.gisfsde.com/work/image-20220216214000676.png" alt="image-20220216214000676" loading="lazy"></p><p><img src="http://qnimg.gisfsde.com/work/image-20220216214007548.png" alt="image-20220216214007548" loading="lazy"></p><p>\u200B Fork\u65B9\u6CD5\u7684\u5B9E\u73B0\u539F\u7406\uFF1A \u5F53\u6211\u4EEC\u8C03\u7528ForkJoinTask\u7684fork\u65B9\u6CD5\u65F6\uFF0C\u7A0B\u5E8F\u4F1A\u628A\u4EFB\u52A1\u653E\u5728ForkJoinWorkerThread\u7684pushTask\u7684workQueue\u4E2D\uFF0C\u5F02\u6B65\u5730\u6267\u884C\u8FD9\u4E2A\u4EFB\u52A1\uFF0C\u7136\u540E\u7ACB\u5373\u8FD4\u56DE\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">ForkJoinTask</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token class-name">Thread</span> t<span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">)</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span>workQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">else</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>common<span class="token punctuation">.</span><span class="token function">externalPush</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>pushTask\u65B9\u6CD5\u628A\u5F53\u524D\u4EFB\u52A1\u5B58\u653E\u5728ForkJoinTask\u6570\u7EC4\u961F\u5217\u91CC\u3002\u7136\u540E\u518D\u8C03\u7528ForkJoinPool\u7684signalWork()\u65B9\u6CD5\u5524\u9192\u6216\u521B\u5EFA\u4E00\u4E2A\u5DE5\u4F5C\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">ForkJoinTask</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token class-name">ForkJoinTask</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">;</span> 
    <span class="token class-name">ForkJoinPool</span> p<span class="token punctuation">;</span> 
    <span class="token keyword">int</span> b <span class="token operator">=</span> base<span class="token punctuation">,</span> s <span class="token operator">=</span> top<span class="token punctuation">,</span> n<span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">=</span> array<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token comment">// ignore if queue removed int m = a.length - 1; </span>
        <span class="token comment">// fenced write for task visibility U.putOrderedObject(a, ((m &amp; s) \\&lt;\\&lt; ASHIFT) + ABASE, task);</span>
        <span class="token class-name">U</span><span class="token punctuation">.</span><span class="token function">putOrderedInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> QTOP<span class="token punctuation">,</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">=</span> s <span class="token operator">-</span> b<span class="token punctuation">)</span> \\<span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> pool<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> p<span class="token punctuation">.</span><span class="token function">signalWork</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>workQueues<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u6267\u884C </span>
                              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> m<span class="token punctuation">)</span> <span class="token function">growArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="join\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#join\u65B9\u6CD5" aria-hidden="true">#</a> join\u65B9\u6CD5</h3><p>Join\u65B9\u6CD5\u7684\u4E3B\u8981\u4F5C\u7528\u662F\u963B\u585E\u5F53\u524D\u7EBF\u7A0B\u5E76\u7B49\u5F85\u83B7\u53D6\u7ED3\u679C\u3002\u8BA9\u6211\u4EEC\u4E00\u8D77\u770B\u770BForkJoinTask\u7684join\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">int</span> s<span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> <span class="token function">doJoin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> DONE_MASK<span class="token punctuation">)</span> <span class="token operator">!=</span> NORMAL<span class="token punctuation">)</span> 
        <span class="token function">reportException</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token function">getRawResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u9996\u5148\u8C03\u7528doJoin\u65B9\u6CD5\uFF0C\u901A\u8FC7doJoin()\u65B9\u6CD5\u5F97\u5230\u5F53\u524D\u4EFB\u52A1\u7684\u72B6\u6001\u6765\u5224\u65AD\u8FD4\u56DE\u4EC0\u4E48\u7ED3\u679C\uFF0C\u4EFB\u52A1\u72B6\u6001\u67094\u79CD\uFF1A <mark>\u5DF2\u5B8C\u6210\uFF08NORMAL\uFF09\u3001\u88AB\u53D6\u6D88\uFF08CANCELLED\uFF09\u3001\u4FE1\u53F7\uFF08SIGNAL\uFF09\u548C\u51FA\u73B0\u5F02\u5E38\uFF08EXCEPTIONAL\uFF09</mark> \u2022 \u5982\u679C\u4EFB\u52A1\u72B6\u6001\u662F\u5DF2\u5B8C\u6210\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u4EFB\u52A1\u7ED3\u679C\u3002 \u2022 \u5982\u679C\u4EFB\u52A1\u72B6\u6001\u662F\u88AB\u53D6\u6D88\uFF0C\u5219\u76F4\u63A5\u629B\u51FACancellationException \u2022 \u5982\u679C\u4EFB\u52A1\u72B6\u6001\u662F\u629B\u51FA\u5F02\u5E38\uFF0C\u5219\u76F4\u63A5\u629B\u51FA\u5BF9\u5E94\u7684\u5F02\u5E38 \u8BA9\u6211\u4EEC\u5206\u6790\u4E00\u4E0BdoJoin\u65B9\u6CD5\u7684\u5B9E\u73B0</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">doJoin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">int</span> s<span class="token punctuation">;</span> 
    <span class="token class-name">Thread</span> t<span class="token punctuation">;</span> 
    <span class="token class-name">ForkJoinWorkerThread</span> wt<span class="token punctuation">;</span> 
    <span class="token class-name">ForkJoinPool<span class="token punctuation">.</span>WorkQueue</span> w<span class="token punctuation">;</span> 
    <span class="token keyword">return</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> status<span class="token punctuation">)</span> \\<span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> s <span class="token operator">:</span> 
    <span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>w <span class="token operator">=</span> <span class="token punctuation">(</span>wt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ForkJoinWorkerThread</span><span class="token punctuation">)</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span>workQueue<span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">tryUnpush</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> <span class="token function">doExec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \\<span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> s <span class="token operator">:</span> wt<span class="token punctuation">.</span>pool<span class="token punctuation">.</span><span class="token function">awaitJoin</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">externalAwaitDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">doExec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">int</span> s<span class="token punctuation">;</span> 
    <span class="token keyword">boolean</span> completed<span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> status<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">try</span> <span class="token punctuation">{</span> completed <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
                                                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> rex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">setExceptionalCompletion</span><span class="token punctuation">(</span>rex<span class="token punctuation">)</span><span class="token punctuation">;</span> 
                                                                            <span class="token punctuation">}</span> 
                                               <span class="token keyword">if</span> <span class="token punctuation">(</span>completed<span class="token punctuation">)</span> s <span class="token operator">=</span> <span class="token function">setCompletion</span><span class="token punctuation">(</span>NORMAL<span class="token punctuation">)</span><span class="token punctuation">;</span> 
                                              <span class="token punctuation">}</span> <span class="token keyword">return</span> s<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728doJoin()\u65B9\u6CD5\u6D41\u7A0B\u5982\u4E0B:</p><ol><li><p>\u9996\u5148\u901A\u8FC7\u67E5\u770B\u4EFB\u52A1\u7684\u72B6\u6001\uFF0C\u770B\u4EFB\u52A1\u662F\u5426\u5DF2\u7ECF\u6267\u884C\u5B8C\u6210\uFF0C\u5982\u679C\u6267\u884C\u5B8C\u6210\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u4EFB\u52A1\u72B6\u6001\uFF1B</p></li><li><p>\u5982\u679C\u6CA1\u6709\u6267\u884C\u5B8C\uFF0C\u5219\u4ECE\u4EFB\u52A1\u6570\u7EC4\u91CC\u53D6\u51FA\u4EFB\u52A1\u5E76\u6267\u884C\u3002</p></li><li><p>\u5982\u679C\u4EFB\u52A1\u987A\u5229\u6267\u884C\u5B8C\u6210\uFF0C\u5219\u8BBE\u7F6E\u4EFB\u52A1\u72B6\u6001\u4E3ANORMAL\uFF0C\u5982\u679C\u51FA\u73B0\u5F02\u5E38\uFF0C\u5219\u8BB0\u5F55\u5F02\u5E38\uFF0C\u5E76\u5C06\u4EFB\u52A1\u72B6\u6001\u8BBE\u7F6E\u4E3AEXCEPTIONAL\u3002</p></li></ol><h3 id="fork-join\u6846\u67B6\u7684\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#fork-join\u6846\u67B6\u7684\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> Fork/Join\u6846\u67B6\u7684\u5F02\u5E38\u5904\u7406</h3><p>ForkJoinTask\u5728\u6267\u884C\u7684\u65F6\u5019\u53EF\u80FD\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u4F46\u662F\u6211\u4EEC\u6CA1\u529E\u6CD5\u5728\u4E3B\u7EBF\u7A0B\u91CC\u76F4\u63A5\u6355\u83B7\u5F02\u5E38\uFF0C\u6240\u4EE5ForkJoinTask\u63D0\u4F9B\u4E86isCompletedAbnormally()\u65B9\u6CD5\u6765\u68C0\u67E5\u4EFB\u52A1\u662F\u5426\u5DF2\u7ECF\u629B\u51FA\u5F02\u5E38\u6216\u5DF2\u7ECF\u88AB\u53D6\u6D88\u4E86\uFF0C\u5E76\u4E14\u53EF\u4EE5\u901A\u8FC7ForkJoinTask\u7684getException\u65B9\u6CD5\u83B7\u53D6\u5F02\u5E38\u3002 getException\u65B9\u6CD5\u8FD4\u56DEThrowable\u5BF9\u8C61\uFF0C\u5982\u679C\u4EFB\u52A1\u88AB\u53D6\u6D88\u4E86\u5219\u8FD4\u56DECancellationException\u3002\u5982\u679C\u4EFB\u52A1\u6CA1\u6709\u5B8C\u6210\u6216\u8005\u6CA1\u6709\u629B\u51FA\u5F02\u5E38\u5219\u8FD4\u56DEnull\u3002</p><h3 id="\u5165\u95E8\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5165\u95E8\u6848\u4F8B" aria-hidden="true">#</a> \u5165\u95E8\u6848\u4F8B</h3><p>\u573A\u666F: \u751F\u6210\u4E00\u4E2A\u8BA1\u7B97\u4EFB\u52A1\uFF0C\u8BA1\u7B971+2+3.........+1000,<mark>\u6BCF100\u4E2A\u6570\u5207\u5206\u4E00\u4E2A\u5B50\u4EFB\u52A1</mark></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>forkjoin</span><span class="token punctuation">;</span>
  
  <span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
  
  <span class="token keyword">class</span> <span class="token class-name">MyTask</span> <span class="token keyword">extends</span> <span class="token class-name">RecursiveTask</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
  
      <span class="token comment">//\u62C6\u5206\u5DEE\u503C\u4E0D\u80FD\u8D85\u8FC710\uFF0C\u8BA1\u7B9710\u4EE5\u5185\u8FD0\u7B97</span>
      <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Integer</span> VALUE <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
      <span class="token keyword">private</span> <span class="token keyword">int</span> begin <span class="token punctuation">;</span><span class="token comment">//\u62C6\u5206\u5F00\u59CB\u503C</span>
      <span class="token keyword">private</span> <span class="token keyword">int</span> end<span class="token punctuation">;</span><span class="token comment">//\u62C6\u5206\u7ED3\u675F\u503C</span>
      <span class="token keyword">private</span> <span class="token keyword">int</span> result <span class="token punctuation">;</span> <span class="token comment">//\u8FD4\u56DE\u7ED3\u679C</span>
  
      <span class="token comment">//\u521B\u5EFA\u6709\u53C2\u6570\u6784\u9020</span>
      <span class="token keyword">public</span> <span class="token class-name">MyTask</span><span class="token punctuation">(</span><span class="token keyword">int</span> begin<span class="token punctuation">,</span><span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>begin <span class="token operator">=</span> begin<span class="token punctuation">;</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> end<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  
      <span class="token comment">//\u62C6\u5206\u548C\u5408\u5E76\u8FC7\u7A0B</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">protected</span> <span class="token class-name">Integer</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">//\u5224\u65AD\u76F8\u52A0\u4E24\u4E2A\u6570\u503C\u662F\u5426\u5927\u4E8E10</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>end<span class="token operator">-</span>begin<span class="token punctuation">)</span>\\<span class="token operator">&lt;=</span>VALUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">//\u76F8\u52A0\u64CD\u4F5C</span>
              <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> begin<span class="token punctuation">;</span> i \\<span class="token operator">&lt;=</span>end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  result <span class="token operator">=</span> result<span class="token operator">+</span>i<span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">//\u8FDB\u4E00\u6B65\u62C6\u5206</span>
              <span class="token comment">//\u83B7\u53D6\u4E2D\u95F4\u503C</span>
              <span class="token keyword">int</span> middle <span class="token operator">=</span> <span class="token punctuation">(</span>begin<span class="token operator">+</span>end<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
              <span class="token comment">//\u62C6\u5206\u5DE6\u8FB9</span>
              <span class="token class-name">MyTask</span> task01 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyTask</span><span class="token punctuation">(</span>begin<span class="token punctuation">,</span>middle<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token comment">//\u62C6\u5206\u53F3\u8FB9</span>
              <span class="token class-name">MyTask</span> task02 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyTask</span><span class="token punctuation">(</span>middle<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token comment">//\u8C03\u7528\u65B9\u6CD5\u62C6\u5206</span>
              task01<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              task02<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token comment">//\u5408\u5E76\u7ED3\u679C</span>
              result <span class="token operator">=</span> task01<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>task02<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span> result<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForkJoinDemo</span> <span class="token punctuation">{</span>
      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
          <span class="token comment">//\u521B\u5EFAMyTask\u5BF9\u8C61</span>
          <span class="token class-name">MyTask</span> myTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyTask</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//\u521B\u5EFA\u5206\u652F\u5408\u5E76\u6C60\u5BF9\u8C61</span>
          <span class="token class-name">ForkJoinPool</span> forkJoinPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name">ForkJoinTask</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> forkJoinTask <span class="token operator">=</span> forkJoinPool<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>myTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//\u83B7\u53D6\u6700\u7EC8\u5408\u5E76\u4E4B\u540E\u7ED3\u679C</span>
          <span class="token class-name">Integer</span> result <span class="token operator">=</span> forkJoinTask<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//\u5173\u95ED\u6C60\u5BF9\u8C61</span>
          forkJoinPool<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="completablefuture" tabindex="-1"><a class="header-anchor" href="#completablefuture" aria-hidden="true">#</a> CompletableFuture</h2><h3 id="completablefuture\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#completablefuture\u7B80\u4ECB" aria-hidden="true">#</a> CompletableFuture\u7B80\u4ECB</h3><p>\u540C\u6B65\u3010\u4E0D\u5728\u7B49\u5F85\u3011\u3001\u5F02\u6B65\u3010\u4E0D\u5728\u5148\u505A\u5176\u4ED6\u7684\u3011</p><p>CompletableFuture\u5728Java\u91CC\u9762\u88AB\u7528\u4E8E\u5F02\u6B65\u7F16\u7A0B\uFF0C\u5F02\u6B65\u901A\u5E38\u610F\u5473\u7740\u975E\u963B\u585E\uFF0C\u53EF\u4EE5\u4F7F\u5F97\u6211\u4EEC\u7684\u4EFB\u52A1\u5355\u72EC\u8FD0\u884C\u5728\u4E0E\u4E3B\u7EBF\u7A0B\u5206\u79BB\u7684\u5176\u4ED6\u7EBF\u7A0B\u4E2D\uFF0C\u5E76\u4E14\u901A\u8FC7\u56DE\u8C03\u53EF\u4EE5\u5728\u4E3B\u7EBF\u7A0B\u4E2D\u5F97\u5230\u5F02\u6B65\u4EFB\u52A1\u7684\u6267\u884C\u72B6\u6001\uFF0C\u662F\u5426\u5B8C\u6210\uFF0C\u548C\u662F\u5426\u5F02\u5E38\u7B49\u4FE1\u606F\u3002 CompletableFuture\u5B9E\u73B0\u4E86Future, CompletionStage\u63A5\u53E3\uFF0C\u5B9E\u73B0\u4E86Future\u63A5\u53E3\u5C31\u53EF\u4EE5\u517C\u5BB9\u73B0\u5728\u6709\u7EBF\u7A0B\u6C60\u6846\u67B6\uFF0C\u800CCompletionStage\u63A5\u53E3\u624D\u662F\u5F02\u6B65\u7F16\u7A0B\u7684\u63A5\u53E3\u62BD\u8C61\uFF0C\u91CC\u9762\u5B9A\u4E49\u591A\u79CD\u5F02\u6B65\u65B9\u6CD5\uFF0C\u901A\u8FC7\u8FD9\u4E24\u8005\u96C6\u5408\uFF0C\u4ECE\u800C\u6253\u9020\u51FA\u4E86\u5F3A\u5927\u7684CompletableFuture\u7C7B\u3002</p><h4 id="future\u4E0Ecompletablefuture" tabindex="-1"><a class="header-anchor" href="#future\u4E0Ecompletablefuture" aria-hidden="true">#</a> Future\u4E0ECompletableFuture</h4><p>Futrue\u5728Java\u91CC\u9762\uFF0C\u901A\u5E38\u7528\u6765\u8868\u793A\u4E00\u4E2A\u5F02\u6B65\u4EFB\u52A1\u7684\u5F15\u7528\uFF0C\u6BD4\u5982\u6211\u4EEC\u5C06\u4EFB\u52A1\u63D0\u4EA4\u5230\u7EBF\u7A0B\u6C60\u91CC\u9762\uFF0C\u7136\u540E\u6211\u4EEC\u4F1A\u5F97\u5230\u4E00\u4E2AFutrue\uFF0C\u5728Future\u91CC\u9762\u6709isDone\u65B9\u6CD5\u6765 \u5224\u65AD\u4EFB\u52A1\u662F\u5426\u5904\u7406\u7ED3\u675F\uFF0C\u8FD8\u6709get\u65B9\u6CD5\u53EF\u4EE5\u4E00\u76F4\u963B\u585E\u76F4\u5230\u4EFB\u52A1\u7ED3\u675F\u7136\u540E\u83B7\u53D6\u7ED3\u679C\uFF0C\u4F46\u6574\u4F53\u6765\u8BF4\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u8FD8\u662F\u540C\u6B65\u7684\uFF0C\u56E0\u4E3A\u9700\u8981\u5BA2\u6237\u7AEF\u4E0D\u65AD\u963B\u585E\u7B49\u5F85\u6216\u8005\u4E0D\u65AD\u8F6E\u8BE2\u624D\u80FD\u77E5\u9053\u4EFB\u52A1\u662F\u5426\u5B8C\u6210\u3002 Future\u7684\u4E3B\u8981\u7F3A\u70B9\u5982\u4E0B\uFF1A \uFF081\uFF09\u4E0D\u652F\u6301\u624B\u52A8\u5B8C\u6210 \u6211\u63D0\u4EA4\u4E86\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u4F46\u662F\u6267\u884C\u592A\u6162\u4E86\uFF0C\u6211\u901A\u8FC7\u5176\u4ED6\u8DEF\u5F84\u5DF2\u7ECF\u83B7\u53D6\u5230\u4E86\u4EFB\u52A1\u7ED3\u679C\uFF0C\u73B0\u5728\u6CA1\u6CD5\u628A\u8FD9\u4E2A\u4EFB\u52A1\u7ED3\u679C\u901A\u77E5\u5230\u6B63\u5728\u6267\u884C\u7684\u7EBF\u7A0B\uFF0C\u6240\u4EE5\u5FC5\u987B\u4E3B\u52A8\u53D6\u6D88\u6216\u8005\u4E00\u76F4\u7B49\u5F85\u5B83\u6267\u884C\u5B8C\u6210 \uFF082\uFF09\u4E0D\u652F\u6301\u8FDB\u4E00\u6B65\u7684\u975E\u963B\u585E\u8C03\u7528 \u901A\u8FC7Future\u7684get\u65B9\u6CD5\u4F1A\u4E00\u76F4\u963B\u585E\u5230\u4EFB\u52A1\u5B8C\u6210\uFF0C\u4F46\u662F\u60F3\u5728\u83B7\u53D6\u4EFB\u52A1\u4E4B\u540E\u6267\u884C\u989D\u5916\u7684\u4EFB\u52A1\uFF0C\u56E0\u4E3AFuture\u4E0D\u652F\u6301\u56DE\u8C03\u51FD\u6570\uFF0C\u6240\u4EE5\u65E0\u6CD5\u5B9E\u73B0\u8FD9\u4E2A\u529F\u80FD \uFF083\uFF09\u4E0D\u652F\u6301\u94FE\u5F0F\u8C03\u7528 \u5BF9\u4E8EFuture\u7684\u6267\u884C\u7ED3\u679C\uFF0C\u6211\u4EEC\u60F3\u7EE7\u7EED\u4F20\u5230\u4E0B\u4E00\u4E2AFuture\u5904\u7406\u4F7F\u7528\uFF0C\u4ECE\u800C\u5F62\u6210\u4E00\u4E2A\u94FE\u5F0F\u7684pipline\u8C03\u7528\uFF0C\u8FD9\u5728Future\u4E2D\u662F\u6CA1\u6CD5\u5B9E\u73B0\u7684\u3002 \uFF084\uFF09\u4E0D\u652F\u6301\u591A\u4E2AFuture\u5408\u5E76 \u6BD4\u5982\u6211\u4EEC\u670910\u4E2AFuture\u5E76\u884C\u6267\u884C\uFF0C\u6211\u4EEC\u60F3\u5728\u6240\u6709\u7684Future\u8FD0\u884C\u5B8C\u6BD5\u4E4B\u540E\uFF0C\u6267\u884C\u67D0\u4E9B\u51FD\u6570\uFF0C\u662F\u6CA1\u6CD5\u901A\u8FC7Future\u5B9E\u73B0\u7684\u3002 \uFF085\uFF09\u4E0D\u652F\u6301\u5F02\u5E38\u5904\u7406 Future\u7684API\u6CA1\u6709\u4EFB\u4F55\u7684\u5F02\u5E38\u5904\u7406\u7684api\uFF0C\u6240\u4EE5\u5728\u5F02\u6B65\u8FD0\u884C\u65F6\uFF0C\u5982\u679C\u51FA\u4E86\u95EE\u9898\u662F\u4E0D\u597D\u5B9A\u4F4D\u7684\u3002</p><h3 id="completablefuture\u5165\u95E8" tabindex="-1"><a class="header-anchor" href="#completablefuture\u5165\u95E8" aria-hidden="true">#</a> CompletableFuture\u5165\u95E8</h3><h4 id="\u4F7F\u7528completablefuture" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528completablefuture" aria-hidden="true">#</a> \u4F7F\u7528CompletableFuture</h4><p>\u573A\u666F:\u4E3B\u7EBF\u7A0B\u91CC\u9762\u521B\u5EFA\u4E00\u4E2ACompletableFuture\uFF0C\u7136\u540E\u4E3B\u7EBF\u7A0B\u8C03\u7528get\u65B9\u6CD5\u4F1A\u963B\u585E\uFF0C\u6700\u540E\u6211\u4EEC\u5728\u4E00\u4E2A\u5B50\u7EBF\u7A0B\u4E2D\u4F7F\u5176\u7EC8\u6B62\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/** * \u4E3B\u7EBF\u7A0B\u91CC\u9762\u521B\u5EFA\u4E00\u4E2ACompletableFuture\uFF0C\u7136\u540E\u4E3B\u7EBF\u7A0B\u8C03\u7528get\u65B9\u6CD5\u4F1A\u963B\u585E\uFF0C\u6700\u540E\u6211\u4EEC\u5728\u4E00\u4E2A\u5B50\u7EBF\u7A0B\u4E2D\u4F7F\u5176\u7EC8\u6B62 * @param args */</span> 
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span> 
    <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> 
        <span class="token keyword">try</span><span class="token punctuation">{</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u5B50\u7EBF\u7A0B\u5F00\u59CB\u5E72\u6D3B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token comment">//\u5B50\u7EBF\u7A0B\u77615\u79D2 </span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token comment">//\u5728\u5B50\u7EBF\u7A0B\u4E2D\u5B8C\u6210\u4E3B\u7EBF\u7A0B </span>
            future<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
           <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span> e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
                               <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token comment">//\u4E3B\u7EBF\u7A0B\u8C03\u7528get\u65B9\u6CD5\u963B\u585E </span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u8C03\u7528get\u65B9\u6CD5\u83B7\u53D6\u7ED3\u679C\u4E3A: &quot;</span> <span class="token operator">+</span> future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5B8C\u6210,\u963B\u585E\u7ED3\u675F!!!!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1" aria-hidden="true">#</a> \u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token doc-comment comment">/** * \u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1 * @param args */</span> 
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span> 
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
     <span class="token comment">//\u8FD0\u884C\u4E00\u4E2A\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1 </span>
     <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">try</span> <span class="token punctuation">{</span> 
         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5B50\u7EBF\u7A0B\u542F\u52A8\u5E72\u6D3B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                  
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5B50\u7EBF\u7A0B\u5B8C\u6210&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
     <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
                           <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
     <span class="token comment">//\u4E3B\u7EBF\u7A0B\u963B\u585E </span>
     future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u7ED3\u675F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1" aria-hidden="true">#</a> \u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * \u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1 * @param args
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u8FD0\u884C\u4E00\u4E2A\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1 </span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5B50\u7EBF\u7A0B\u5F00\u59CB\u4EFB\u52A1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token string">&quot;\u5B50\u7EBF\u7A0B\u5B8C\u6210\u4E86!&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u4E3B\u7EBF\u7A0B\u963B\u585E </span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u7ED3\u675F, \u5B50\u7EBF\u7A0B\u7684\u7ED3\u679C\u4E3A:&quot;</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u7EBF\u7A0B\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u4F9D\u8D56" aria-hidden="true">#</a> \u7EBF\u7A0B\u4F9D\u8D56</h4><p>\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u4F9D\u8D56\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528 thenApply \u65B9\u6CD5\u6765\u628A\u8FD9\u4E24\u4E2A\u7EBF\u7A0B\u4E32\u884C\u5316\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Integer</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u5148\u5BF9\u4E00\u4E2A\u6570\u52A010,\u7136\u540E\u53D6\u5E73\u65B9 * @param args
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A010\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                num <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenApply</span><span class="token punctuation">(</span>integer <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> num <span class="token operator">*</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Integer</span> integer <span class="token operator">=</span> future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u7ED3\u675F, \u5B50\u7EBF\u7A0B\u7684\u7ED3\u679C\u4E3A:&quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6D88\u8D39\u5904\u7406\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u6D88\u8D39\u5904\u7406\u7ED3\u679C" aria-hidden="true">#</a> \u6D88\u8D39\u5904\u7406\u7ED3\u679C</h4><p>thenAccept \u6D88\u8D39\u5904\u7406\u7ED3\u679C, \u63A5\u6536\u4EFB\u52A1\u7684\u5904\u7406\u7ED3\u679C\uFF0C\u5E76\u6D88\u8D39\u5904\u7406\uFF0C\u65E0\u8FD4\u56DE\u7ED3\u679C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A010\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                num <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenApply</span><span class="token punctuation">(</span>integer <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> num <span class="token operator">*</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenAccept</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5B50\u7EBF\u7A0B\u5168\u90E8\u5904\u7406\u5B8C\u6210,\u6700\u540E\u8C03\u7528\u4E86accept,\u7ED3\u679C\u4E3A:&quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> \u5F02\u5E38\u5904\u7406</h4><p>exceptionally\u5F02\u5E38\u5904\u7406,\u51FA\u73B0\u5F02\u5E38\u65F6\u89E6\u53D1</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A010\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionally</span><span class="token punctuation">(</span>ex <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>handle\u7C7B\u4F3C\u4E8EthenAccept/thenRun\u65B9\u6CD5,\u662F\u6700\u540E\u4E00\u6B65\u7684\u5904\u7406\u8C03\u7528,\u4F46\u662F\u540C\u65F6\u53EF\u4EE5\u5904\u7406\u5F02\u5E38</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A010\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> ex<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDB\u5165handle\u65B9\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D1\u751F\u4E86\u5F02\u5E38,\u5185\u5BB9\u4E3A:&quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B63\u5E38\u5B8C\u6210,\u5185\u5BB9\u4E3A: &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u7ED3\u679C\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u679C\u5408\u5E76" aria-hidden="true">#</a> \u7ED3\u679C\u5408\u5E76</h4><p>thenCompose\u5408\u5E76\u4E24\u4E2A\u6709\u4F9D\u8D56\u5173\u7CFB\u7684CompletableFutures\u7684\u6267\u884C\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u7B2C\u4E00\u6B65\u52A010 </span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A010\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5408\u5E76 </span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> future1 <span class="token operator">=</span> future<span class="token punctuation">.</span><span class="token function">thenCompose</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> <span class="token comment">//\u518D\u6765\u4E00\u4E2ACompletableFuture </span>
                <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>future1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>thenCombine\u5408\u5E76\u4E24\u4E2A\u6CA1\u6709\u4F9D\u8D56\u5173\u7CFB\u7684CompletableFutures\u4EFB\u52A1</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> job1 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A010\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> job2 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E58\u4EE510\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5408\u5E76\u4E24\u4E2A\u7ED3\u679C </span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> job1<span class="token punctuation">.</span><span class="token function">thenCombine</span><span class="token punctuation">(</span>job2<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BiFunction</span>\\<span class="token operator">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">List</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">List</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> a<span class="token punctuation">,</span> <span class="token class-name">Integer</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">List</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> list<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5408\u5E76\u7ED3\u679C\u4E3A:&quot;</span> <span class="token operator">+</span> future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5408\u5E76\u591A\u4E2A\u4EFB\u52A1\u7684\u7ED3\u679CallOf\u4E0EanyOf allOf: \u4E00\u7CFB\u5217\u72EC\u7ACB\u7684future\u4EFB\u52A1\uFF0C\u7B49\u5176\u6240\u6709\u7684\u4EFB\u52A1\u6267\u884C\u5B8C\u540E\u505A\u4E00\u4E9B\u4E8B\u60C5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * \u5148\u5BF9\u4E00\u4E2A\u6570\u52A010,\u7136\u540E\u53D6\u5E73\u65B9 * @param args
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CompletableFuture</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> job1 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A010\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>job1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> job2 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E58\u4EE510\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>job2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> job3 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u51CF\u4EE510\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>job3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> job4 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u9664\u4EE510\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> num<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>job4<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u591A\u4EFB\u52A1\u5408\u5E76 </span>
        <span class="token class-name">List</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> collect <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token operator">::</span><span class="token function">join</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>collect<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>anyOf: \u53EA\u8981\u5728\u591A\u4E2Afuture\u91CC\u9762\u6709\u4E00\u4E2A\u8FD4\u56DE\uFF0C\u6574\u4E2A\u4EFB\u52A1\u5C31\u53EF\u4EE5\u7ED3\u675F\uFF0C\u800C\u4E0D\u9700\u8981\u7B49\u5230\u6BCF\u4E00\u4E2Afuture\u7ED3\u675F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * \u5148\u5BF9\u4E00\u4E2A\u6570\u52A010,\u7136\u540E\u53D6\u5E73\u65B9 * @param args
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7EBF\u7A0B\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> futures <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> job1 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A010\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                num <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> num<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        futures<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> job1<span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> job2 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E58\u4EE510\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                num <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> num<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        futures<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> job2<span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> job3 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u51CF\u4EE510\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                num <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> num<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        futures<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> job3<span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> job4 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u9664\u4EE510\u4EFB\u52A1\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                num <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> num<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        futures<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> job4<span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">anyOf</span><span class="token punctuation">(</span>futures<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u53CD\u5C04" tabindex="-1"><a class="header-anchor" href="#\u53CD\u5C04" aria-hidden="true">#</a> \u53CD\u5C04</h1><h2 id="\u83B7\u53D6\u7C7B\u7684\u5B57\u8282\u7801" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u7C7B\u7684\u5B57\u8282\u7801" aria-hidden="true">#</a> \u83B7\u53D6\u7C7B\u7684\u5B57\u8282\u7801</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">pers<span class="token punctuation">.</span>lxl<span class="token punctuation">.</span>mylearnproject<span class="token punctuation">.</span>javase<span class="token punctuation">.</span>reflection</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u4E0D\u77E5\u5BF9\u8C61\u60C5\u51B5\u8C03\u7528\u5BF9\u8C61\u65B9\u6CD5\u7B49\uFF0C\u901A\u8FC7Class\u5B9E\u4F8B\u83B7\u53D6class\u4FE1\u606F\u7684\u65B9\u6CD5\u79F0\u4E3A\u53CD\u5C04\uFF08Reflection\uFF09
 *
 * <span class="token keyword">@author</span> lxl
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReClass</span> <span class="token punctuation">{</span>


    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token doc-comment comment">/** 1.\u83B7\u53D6\u4E00\u4E2Aclass\u7684Class\u5B9E\u4F8B\u7684\u4E09\u4E2A\u65B9\u6CD5\uFF1A
 \u65B9\u6CD5\u4E00\uFF1Aclass\u7684\u9759\u6001\u53D8\u91CF.class\uFF1A
 Class cls = String.class;
 \u65B9\u6CD5\u4E8C\uFF1A\u5B9E\u4F8B\u53D8\u91CF.getClass()\uFF1A
 String s = &quot;Hello&quot;;
 Class cls1 = s.getClass();
 \u65B9\u6CD5\u4E09\uFF1A\u9759\u6001\u65B9\u6CD5Class.forName(class\u7684\u5B8C\u6574\u7C7B\u540D)\uFF1A
 \u53EA\u4F1A\u8BA9\u9759\u6001\u4EE3\u7801\u5757\u6267\u884C
 Class cls2 = Class.forName(&quot;java.lang.String&quot;);
 \u7528instanceof\u4E0D\u4F46\u5339\u914D\u6307\u5B9A\u7C7B\u578B\uFF0C\u8FD8\u5339\u914D\u6307\u5B9A\u7C7B\u578B\u7684\u5B50\u7C7B\u3002\u800C\u7528==\u5224\u65ADclass\u5B9E\u4F8B\u53EF\u4EE5\u7CBE\u786E\u5730\u5224\u65AD\u6570\u636E\u7C7B\u578B\uFF0C\u4F46\u4E0D\u80FD\u4F5C\u5B50\u7C7B\u578B\u6BD4\u8F83*/</span>
        <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span>Month</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        ReflectLearn reflectLearn=new ReflectLearn();</span>
        <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token class-name">ReflectLearn</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printClassInfo</span><span class="token punctuation">(</span><span class="token class-name">Class</span> cls<span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token comment">//            \u5148\u83B7\u53D6\u7C7B\u4E4B\u540E\u624D\u80FD\u83B7\u53D6\u7C7B\u4FE1\u606F</span>

<span class="token comment">//        \u83B7\u53D6\u7C7B\u4FE1\u606F</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;[&quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;]  begin ==================================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Class name: &quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Simple name: &quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cls<span class="token punctuation">.</span><span class="token function">getPackage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Package name: &quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">getPackage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;is interface: &quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;is enum: &quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">isEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;is array: &quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;is primitive: &quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">//        \u65B9\u6CD5\u4FE1\u606F</span>
<span class="token comment">//        .newInstance() \u65E0\u53C2\u6784\u9020\uFF0C\u4E0D\u5B58\u5728\u629B\u51FA\u5F02\u5E38java.lang.InstantiationException</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u65E0\u53C2\u6784\u9020\uFF1A   &quot;</span><span class="token operator">+</span>cls<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InstantiationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6CA1\u6709\u65E0\u53C2\u6784\u9020\u9020\u6210InstantiationException&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6CA1\u6709\u65E0\u53C2\u6784\u9020\u9020\u6210IllegalAccessException&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6240\u6709\u5B9E\u4F8B\u65B9\u6CD5\uFF1A   &quot;</span><span class="token operator">+</span>cls<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        System.out.println(&quot;\u6839\u636E\u540D\u5B57\u83B7\u53D6\u65B9\u6CD5\uFF1A   &quot;+ Arrays.toString(cls.getDeclaredMethods(&quot;methodShow&quot;)));</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6240\u6709\u6784\u9020\u65B9\u6CD5\uFF1A   &quot;</span><span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span><span class="token function">getDeclaredConstructors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token comment">//        \u5C5E\u6027\u4FE1\u606F</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;public Fields: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Fields public Name: &quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;All Fields: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>cls<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Get Fields By Name: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>cls<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;publicFiled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchFieldException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6CA1\u6709\u8FD9\u6837\u4E00\u4E2A\u5C5E\u6027\u62A5NoSuchFieldException&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;[&quot;</span> <span class="token operator">+</span> cls<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;]  end ==================================&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">ReflectLearn</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> publicFiled<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> privateFiled<span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">methodShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,133),Mn={id:"io",tabindex:"-1"},Rn=n("a",{class:"header-anchor",href:"#io","aria-hidden":"true"},"#",-1),Vn=s(),Kn={href:"https://www.processon.com/diagraming/622d9b0e0e3e7407da44cbd7",target:"_blank",rel:"noopener noreferrer"},Jn=s("IO"),zn=p(`<p><img src="http://qnimg.gisfsde.com/image-20220313171017053.png" alt="image-20220313171017053" loading="lazy"></p><h2 id="\u78C1\u76D8\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u78C1\u76D8\u64CD\u4F5C" aria-hidden="true">#</a> \u78C1\u76D8\u64CD\u4F5C</h2><h3 id="file\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#file\u5BF9\u8C61" aria-hidden="true">#</a> File\u5BF9\u8C61</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FilenameFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Path</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Paths</span></span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**\u78C1\u76D8\u64CD\u4F5C**/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileObject</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
<span class="token comment">//        \u5373\u4F7F\u4F20\u5165\u7684\u6587\u4EF6\u6216\u76EE\u5F55\u4E0D\u5B58\u5728\uFF0C\u4EE3\u7801\u4E5F\u4E0D\u4F1A\u51FA\u9519\uFF0C\u56E0\u4E3A\u6784\u9020\u4E00\u4E2AFile\u5BF9\u8C61\uFF0C\u5E76\u4E0D\u4F1A\u5BFC\u81F4\u4EFB\u4F55\u78C1\u76D8\u64CD\u4F5C,\u8C03\u7528\u65B9\u6CD5\u65F6\u624D\u4F1A\u78C1\u76D8\u64CD\u4F5C</span>
        <span class="token comment">//\u7EDD\u5BF9\u8DEF\u5F84\u662F\u4EE5\u6839\u76EE\u5F55\u5F00\u5934\u7684\u5B8C\u6574\u8DEF\u5F84Java\u5B57\u7B26\u4E32\u4E2D\u4EE5//\u4EE3\u8868/</span>
<span class="token comment">//        File\u8868\u793A\u6587\u4EF6\u6216\u76EE\u5F55</span>
        <span class="token comment">//\\u202A\u7CFB\u7EDF\u590D\u5236\u4EA7\u751F</span>
        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\Administrator\\\\Desktop\\\\lixianglun\\\\fileTest.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u76F8\u5BF9\u8DEF\u5F84\uFF08\u53EF\u4EE5\u7528.\u8868\u793A\u5F53\u524D\u76EE\u5F55\uFF0C..\u8868\u793A\u4E0A\u7EA7\u76EE\u5F55\uFF09\u7EDD\u5BF9\u8DEF\u5F84\u53BB\u6389\u5F53\u524D\u76EE\u5F55</span>
        <span class="token class-name">File</span> afile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;..\\\\fileTest.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">File</span> catalog<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\Administrator\\\\Desktop&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8FD4\u56DE\u6784\u9020\u65B9\u6CD5\u4F20\u5165\u7684\u8DEF\u5F84</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8FD4\u56DE\u7EDD\u5BF9\u8DEF\u5F84</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8FD4\u56DE\u7684\u662F\u89C4\u8303\u8DEF\u5F84\u3002</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>afile<span class="token punctuation">.</span><span class="token function">getCanonicalPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6839\u636E\u5F53\u524D\u5E73\u53F0\u6253\u5370&quot;\\&quot;\u6216&quot;/&quot;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5224\u65AD\u5F53\u524D\u6587\u4EF6\uFF0C\u76EE\u5F55\u662F\u5426\u5B58\u5728</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">canRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">canWrite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">canExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>afile<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//add\u3001delete</span>
<span class="token comment">//        if (file.createNewFile()) {</span>
<span class="token comment">//            // \u6587\u4EF6\u521B\u5EFA\u6210\u529F:</span>
<span class="token comment">//            // TOD O:TODO\u63D0\u4EA4\u4EE3\u7801\u4F1A\u63D0\u9192</span>
<span class="token comment">//            if (file.delete()) {</span>
<span class="token comment">//                // \u5220\u9664\u6587\u4EF6\u6210\u529F:</span>
<span class="token comment">//            }</span>
<span class="token comment">//        }</span>
<span class="token comment">//        \u9012\u5F52\u5217\u51FA\u76EE\u5F55\u4E0B\u7684\u6240\u6709\u6587\u4EF6</span>
<span class="token comment">//        public static void listAllFiles(File dir) {</span>
<span class="token comment">//    if (dir == null || !dir.exists()) {</span>
<span class="token comment">//        return;</span>
<span class="token comment">//    }</span>
<span class="token comment">//    if (dir.isFile()) {</span>
<span class="token comment">//        System.out.println(dir.getName());</span>
<span class="token comment">//        return;</span>
<span class="token comment">//    }</span>
<span class="token comment">//    for (File file : dir.listFiles()) {</span>
<span class="token comment">//        listAllFiles(file);</span>
<span class="token comment">//    }</span>
<span class="token comment">//}</span>
<span class="token comment">//\u6709\u4E9B\u65F6\u5019\uFF0C\u7A0B\u5E8F\u9700\u8981\u8BFB\u5199\u4E00\u4E9B\u4E34\u65F6\u6587\u4EF6\uFF0CFile\u5BF9\u8C61\u63D0\u4F9B\u4E86createTempFile()\u6765\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u6587\u4EF6\uFF0C\u4EE5\u53CAdeleteOnExit()\u5728JVM\u9000\u51FA\u65F6\u81EA\u52A8\u5220\u9664\u8BE5\u6587\u4EF6\u3002</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>catalog<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u76EE\u5F55\u4E0B\u7684\u6587\u4EF6\u548C\u5B50\u76EE\u5F55\u540D</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>catalog<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//listFiles()\u63D0\u4F9B\u4E86\u4E00\u7CFB\u5217\u91CD\u8F7D\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u8FC7\u6EE4\u4E0D\u60F3\u8981\u7684\u6587\u4EF6\u548C\u76EE\u5F55</span>
        <span class="token comment">// \u4EC5\u5217\u51FA.exe\u6587\u4EF6</span>
        <span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fs2 <span class="token operator">=</span> catalog<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FilenameFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">File</span> dir<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> name<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.exe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DEtrue\u8868\u793A\u63A5\u53D7\u8BE5\u6587\u4EF6</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printFiles</span><span class="token punctuation">(</span>fs2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**boolean mkdir()\uFF1A\u521B\u5EFA\u5F53\u524DFile\u5BF9\u8C61\u8868\u793A\u7684\u76EE\u5F55\uFF1B
    //boolean mkdirs()\uFF1A\u521B\u5EFA\u5F53\u524DFile\u5BF9\u8C61\u8868\u793A\u7684\u76EE\u5F55\uFF0C\u5E76\u5728\u5FC5\u8981\u65F6\u5C06\u4E0D\u5B58\u5728\u7684\u7236\u76EE\u5F55\u4E5F\u521B\u5EFA\u51FA\u6765\uFF1B
    //boolean delete()\uFF1A\u5220\u9664\u5F53\u524DFile\u5BF9\u8C61\u8868\u793A\u7684\u76EE\u5F55\uFF0C\u5F53\u524D\u76EE\u5F55\u5FC5\u987B\u4E3A\u7A7A\u624D\u80FD\u5220\u9664\u6210\u529F\u3002*/</span>
        <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printFiles</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;==========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>files <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">File</span> f <span class="token operator">:</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;==========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u6784\u9020\u4E00\u4E2APath\u5BF9\u8C61</span>
            <span class="token class-name">Path</span> p1 <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;project&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;study&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8F6C\u6362\u4E3A\u7EDD\u5BF9\u8DEF\u5F84</span>
            <span class="token class-name">Path</span> p2 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8F6C\u6362\u4E3A\u89C4\u8303\u8DEF\u5F84</span>
            <span class="token class-name">Path</span> p3 <span class="token operator">=</span> p2<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p3<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u8F6C\u6362\u4E3AFile\u5BF9\u8C61</span>
            <span class="token class-name">File</span> f <span class="token operator">=</span> p3<span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u53EF\u4EE5\u76F4\u63A5\u904D\u5386Path</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Path</span> p <span class="token operator">:</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;src/main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;  &quot;</span> <span class="token operator">+</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B57\u8282\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5B57\u8282\u64CD\u4F5C" aria-hidden="true">#</a> \u5B57\u8282\u64CD\u4F5C</h2><h3 id="inputstream" tabindex="-1"><a class="header-anchor" href="#inputstream" aria-hidden="true">#</a> InputStream</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**InputStream\u5E76\u4E0D\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u800C\u662F\u4E00\u4E2A\u62BD\u8C61\u7C7B\uFF0C\u5B83\u662F\u6240\u6709\u8F93\u5165\u6D41\u7684\u8D85\u7C7B\u3002\u8FD9\u4E2A\u62BD\u8C61\u7C7B\u5B9A\u4E49\u7684\u4E00\u4E2A\u6700\u91CD\u8981\u7684\u65B9\u6CD5\u5C31\u662Fint read()\uFF0C\u7B7E\u540D\u5982\u4E0B\uFF1A
public abstract int read() throws IOException;
\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u8BFB\u53D6\u8F93\u5165\u6D41\u7684\u4E0B\u4E00\u4E2A\u5B57\u8282\uFF0C\u5E76\u8FD4\u56DE\u5B57\u8282\u8868\u793A\u7684int\u503C\uFF080~255\uFF09\u3002\u5982\u679C\u5DF2\u8BFB\u5230\u672B\u5C3E\uFF0C\u8FD4\u56DE-1\u8868\u793A\u4E0D\u80FD\u7EE7\u7EED\u8BFB\u53D6\u4E86\u3002
 * <span class="token keyword">@author</span> lxl*/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InputStreamL</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//inputStream\u5B57\u8282\u8F93\u5165\u6D41\uFF0C\u62BD\u8C61\u7C7B\uFF0C\u53EA\u63D0\u4F9B\u65B9\u6CD5\u58F0\u660E\uFF0C\u4E0D\u63D0\u4F9B\u5177\u4F53\u5B9E\u73B0</span>
        <span class="token comment">// \u521B\u5EFA\u4E00\u4E2AFileInputStream\u5BF9\u8C61:</span>
        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;fileTest.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u6B7B\u5FAA\u73AF\uFF0C\u6BD4while\uFF08true\uFF09\u66F4\u597D\uFF0C\u56E0\u4E3A\u7F16\u8BD1\u540E\u6307\u4EE4\u66F4\u5C11\uFF0C\u800C\u4E14\u6CA1\u6709\u5224\u65AD\u8DF3\u8F6C\uFF0C\u66F4\u52A0\u7B80\u6D01</span>
            <span class="token comment">// \u53CD\u590D\u8C03\u7528read()\u65B9\u6CD5\uFF0C\u76F4\u5230\u8FD4\u56DE-1</span>
            <span class="token keyword">int</span> n <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u6253\u5370byte\u7684\u503C</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5173\u95ED\u6D41\u91CA\u653E\u5BF9\u5E94\u7684\u5E95\u5C42\u8D44\u6E90\uFF0C\u4FBF\u8BA9\u64CD\u4F5C\u7CFB\u7EDF\u628A\u8D44\u6E90\u91CA\u653E\u6389\uFF0C\u5426\u5219\uFF0C\u5E94\u7528\u7A0B\u5E8F\u5360\u7528\u7684\u8D44\u6E90\u4F1A\u8D8A\u6765\u8D8A\u591A\uFF0C\u4E0D\u4F46\u767D\u767D\u5360\u7528\u5185\u5B58\uFF0C\u8FD8\u4F1A\u5F71\u54CD\u5176\u4ED6\u5E94\u7528\u7A0B\u5E8F\u7684\u8FD0\u884C\u3002</span>
<span class="token comment">//        \u5229\u7528\u7F13\u51B2\u533A\u4E00\u6B21\u8BFB\u53D6\u591A\u4E2A\u5B57\u8282</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;fileTest.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5B9A\u4E491000\u4E2A\u5B57\u8282\u5927\u5C0F\u7684\u7F13\u51B2\u533A:</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> n<span class="token punctuation">;</span>
            <span class="token comment">// \u8BFB\u53D6\u5230\u7F13\u51B2\u533A,read()\u65B9\u6CD5\u662F\u963B\u585E\u7684\uFF08Blocking\uFF09\uFF0C\u5FC5\u987B\u7B49\u5F85read()\u65B9\u6CD5\u8FD4\u56DE\u624D\u80FD\u6267\u884C\u4E0B\u4E00\u884C\u4EE3\u7801</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;read &quot;</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">&quot; bytes.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u51C6\u5907\u6587\u4EF6lol.txt\u5176\u4E2D\u7684\u5185\u5BB9\u662FAB\uFF0C\u5BF9\u5E94\u7684ASCII\u5206\u522B\u662F65 66</span>
            <span class="token class-name">File</span> f <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;fileTest.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u521B\u5EFA\u57FA\u4E8E\u6587\u4EF6\u7684\u8F93\u5165\u6D41</span>
            <span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u521B\u5EFA\u5B57\u8282\u6570\u7EC4\uFF0C\u5176\u957F\u5EA6\u5C31\u662F\u6587\u4EF6\u7684\u957F\u5EA6</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> all <span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> f<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">//\u4EE5\u5B57\u8282\u6D41\u7684\u5F62\u5F0F\u8BFB\u53D6\u6587\u4EF6\u6240\u6709\u5185\u5BB9</span>
            fis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>all<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">byte</span> b <span class="token operator">:</span> all<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u6253\u5370\u51FA\u6765\u662F65 66</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">//\u6BCF\u6B21\u4F7F\u7528\u5B8C\u6D41\uFF0C\u90FD\u5E94\u8BE5\u8FDB\u884C\u5173\u95ED</span>
            fis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// TODO Auto-generated catch block</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/*\u88C5\u9970\u8005\u6A21\u5F0F
Java I/O \u4F7F\u7528\u4E86\u88C5\u9970\u8005\u6A21\u5F0F\u6765\u5B9E\u73B0\u3002\u4EE5 InputStream \u4E3A\u4F8B\uFF0C

InputStream \u662F\u62BD\u8C61\u7EC4\u4EF6\uFF1B
FileInputStream \u662F InputStream \u7684\u5B50\u7C7B\uFF0C\u5C5E\u4E8E\u5177\u4F53\u7EC4\u4EF6\uFF0C\u63D0\u4F9B\u4E86\u5B57\u8282\u6D41\u7684\u8F93\u5165\u64CD\u4F5C\uFF1B
FilterInputStream \u5C5E\u4E8E\u62BD\u8C61\u88C5\u9970\u8005\uFF0C\u88C5\u9970\u8005\u7528\u4E8E\u88C5\u9970\u7EC4\u4EF6\uFF0C\u4E3A\u7EC4\u4EF6\u63D0\u4F9B\u989D\u5916\u7684\u529F\u80FD\u3002\u4F8B\u5982 BufferedInputStream \u4E3A FileInputStream \u63D0\u4F9B\u7F13\u5B58\u7684\u529F\u80FD\u3002

\u5B9E\u4F8B\u5316\u4E00\u4E2A\u5177\u6709\u7F13\u5B58\u529F\u80FD\u7684\u5B57\u8282\u6D41\u5BF9\u8C61\u65F6\uFF0C\u53EA\u9700\u8981\u5728 FileInputStream \u5BF9\u8C61\u4E0A\u518D\u5957\u4E00\u5C42 BufferedInputStream \u5BF9\u8C61\u5373\u53EF\u3002

FileInputStream fileInputStream = new FileInputStream(filePath);
BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream);

DataInputStream \u88C5\u9970\u8005\u63D0\u4F9B\u4E86\u5BF9\u66F4\u591A\u6570\u636E\u7C7B\u578B\u8FDB\u884C\u8F93\u5165\u7684\u64CD\u4F5C\uFF0C\u6BD4\u5982 int\u3001double \u7B49\u57FA\u672C\u7C7B\u578B\u3002*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="outputstream" tabindex="-1"><a class="header-anchor" href="#outputstream" aria-hidden="true">#</a> OutputStream</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**\u4E3A\u4EC0\u4E48\u8981\u6709flush()\uFF1F\u56E0\u4E3A\u5411\u78C1\u76D8\u3001\u7F51\u7EDC\u5199\u5165\u6570\u636E\u7684\u65F6\u5019\uFF0C\u51FA\u4E8E\u6548\u7387\u7684\u8003\u8651\uFF0C
\u64CD\u4F5C\u7CFB\u7EDF\u5E76\u4E0D\u662F\u8F93\u51FA\u4E00\u4E2A\u5B57\u8282\u5C31\u7ACB\u523B\u5199\u5165\u5230\u6587\u4EF6\u6216\u8005\u53D1\u9001\u5230\u7F51\u7EDC\uFF0C
\u800C\u662F\u628A\u8F93\u51FA\u7684\u5B57\u8282\u5148\u653E\u5230\u5185\u5B58\u7684\u4E00\u4E2A\u7F13\u51B2\u533A\u91CC\uFF08\u672C\u8D28\u4E0A\u5C31\u662F\u4E00\u4E2Abyte[]\u6570\u7EC4\uFF09\uFF0C
\u7B49\u5230\u7F13\u51B2\u533A\u5199\u6EE1\u4E86\uFF0C\u518D\u4E00\u6B21\u6027\u5199\u5165\u6587\u4EF6\u6216\u8005\u7F51\u7EDC\u3002\u5BF9\u4E8E\u5F88\u591AIO\u8BBE\u5907\u6765\u8BF4\uFF0C
\u4E00\u6B21\u5199\u4E00\u4E2A\u5B57\u8282\u548C\u4E00\u6B21\u51991000\u4E2A\u5B57\u8282\uFF0C\u82B1\u8D39\u7684\u65F6\u95F4\u51E0\u4E4E\u662F\u5B8C\u5168\u4E00\u6837\u7684\uFF0C
\u6240\u4EE5OutputStream\u6709\u4E2Aflush()\u65B9\u6CD5\uFF0C\u80FD\u5F3A\u5236\u628A\u7F13\u51B2\u533A\u5185\u5BB9\u8F93\u51FA\u3002
\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u4E0D\u9700\u8981\u8C03\u7528\u8FD9\u4E2Aflush()\u65B9\u6CD5\uFF0C\u56E0\u4E3A\u7F13\u51B2\u533A\u5199\u6EE1\u4E86OutputStream\u4F1A\u81EA\u52A8\u8C03\u7528\u5B83
\u5E76\u4E14\uFF0C\u5728\u8C03\u7528close()\u65B9\u6CD5\u5173\u95EDOutputStream\u4E4B\u524D\uFF0C\u4E5F\u4F1A\u81EA\u52A8\u8C03\u7528flush()\u65B9\u6CD5\u3002
\u7279\u522B\u60C5\u51B5\uFF0C\u7F13\u51B2\u533A\u8FC7\u5927\uFF0C\u9700\u9A6C\u4E0A\u53D1\u9001\u7684\u65F6\u5019\u624B\u52A8flush
 * <span class="token keyword">@author</span> lxl*/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OutputStreamL</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**\u5B9E\u73B0\u6587\u4EF6\u590D\u5236*/</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">copyFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> src<span class="token punctuation">,</span> <span class="token class-name">String</span> dist<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileInputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>dist<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">20</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> cnt<span class="token punctuation">;</span>

        <span class="token comment">// read() \u6700\u591A\u8BFB\u53D6 buffer.length \u4E2A\u5B57\u8282</span>
        <span class="token comment">// \u8FD4\u56DE\u7684\u662F\u5B9E\u9645\u8BFB\u53D6\u7684\u4E2A\u6570</span>
        <span class="token comment">// \u8FD4\u56DE -1 \u7684\u65F6\u5019\u8868\u793A\u8BFB\u5230 eof\uFF0C\u5373\u6587\u4EF6\u5C3E</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>cnt <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u6587\u4EF6\u5B58\u5728\u5219\u8986\u76D6\uFF0C\u4E0D\u5B58\u5728\u521B\u5EFA</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;F:\\\\PROJECT\\\\IDEA\\\\mylearnproject\\\\src\\\\main\\\\resources\\\\fileTest.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token comment">// H</span>
        output<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">72</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// e</span>
        output<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// l</span>
        output<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">108</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// l</span>
        output<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">108</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// o</span>
        output<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        output.write(111); // o</span>
        <span class="token comment">// \u4E00\u6B21\u6027\u5199\u5165\u82E5\u5E72\u5B57\u8282</span>
        output<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;Hello\u74E6\u8FBE\u65E0\u591A&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// }</span>
        output<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//try\u4E4B\u540E\u7F16\u8BD1\u5668\u5728\u6B64\u81EA\u52A8\u4E3A\u6211\u4EEC\u5199\u5165finally\u5E76\u8C03\u7528close()</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B57\u7B26\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u64CD\u4F5C" aria-hidden="true">#</a> \u5B57\u7B26\u64CD\u4F5C</h2><ul><li><p>Reader</p><ul><li><p>InputStream\u662F\u4E00\u4E2A\u5B57\u8282\u6D41\uFF0C\u5373\u4EE5byte\u4E3A\u5355\u4F4D\u8BFB\u53D6\uFF0C\u800CReader\u662F\u4E00\u4E2A\u5B57\u7B26\u6D41\uFF0C\u5373\u4EE5char\u4E3A\u5355\u4F4D\u8BFB\u53D6</p></li><li><p>InputStream Reader \u5B57\u8282\u6D41\uFF0C\u4EE5byte\u4E3A\u5355\u4F4D \u5B57\u7B26\u6D41\uFF0C\u4EE5char\u4E3A\u5355\u4F4D \u8BFB\u53D6\u5B57\u8282\uFF08-1\uFF0C0~255\uFF09\uFF1Aint read() \u8BFB\u53D6\u5B57\u7B26\uFF08-1\uFF0C0~65535\uFF09\uFF1Aint read() \u8BFB\u5230\u5B57\u8282\u6570\u7EC4\uFF1Aint read(byte[] b) \u8BFB\u5230\u5B57\u7B26\u6570\u7EC4\uFF1Aint read(char[] c)</p></li><li><p>java.io.Reader\u662F\u6240\u6709\u5B57\u7B26\u8F93\u5165\u6D41\u7684\u8D85\u7C7B\uFF0C\u5B83\u6700\u4E3B\u8981\u7684\u65B9\u6CD5\u662F\uFF1A public int read() throws IOException; \u8FD9\u4E2A\u65B9\u6CD5\u8BFB\u53D6\u5B57\u7B26\u6D41\u7684\u4E0B\u4E00\u4E2A\u5B57\u7B26\uFF0C\u5E76\u8FD4\u56DE\u5B57\u7B26\u8868\u793A\u7684int\uFF0C\u8303\u56F4\u662F0~65535\u3002\u5982\u679C\u5DF2\u8BFB\u5230\u672B\u5C3E\uFF0C\u8FD4\u56DE-1\u3002</p></li><li><p>FileReader\u6253\u5F00\u6587\u4EF6\u5E76\u83B7\u53D6Reader</p><ul><li>// \u521B\u5EFA\u4E00\u4E2AFileReader\u5BF9\u8C61: Reader reader = new FileReader(&quot;src/readme.txt&quot;); // \u5B57\u7B26\u7F16\u7801\u662F??? for (;\u{1F609} { int n = reader.read(); // \u53CD\u590D\u8C03\u7528read()\u65B9\u6CD5\uFF0C\u76F4\u5230\u8FD4\u56DE-1 if (n == -1) { break; } System.out.println((char)n); // \u6253\u5370char } reader.close(); // \u5173\u95ED\u6D41</li></ul></li><li><p>\u907F\u514D\u4E71\u7801\u95EE\u9898\uFF0C\u6211\u4EEC\u9700\u8981\u5728\u521B\u5EFAFileReader\u65F6\u6307\u5B9A\u7F16\u7801\uFF1A</p></li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token class-name">Reader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token string">&quot;src/readme.txt&quot;</span><span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span>UTF_8<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token operator">-</span> <span class="token keyword">try</span> <span class="token punctuation">(</span>resource<span class="token punctuation">)</span>\u6765\u4FDD\u8BC1<span class="token class-name">Reader</span>\u5728\u65E0\u8BBA\u6709\u6CA1\u6709IO\u9519\u8BEF\u7684\u65F6\u5019\u90FD\u80FD\u591F\u6B63\u786E\u5730\u5173\u95ED
	<span class="token operator">-</span> <span class="token class-name">Reader</span>\u8FD8\u63D0\u4F9B\u4E86\u4E00\u6B21\u6027\u8BFB\u53D6\u82E5\u5E72\u5B57\u7B26\u5E76\u586B\u5145\u5230<span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\u6570\u7EC4\u7684\u65B9\u6CD5\uFF1A

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> c<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span>
\u5B83\u8FD4\u56DE\u5B9E\u9645\u8BFB\u5165\u7684\u5B57\u7B26\u4E2A\u6570\uFF0C\u6700\u5927\u4E0D\u8D85\u8FC7<span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\u6570\u7EC4\u7684\u957F\u5EA6\u3002\u8FD4\u56DE<span class="token operator">-</span><span class="token number">1</span>\u8868\u793A\u6D41\u7ED3\u675F\u3002
	<span class="token operator">-</span> <span class="token class-name">CharArrayReader</span>\u628A\u4E00\u4E2A<span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\u6570\u7EC4\u53D8\u6210\u4E00\u4E2A<span class="token class-name">Reader</span>
	<span class="token operator">-</span> <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Reader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CharArrayReader</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token operator">-</span> <span class="token class-name">StringReader</span>
<span class="token operator">-</span> <span class="token class-name">InputStreamReader</span>

	<span class="token operator">-</span> \u9664\u4E86\u7279\u6B8A\u7684<span class="token class-name">CharArrayReader</span>\u548C<span class="token class-name">StringReader</span>\uFF0C\u666E\u901A\u7684<span class="token class-name">Reader</span>\u5B9E\u9645\u4E0A\u662F\u57FA\u4E8E<span class="token class-name">InputStream</span>\u6784\u9020\u7684\uFF0C\u56E0\u4E3A<span class="token class-name">Reader</span>\u9700\u8981\u4ECE<span class="token class-name">InputStream</span>\u4E2D\u8BFB\u5165\u5B57\u8282\u6D41\uFF08<span class="token keyword">byte</span>\uFF09\uFF0C\u7136\u540E\uFF0C\u6839\u636E\u7F16\u7801\u8BBE\u7F6E\uFF0C\u518D\u8F6C\u6362\u4E3A<span class="token keyword">char</span>\u5C31\u53EF\u4EE5\u5B9E\u73B0\u5B57\u7B26\u6D41\u3002\u5982\u679C\u6211\u4EEC\u67E5\u770B<span class="token class-name">FileReader</span>\u7684\u6E90\u7801\uFF0C\u5B83\u5728\u5185\u90E8\u5B9E\u9645\u4E0A\u6301\u6709\u4E00\u4E2A<span class="token class-name">FileInputStream</span>\u3002
	\u65E2\u7136<span class="token class-name">Reader</span>\u672C\u8D28\u4E0A\u662F\u4E00\u4E2A\u57FA\u4E8E<span class="token class-name">InputStream</span>\u7684<span class="token keyword">byte</span>\u5230<span class="token keyword">char</span>\u7684\u8F6C\u6362\u5668\uFF0C\u90A3\u4E48\uFF0C\u5982\u679C\u6211\u4EEC\u5DF2\u7ECF\u6709\u4E00\u4E2A<span class="token class-name">InputStream</span>\uFF0C\u60F3\u628A\u5B83\u8F6C\u6362\u4E3A<span class="token class-name">Reader</span>\uFF0C\u662F\u5B8C\u5168\u53EF\u884C\u7684\u3002<span class="token class-name">InputStreamReader</span>\u5C31\u662F\u8FD9\u6837\u4E00\u4E2A\u8F6C\u6362\u5668\uFF0C\u5B83\u53EF\u4EE5\u628A\u4EFB\u4F55<span class="token class-name">InputStream</span>\u8F6C\u6362\u4E3A<span class="token class-name">Reader</span>\u3002
		<span class="token operator">-</span> <span class="token comment">// \u6301\u6709InputStream:</span>
		<span class="token class-name">InputStream</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;src/readme.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u53D8\u6362\u4E3AReader:</span>
<span class="token class-name">Reader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token operator">-</span> <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Reader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;src/readme.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// TODO:</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Writer</p><ul><li>Writer\u5C31\u662F\u5E26\u7F16\u7801\u8F6C\u6362\u5668\u7684OutputStream\uFF0C\u5B83\u628Achar\u8F6C\u6362\u4E3Abyte\u5E76\u8F93\u51FA</li><li>OutputStream Writer \u5B57\u8282\u6D41\uFF0C\u4EE5byte\u4E3A\u5355\u4F4D \u5B57\u7B26\u6D41\uFF0C\u4EE5char\u4E3A\u5355\u4F4D \u5199\u5165\u5B57\u8282\uFF080~255\uFF09\uFF1Avoid write(int b) \u5199\u5165\u5B57\u7B26\uFF080~65535\uFF09\uFF1Avoid write(int c) \u5199\u5165\u5B57\u8282\u6570\u7EC4\uFF1Avoid write(byte[] b) \u5199\u5165\u5B57\u7B26\u6570\u7EC4\uFF1Avoid write(char[] c) \u65E0\u5BF9\u5E94\u65B9\u6CD5 \u5199\u5165String\uFF1Avoid write(String s)</li><li>Writer\u662F\u6240\u6709\u5B57\u7B26\u8F93\u51FA\u6D41\u7684\u8D85\u7C7B\uFF0C\u5B83\u63D0\u4F9B\u7684\u65B9\u6CD5\u4E3B\u8981\u6709\uFF1A</li></ul></li></ul><p>\u5199\u5165\u4E00\u4E2A\u5B57\u7B26\uFF080~65535\uFF09\uFF1Avoid write(int c)\uFF1B \u5199\u5165\u5B57\u7B26\u6570\u7EC4\u7684\u6240\u6709\u5B57\u7B26\uFF1Avoid write(char[] c)\uFF1B \u5199\u5165String\u8868\u793A\u7684\u6240\u6709\u5B57\u7B26\uFF1Avoid write(String s)\u3002 - FileWriter</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>	- try (Writer writer = new FileWriter(&quot;readme.txt&quot;, StandardCharsets.UTF_8)) {
writer.write(&#39;H&#39;); // \u5199\u5165\u5355\u4E2A\u5B57\u7B26
writer.write(&quot;Hello&quot;.toCharArray()); // \u5199\u5165char[]
writer.write(&quot;Hello&quot;); // \u5199\u5165String
}
- CharArrayWriter
- StringWriter
- OutputStreamWriter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>String \u7684\u7F16\u7801\u65B9\u5F0F</p><ul><li>String \u53EF\u4EE5\u770B\u6210\u4E00\u4E2A\u5B57\u7B26\u5E8F\u5217\uFF0C\u53EF\u4EE5\u6307\u5B9A\u4E00\u4E2A\u7F16\u7801\u65B9\u5F0F\u5C06\u5B83\u7F16\u7801\u4E3A\u5B57\u8282\u5E8F\u5217\uFF0C\u4E5F\u53EF\u4EE5\u6307\u5B9A\u4E00\u4E2A\u7F16\u7801\u65B9\u5F0F\u5C06\u4E00\u4E2A\u5B57\u8282\u5E8F\u5217\u89E3\u7801\u4E3A String\u3002</li></ul></li></ul><p>String str1 = &quot;\u4E2D\u6587&quot;; d byte[] bytes = str1.getBytes(&quot;UTF-8&quot;); String str2 = new String(bytes, &quot;UTF-8&quot;); System.out.println(str2); \u5728\u8C03\u7528\u65E0\u53C2\u6570 getBytes() \u65B9\u6CD5\u65F6\uFF0C\u9ED8\u8BA4\u7684\u7F16\u7801\u65B9\u5F0F\u4E0D\u662F UTF-16be\u3002\u53CC\u5B57\u8282\u7F16\u7801\u7684\u597D\u5904\u662F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A char \u5B58\u50A8\u4E2D\u6587\u548C\u82F1\u6587\uFF0C\u800C\u5C06 String \u8F6C\u4E3A bytes[] \u5B57\u8282\u6570\u7EC4\u5C31\u4E0D\u518D\u9700\u8981\u8FD9\u4E2A\u597D\u5904\uFF0C\u56E0\u6B64\u4E5F\u5C31\u4E0D\u518D\u9700\u8981\u53CC\u5B57\u8282\u7F16\u7801\u3002getBytes() \u7684\u9ED8\u8BA4\u7F16\u7801\u65B9\u5F0F\u4E0E\u5E73\u53F0\u6709\u5173\uFF0C\u4E00\u822C\u4E3A UTF-8\u3002</p><p>byte[] bytes = str1.getBytes();</p><h2 id="\u5BF9\u8C61\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u64CD\u4F5C" aria-hidden="true">#</a> \u5BF9\u8C61\u64CD\u4F5C</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- \u5E8F\u5217\u5316\u662F\u6307\u628A\u4E00\u4E2AJava\u5BF9\u8C61\u53D8\u6210\u4E8C\u8FDB\u5236\u5185\u5BB9\uFF0C\u672C\u8D28\u4E0A\u5C31\u662F\u4E00\u4E2Abyte[]\u6570\u7EC4,\u5E8F\u5217\u5316\u540E\u53EF\u4EE5\u628Abyte[]\u4FDD\u5B58\u5230\u6587\u4EF6\u4E2D\uFF0C\u6216\u8005\u628Abyte[]\u901A\u8FC7\u7F51\u7EDC\u4F20\u8F93\u5230\u8FDC\u7A0B\uFF0C\u8FD9\u6837\uFF0C\u5C31\u76F8\u5F53\u4E8E\u628AJava\u5BF9\u8C61\u5B58\u50A8\u5230\u6587\u4EF6\u6216\u8005\u901A\u8FC7\u7F51\u7EDC\u4F20\u8F93\u51FA\u53BB\u4E86

  - \u4E00\u4E2AJava\u5BF9\u8C61\u8981\u80FD\u5E8F\u5217\u5316\uFF0C\u5FC5\u987B\u5B9E\u73B0\u4E00\u4E2A\u7279\u6B8A\u7684java.io.Serializable\u63A5\u53E3
  - \u628A\u4E00\u4E2AJava\u5BF9\u8C61\u53D8\u4E3Abyte[]\u6570\u7EC4\uFF0C\u9700\u8981\u4F7F\u7528ObjectOutputStream\u3002\u5B83\u8D1F\u8D23\u628A\u4E00\u4E2AJava\u5BF9\u8C61\u5199\u5165\u4E00\u4E2A\u5B57\u8282\u6D41
  - public class Main {
    public static void main(String[] args) throws IOException {
      ByteArrayOutputStream buffer = new ByteArrayOutputStream();
      try (ObjectOutputStream output = new ObjectOutputStream(buffer)) {
          // \u5199\u5165int:
          output.writeInt(12345);
          // \u5199\u5165String:
          output.writeUTF(&quot;Hello&quot;);
          // \u5199\u5165Object:
          output.writeObject(Double.valueOf(123.456));
      }
      System.out.println(Arrays.toString(buffer.toByteArray()));
    }
    }

- \u53CD\u5E8F\u5217\u5316\uFF0C\u5373\u628A\u4E00\u4E2A\u4E8C\u8FDB\u5236\u5185\u5BB9\uFF08\u4E5F\u5C31\u662Fbyte[]\u6570\u7EC4\uFF09\u53D8\u56DEJava\u5BF9\u8C61\u3002\u6709\u4E86\u53CD\u5E8F\u5217\u5316\uFF0C\u4FDD\u5B58\u5230\u6587\u4EF6\u4E2D\u7684byte[]\u6570\u7EC4\u53C8\u53EF\u4EE5\u201C\u53D8\u56DE\u201DJava\u5BF9\u8C61\uFF0C\u6216\u8005\u4ECE\u7F51\u7EDC\u4E0A\u8BFB\u53D6byte[]\u5E76\u628A\u5B83\u201C\u53D8\u56DE\u201DJava\u5BF9\u8C61\u3002

  - ObjectInputStream\u8D1F\u8D23\u4ECE\u4E00\u4E2A\u5B57\u8282\u6D41\u8BFB\u53D6Java\u5BF9\u8C61
  - try (ObjectInputStream input = new ObjectInputStream(...)) {
    int n = input.readInt();
    String s = input.readUTF();
    Double d = (Double) input.readObject();
    }

    - readObject()\u53EF\u80FD\u629B\u51FA\u7684\u5F02\u5E38\u6709\uFF1A

ClassNotFoundException\uFF1A\u6CA1\u6709\u627E\u5230\u5BF9\u5E94\u7684Class\uFF1B
InvalidClassException\uFF1AClass\u4E0D\u5339\u914D\u3002
- \u5B89\u5168\u6027

	- Java\u7684\u5E8F\u5217\u5316\u673A\u5236\u4EC5\u9002\u7528\u4E8EJava\uFF0C\u5982\u679C\u9700\u8981\u4E0E\u5176\u5B83\u8BED\u8A00\u4EA4\u6362\u6570\u636E\uFF0C\u5FC5\u987B\u4F7F\u7528\u901A\u7528\u7684\u5E8F\u5217\u5316\u65B9\u6CD5\uFF0C\u4F8B\u5982JSON\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7F51\u7EDC\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7F51\u7EDC\u64CD\u4F5C" aria-hidden="true">#</a> \u7F51\u7EDC\u64CD\u4F5C</h2><h2 id="nio" tabindex="-1"><a class="header-anchor" href="#nio" aria-hidden="true">#</a> NIO</h2><h3 id="\u6D41\u4E0E\u5757" tabindex="-1"><a class="header-anchor" href="#\u6D41\u4E0E\u5757" aria-hidden="true">#</a> \u6D41\u4E0E\u5757</h3><ul><li>I/O \u4E0E NIO \u6700\u91CD\u8981\u7684<strong>\u533A\u522B</strong>\u662F\u6570\u636E\u6253\u5305\u548C\u4F20\u8F93\u7684\u65B9\u5F0F\uFF0CI/O \u4EE5<strong>\u6D41</strong>\u7684\u65B9\u5F0F\u5904\u7406\u6570\u636E\uFF0C\u800C NIO \u4EE5<strong>\u5757</strong>\u7684\u65B9\u5F0F\u5904\u7406\u6570\u636E\u3002</li></ul><p>\u9762\u5411\u6D41\u7684 I/O \u4E00\u6B21\u5904\u7406\u4E00\u4E2A\u5B57\u8282\u6570\u636E\uFF1A\u4E00\u4E2A\u8F93\u5165\u6D41\u4EA7\u751F\u4E00\u4E2A\u5B57\u8282\u6570\u636E\uFF0C\u4E00\u4E2A\u8F93\u51FA\u6D41\u6D88\u8D39\u4E00\u4E2A\u5B57\u8282\u6570\u636E\u3002\u4E3A\u6D41\u5F0F\u6570\u636E\u521B\u5EFA\u8FC7\u6EE4\u5668\u975E\u5E38\u5BB9\u6613\uFF0C\u94FE\u63A5\u51E0\u4E2A\u8FC7\u6EE4\u5668\uFF0C\u4EE5\u4FBF\u6BCF\u4E2A\u8FC7\u6EE4\u5668\u53EA\u8D1F\u8D23\u590D\u6742\u5904\u7406\u673A\u5236\u7684\u4E00\u90E8\u5206\u3002\u4E0D\u5229\u7684\u4E00\u9762\u662F\uFF0C\u9762\u5411\u6D41\u7684 I/O \u901A\u5E38\u76F8\u5F53\u6162\u3002</p><p>\u9762\u5411\u5757\u7684 I/O \u4E00\u6B21\u5904\u7406\u4E00\u4E2A\u6570\u636E\u5757\uFF0C\u6309\u5757\u5904\u7406\u6570\u636E\u6BD4\u6309\u6D41\u5904\u7406\u6570\u636E\u8981\u5FEB\u5F97\u591A\u3002\u4F46\u662F\u9762\u5411\u5757\u7684 I/O \u7F3A\u5C11\u4E00\u4E9B\u9762\u5411\u6D41\u7684 I/O \u6240\u5177\u6709\u7684\u4F18\u96C5\u6027\u548C\u7B80\u5355\u6027\u3002</p>`,26),Hn=s("I/O \u5305\u548C NIO \u5DF2\u7ECF\u5F88\u597D\u5730\u96C6\u6210\u4E86\uFF0C"),Un={href:"http://java.io",target:"_blank",rel:"noopener noreferrer"},Qn=s("java.io"),Wn=s(".* \u5DF2\u7ECF\u4EE5 NIO \u4E3A\u57FA\u7840\u91CD\u65B0\u5B9E\u73B0\u4E86\uFF0C\u6240\u4EE5\u73B0\u5728\u5B83\u53EF\u4EE5\u5229\u7528 NIO \u7684\u4E00\u4E9B\u7279\u6027\u3002\u4F8B\u5982\uFF0C"),Xn={href:"http://java.io",target:"_blank",rel:"noopener noreferrer"},Yn=s("java.io"),Gn=s(".* \u5305\u4E2D\u7684\u4E00\u4E9B\u7C7B\u5305\u542B\u4EE5\u5757\u7684\u5F62\u5F0F\u8BFB\u5199\u6570\u636E\u7684\u65B9\u6CD5\uFF0C\u8FD9\u4F7F\u5F97\u5373\u4F7F\u5728\u9762\u5411\u6D41\u7684\u7CFB\u7EDF\u4E2D\uFF0C\u5904\u7406\u901F\u5EA6\u4E5F\u4F1A\u66F4\u5FEB\u3002"),Zn=p(`<h3 id="\u901A\u9053\u4E0E\u7F13\u51B2\u533A" tabindex="-1"><a class="header-anchor" href="#\u901A\u9053\u4E0E\u7F13\u51B2\u533A" aria-hidden="true">#</a> \u901A\u9053\u4E0E\u7F13\u51B2\u533A</h3><h4 id="\u901A\u9053" tabindex="-1"><a class="header-anchor" href="#\u901A\u9053" aria-hidden="true">#</a> \u901A\u9053</h4><p>\u901A\u9053 Channel \u662F\u5BF9\u539F I/O \u5305\u4E2D\u7684\u6D41\u7684\u6A21\u62DF\uFF0C\u53EF\u4EE5\u901A\u8FC7\u5B83\u8BFB\u53D6\u548C\u5199\u5165\u6570\u636E\u3002</p><p>\u901A\u9053\u4E0E\u6D41\u7684\u4E0D\u540C\u4E4B\u5904\u5728\u4E8E\uFF0C\u6D41\u53EA\u80FD\u5728\u4E00\u4E2A\u65B9\u5411\u4E0A\u79FB\u52A8(\u4E00\u4E2A\u6D41\u5FC5\u987B\u662F InputStream \u6216\u8005 OutputStream \u7684\u5B50\u7C7B)\uFF0C\u800C\u901A\u9053\u662F\u53CC\u5411\u7684\uFF0C\u53EF\u4EE5\u7528\u4E8E\u8BFB\u3001\u5199\u6216\u8005\u540C\u65F6\u7528\u4E8E\u8BFB\u5199\u3002</p><p>\u901A\u9053\u5305\u62EC\u4EE5\u4E0B\u7C7B\u578B\uFF1A FileChannel\uFF1A\u4ECE\u6587\u4EF6\u4E2D\u8BFB\u5199\u6570\u636E\uFF1B DatagramChannel\uFF1A\u901A\u8FC7 UDP \u8BFB\u5199\u7F51\u7EDC\u4E2D\u6570\u636E\uFF1B SocketChannel\uFF1A\u901A\u8FC7 TCP \u8BFB\u5199\u7F51\u7EDC\u4E2D\u6570\u636E\uFF1B ServerSocketChannel\uFF1A\u53EF\u4EE5\u76D1\u542C\u65B0\u8FDB\u6765\u7684 TCP \u8FDE\u63A5\uFF0C\u5BF9\u6BCF\u4E00\u4E2A\u65B0\u8FDB\u6765\u7684\u8FDE\u63A5\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A SocketChannel,\u672C\u8EAB\u5E76\u4E0D\u4F20\u6570\u636E\u3002</p><h5 id="filechannel" tabindex="-1"><a class="header-anchor" href="#filechannel" aria-hidden="true">#</a> FileChannel</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">pers<span class="token punctuation">.</span>lxl<span class="token punctuation">.</span>mylearnproject<span class="token punctuation">.</span>javase<span class="token punctuation">.</span>io<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channel</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">RandomAccessFile</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">FileChannel</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileChannelDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BFB</span>
<span class="token comment">//        \u9700\u8981\u901A\u8FC7\u4F7F\u7528\u4E00\u4E2AInputStream\u3001OutputStream\u6216RandomAccessFile\u6765\u83B7\u53D6\u4E00\u4E2AFileChannel\u5B9E\u4F8B</span>
        <span class="token class-name">RandomAccessFile</span> aFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;src/main/resources/fileTest.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> inChannel <span class="token operator">=</span> aFile<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u83B7\u53D6\u5F53\u524D\u901A\u9053\u4F4D\u7F6E</span>
        <span class="token keyword">long</span> pos <span class="token operator">=</span> inChannel<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u8BBE\u7F6E\u5F53\u524D\u901A\u9053\u4F4D\u7F6E</span>
        inChannel<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span>pos <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u8FD4\u56DE\u901A\u9053\u5F53\u524D\u5927\u5C0F</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B64\u65F6\u901A\u9053\u5927\u5C0F\uFF1A&quot;</span><span class="token operator">+</span>inChannel<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u622A\u53D6(\u5220\u9664)\u6587\u4EF67\u5B57\u8282\u540E\u90E8\u5206</span>
        inChannel<span class="token punctuation">.</span><span class="token function">truncate</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> bytesRead <span class="token operator">=</span> inChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>bytesRead <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\uFF1A &quot;</span> <span class="token operator">+</span> bytesRead<span class="token punctuation">)</span><span class="token punctuation">;</span>
            buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> buf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            bytesRead <span class="token operator">=</span> inChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u5F3A\u5236\u5C06\u901A\u9053\u91CC\u7684\u5269\u4F59\u6570\u636E\u5199\u5230\u78C1\u76D8\u4E2D</span>
        inChannel<span class="token punctuation">.</span><span class="token function">force</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aFile<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u64CD\u4F5C\u7ED3\u675F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//\u8986\u76D6\u8D77\u59CB\u4F4D\u7F6E\u5F00\u59CB\u7684\u5BF9\u5E94\u4F4D\u7F6E \u5199</span>
        <span class="token class-name">RandomAccessFile</span> aFile1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;src/main/resources/fileTest.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> newData <span class="token operator">=</span> <span class="token string">&quot;New String to write to file...&quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> buf1 <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> inChannel1 <span class="token operator">=</span> aFile1<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf1<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf1<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>newData<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf1<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>buf1<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            inChannel1<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        inChannel1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token class-name">RandomAccessFile</span> aaFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;src/main/resources/fileTest.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> fromChannel <span class="token operator">=</span> aaFile<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RandomAccessFile</span> bbFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;src/main/resources/transferFrom.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> toChannel <span class="token operator">=</span> bbFile<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> position <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> count <span class="token operator">=</span> fromChannel<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//        fromChannel to toChannel</span>
        toChannel<span class="token punctuation">.</span><span class="token function">transferFrom</span><span class="token punctuation">(</span>fromChannel<span class="token punctuation">,</span> position<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//        fromChannel to toChannel</span>
        fromChannel<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> count<span class="token punctuation">,</span> toChannel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aaFile<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bbFile<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u901A\u9053\u4F20\u8F93over!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="serversocketchannel" tabindex="-1"><a class="header-anchor" href="#serversocketchannel" aria-hidden="true">#</a> ServerSocketChannel</h5><p>\uFF081\uFF09\u65B0\u7684socket\u901A\u9053\u7C7B\u53EF\u4EE5\u8FD0\u884C\u975E\u963B\u585E\u6A21\u5F0F\u5E76\u4E14\u662F\u53EF\u9009\u62E9\u7684\uFF0C\u53EF\u4EE5\u6FC0\u6D3B\u5927\u7A0B\u5E8F\uFF08\u5982\u7F51\u7EDC\u670D\u52A1\u5668\u548C\u4E2D\u95F4\u4EF6\u7EC4\u4EF6\uFF09\u5DE8\u5927\u7684\u53EF\u4F38\u7F29\u6027\u548C\u7075\u6D3B\u6027\u3002\u672C\u8282\u4E2D\u6211\u4EEC\u4F1A\u770B\u5230\uFF0C\u518D\u4E5F\u6CA1\u6709\u4E3A\u6BCF\u4E2Asocket\u8FDE\u63A5\u4F7F\u7528\u4E00\u4E2A\u7EBF\u7A0B\u7684\u5FC5\u8981\u4E86\uFF0C\u4E5F\u907F\u514D\u4E86\u7BA1\u7406\u5927\u91CF\u7EBF\u7A0B\u6240\u9700\u7684\u4E0A\u4E0B\u6587\u4EA4\u6362\u5F00\u9500\u3002\u501F\u52A9\u65B0\u7684NIO\u7C7B\uFF0C\u4E00\u4E2A\u6216\u51E0\u4E2A\u7EBF\u7A0B\u5C31\u53EF\u4EE5\u7BA1\u7406\u6210\u767E\u4E0A\u5343\u7684\u6D3B\u52A8socket\u8FDE\u63A5\u4E86\u5E76\u4E14\u53EA\u6709\u5F88\u5C11\u751A\u81F3\u53EF\u80FD\u6CA1\u6709\u6027\u80FD\u635F\u5931\u3002\u6240\u6709\u7684socket\u901A\u9053\u7C7B(DatagramChannel\u3001SocketChannel\u548CServerSocketChannel)\u90FD\u7EE7\u627F\u4E86\u4F4D\u4E8Ejava.nio.channels.spi\u5305\u4E2D\u7684AbstractSelectableChannel\u3002\u8FD9\u610F\u5473\u7740\u6211\u4EEC\u53EF\u4EE5\u7528\u4E00\u4E2ASelector\u5BF9\u8C61\u6765\u6267\u884Csocket\u901A\u9053\u7684\u5C31\u7EEA\u9009\u62E9\uFF08readiness selection\uFF09\u3002 \uFF082\uFF09\u8BF7\u6CE8\u610FDatagramChannel\u548CSocketChannel\u5B9E\u73B0\u5B9A\u4E49\u8BFB\u548C\u5199\u529F\u80FD\u7684\u63A5\u53E3\u800CServerSocketChannel\u4E0D\u5B9E\u73B0\u3002ServerSocketChannel\u8D1F\u8D23\u76D1\u542C\u4F20\u5165\u7684\u8FDE\u63A5\u548C\u521B\u5EFA\u65B0\u7684SocketChannel\u5BF9\u8C61\uFF0C\u5B83\u672C\u8EAB\u4ECE\u4E0D\u4F20\u8F93\u6570\u636E\u3002 \uFF083\uFF09\u5728\u6211\u4EEC\u5177\u4F53\u8BA8\u8BBA\u6BCF\u4E00\u79CDsocket\u901A\u9053\u524D\uFF0C\u60A8\u5E94\u8BE5\u4E86\u89E3socket\u548Csocket\u901A\u9053\u4E4B\u95F4\u7684\u5173\u7CFB\u3002\u901A\u9053\u662F\u4E00\u4E2A\u8FDE\u63A5I/O\u670D\u52A1\u5BFC\u7BA1\u5E76\u63D0\u4F9B\u4E0E\u8BE5\u670D\u52A1\u4EA4\u4E92\u7684\u65B9\u6CD5\u3002\u5C31\u67D0\u4E2Asocket\u800C\u8A00\uFF0C\u5B83\u4E0D\u4F1A\u518D\u6B21\u5B9E\u73B0\u4E0E\u4E4B\u5BF9\u5E94\u7684socket\u901A\u9053\u7C7B\u4E2D\u7684socket\u534F\u8BAEAPI\uFF0C\u800Cjava.net\u4E2D\u5DF2\u7ECF\u5B58\u5728\u7684socket\u901A\u9053\u90FD\u53EF\u4EE5\u88AB\u5927\u591A\u6570\u534F\u8BAE\u64CD\u4F5C\u91CD\u590D\u4F7F\u7528\u3002 \u5168\u90E8socket\u901A\u9053\u7C7B\uFF08DatagramChannel\u3001SocketChannel\u548CServerSocketChannel\uFF09\u5728\u88AB\u5B9E\u4F8B\u5316\u65F6\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A\u5BF9\u7B49socket\u5BF9\u8C61\u3002\u8FD9\u4E9B\u662F\u6211\u4EEC\u6240\u719F\u6089\u7684\u6765\u81EAjava.net\u7684\u7C7B\uFF08Socket\u3001ServerSocket\u548CDatagramSocket\uFF09\uFF0C\u5B83\u4EEC\u5DF2\u7ECF\u88AB\u66F4\u65B0\u4EE5\u8BC6\u522B\u901A\u9053\u3002\u5BF9\u7B49socket\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528socket( )\u65B9\u6CD5\u4ECE\u4E00\u4E2A\u901A\u9053\u4E0A\u83B7\u53D6\u3002\u6B64\u5916\uFF0C\u8FD9\u4E09\u4E2Ajava.net\u7C7B\u73B0\u5728\u90FD\u6709getChannel( )\u65B9\u6CD5\u3002 \uFF084\uFF09\u8981\u628A\u4E00\u4E2Asocket\u901A\u9053\u7F6E\u4E8E\u975E\u963B\u585E\u6A21\u5F0F\uFF0C\u6211\u4EEC\u8981\u4F9D\u9760\u6240\u6709socket\u901A\u9053\u7C7B\u7684\u516C\u6709\u8D85\u7EA7\u7C7B\uFF1ASelectableChannel\u3002\u5C31\u7EEA\u9009\u62E9\uFF08readiness selection\uFF09\u662F\u4E00\u79CD\u53EF\u4EE5\u7528\u6765\u67E5\u8BE2\u901A\u9053\u7684\u673A\u5236\uFF0C\u8BE5\u67E5\u8BE2\u53EF\u4EE5\u5224\u65AD\u901A\u9053\u662F\u5426\u51C6\u5907\u597D\u6267\u884C\u4E00\u4E2A\u76EE\u6807\u64CD\u4F5C\uFF0C\u5982\u8BFB\u6216\u5199\u3002\u975E\u963B\u585EI/O\u548C\u53EF\u9009\u62E9\u6027\u662F\u7D27\u5BC6\u76F8\u8FDE\u7684\uFF0C\u90A3\u4E5F\u6B63\u662F\u7BA1\u7406\u963B\u585E\u6A21\u5F0F\u7684API\u4EE3\u7801\u8981\u5728SelectableChannel\u8D85\u7EA7\u7C7B\u4E2D\u5B9A\u4E49\u7684\u539F\u56E0\u3002 \u8BBE\u7F6E\u6216\u91CD\u65B0\u8BBE\u7F6E\u4E00\u4E2A\u901A\u9053\u7684\u963B\u585E\u6A21\u5F0F\u662F\u5F88\u7B80\u5355\u7684\uFF0C\u53EA\u8981\u8C03\u7528configureBlocking( )\u65B9\u6CD5\u5373\u53EF\uFF0C\u4F20\u9012\u53C2\u6570\u503C\u4E3Atrue\u5219\u8BBE\u4E3A\u963B\u585E\u6A21\u5F0F\uFF0C\u53C2\u6570\u503C\u4E3Afalse\u503C\u8BBE\u4E3A\u975E\u963B\u585E\u6A21\u5F0F\u3002\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528isBlocking( )\u65B9\u6CD5\u6765\u5224\u65AD\u67D0\u4E2Asocket\u901A\u9053\u5F53\u524D\u5904\u4E8E\u54EA\u79CD\u6A21\u5F0F\u3002</p><p>\u200B \u975E\u963B\u585Esocket\u901A\u5E38\u88AB\u8BA4\u4E3A\u662F\u670D\u52A1\u7AEF\u4F7F\u7528\u7684\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u4F7F\u540C\u65F6\u7BA1\u7406\u5F88\u591Asocket\u901A\u9053\u53D8\u5F97\u66F4\u5BB9\u6613\u3002\u4F46\u662F\uFF0C\u5728\u5BA2\u6237\u7AEF\u4F7F\u7528\u4E00\u4E2A\u6216\u51E0\u4E2A\u975E\u963B\u585E\u6A21\u5F0F\u7684socket\u901A\u9053\u4E5F\u662F\u6709\u76CA\u5904\u7684\uFF0C\u4F8B\u5982\uFF0C\u501F\u52A9\u975E\u963B\u585Esocket\u901A\u9053\uFF0CGUI\u7A0B\u5E8F\u53EF\u4EE5\u4E13\u6CE8\u4E8E\u7528\u6237\u8BF7\u6C42\u5E76\u4E14\u540C\u65F6\u7EF4\u62A4\u4E0E\u4E00\u4E2A\u6216\u591A\u4E2A\u670D\u52A1\u5668\u7684\u4F1A\u8BDD\u3002\u5728\u5F88\u591A\u7A0B\u5E8F\u4E0A\uFF0C\u975E\u963B\u585E\u6A21\u5F0F\u90FD\u662F\u6709\u7528\u7684\u3002 \u5076\u5C14\u5730\uFF0C\u6211\u4EEC\u4E5F\u4F1A\u9700\u8981\u9632\u6B62socket\u901A\u9053\u7684\u963B\u585E\u6A21\u5F0F\u88AB\u66F4\u6539\u3002API\u4E2D\u6709\u4E00\u4E2AblockingLock( )\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u975E\u900F\u660E\u7684\u5BF9\u8C61\u5F15\u7528\u3002\u8FD4\u56DE\u7684\u5BF9\u8C61\u662F\u901A\u9053\u5B9E\u73B0\u4FEE\u6539\u963B\u585E\u6A21\u5F0F\u65F6\u5185\u90E8\u4F7F\u7528\u7684\u3002\u53EA\u6709\u62E5\u6709\u6B64\u5BF9\u8C61\u7684\u9501\u7684\u7EBF\u7A0B\u624D\u80FD\u66F4\u6539\u901A\u9053\u7684\u963B\u585E\u6A21\u5F0F\u3002</p><p>\u200B ServerSocketChannel\u662F\u4E00\u4E2A\u57FA\u4E8E\u901A\u9053\u7684socket\u76D1\u542C\u5668\u3002\u5B83\u540C\u6211\u4EEC\u6240\u719F\u6089\u7684java.net.ServerSocket\u6267\u884C\u76F8\u540C\u7684\u4EFB\u52A1\uFF0C\u4E0D\u8FC7\u5B83\u589E\u52A0\u4E86\u901A\u9053\u8BED\u4E49\uFF0C\u56E0\u6B64\u80FD\u591F\u5728\u975E\u963B\u585E\u6A21\u5F0F\u4E0B\u8FD0\u884C\u3002 \u200B \u7531\u4E8EServerSocketChannel\u6CA1\u6709bind()\u65B9\u6CD5\uFF0C\u56E0\u6B64\u6709\u5FC5\u8981\u53D6\u51FA\u5BF9\u7B49\u7684socket\u5E76\u4F7F\u7528\u5B83\u6765\u7ED1\u5B9A\u5230\u4E00\u4E2A\u7AEF\u53E3\u4EE5\u5F00\u59CB\u76D1\u542C\u8FDE\u63A5\u3002\u6211\u4EEC\u4E5F\u662F\u4F7F\u7528\u5BF9\u7B49ServerSocket\u7684API\u6765\u6839\u636E\u9700\u8981\u8BBE\u7F6E\u5176\u4ED6\u7684socket\u9009\u9879\u3002 \u200B \u540Cjava.net.ServerSocket\u4E00\u6837\uFF0CServerSocketChannel\u4E5F\u6709accept( )\u65B9\u6CD5\u3002\u4E00\u65E6\u521B\u5EFA\u4E86\u4E00\u4E2AServerSocketChannel\u5E76\u7528\u5BF9\u7B49socket\u7ED1\u5B9A\u4E86\u5B83\uFF0C\u7136\u540E\u60A8\u5C31\u53EF\u4EE5\u5728\u5176\u4E2D\u4E00\u4E2A\u4E0A\u8C03\u7528accept()\u3002\u5982\u679C\u60A8\u9009\u62E9\u5728ServerSocket\u4E0A\u8C03\u7528accept( )\u65B9\u6CD5\uFF0C\u90A3\u4E48\u5B83\u4F1A\u540C\u4EFB\u4F55\u5176\u4ED6\u7684ServerSocket\u8868\u73B0\u4E00\u6837\u7684\u884C\u4E3A\uFF1A\u603B\u662F\u963B\u585E\u5E76\u8FD4\u56DE\u4E00\u4E2Ajava.net.Socket\u5BF9\u8C61\u3002\u5982\u679C\u60A8\u9009\u62E9\u5728ServerSocketChannel\u4E0A\u8C03\u7528accept( )\u65B9\u6CD5\u5219\u4F1A\u8FD4\u56DESocketChannel\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u7684\u5BF9\u8C61\u80FD\u591F\u5728\u975E\u963B\u585E\u6A21\u5F0F\u4E0B\u8FD0\u884C\u3002 \u6362\u53E5\u8BDD\u8BF4\uFF1A \u200B ServerSocketChannel\u7684accept()\u65B9\u6CD5\u4F1A\u8FD4\u56DESocketChannel\u7C7B\u578B\u5BF9\u8C61\uFF0CSocketChannel\u53EF\u4EE5\u5728\u975E\u963B\u585E\u6A21\u5F0F\u4E0B\u8FD0\u884C\u3002\u5176\u5B83Socket\u7684accept()\u65B9\u6CD5\u4F1A\u963B\u585E\u8FD4\u56DE\u4E00\u4E2ASocket\u5BF9\u8C61\u3002\u5982\u679CServerSocketChannel\u4EE5\u975E\u963B\u585E\u6A21\u5F0F\u88AB\u8C03\u7528\uFF0C\u5F53\u6CA1\u6709\u4F20\u5165\u8FDE\u63A5\u5728\u7B49\u5F85\u65F6\uFF0CServerSocketChannel.accept( )\u4F1A\u7ACB\u5373\u8FD4\u56DEnull\u3002\u6B63\u662F\u8FD9\u79CD\u68C0\u67E5\u8FDE\u63A5\u800C\u4E0D\u963B\u585E\u7684\u80FD\u529B\u5B9E\u73B0\u4E86\u53EF\u4F38\u7F29\u6027\u5E76\u964D\u4F4E\u4E86\u590D\u6742\u6027\u3002\u53EF\u9009\u62E9\u6027\u4E5F\u56E0\u6B64\u5F97\u5230\u5B9E\u73B0\u3002\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u9009\u62E9\u5668\u5B9E\u4F8B\u6765\u6CE8\u518CServerSocketChannel\u5BF9\u8C61\u4EE5\u5B9E\u73B0\u65B0\u8FDE\u63A5\u5230\u8FBE\u65F6\u81EA\u52A8\u901A\u77E5\u7684\u529F\u80FD\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetSocketAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">ServerSocketChannel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SocketChannel</span></span><span class="token punctuation">;</span>
<span class="token comment">//http://localhost:1234/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServerSocketChannelDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> GREETING <span class="token operator">=</span> <span class="token string">&quot;Hello java nio.\\r\\n&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> argv<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> port <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span> <span class="token comment">// default</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>argv<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            port <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">ByteBuffer</span> buffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>GREETING<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u6253\u5F00</span>
        <span class="token class-name">ServerSocketChannel</span> ssc <span class="token operator">=</span> <span class="token class-name">ServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ssc<span class="token punctuation">.</span><span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ssc<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Waiting for connections&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            \u76D1\u542C\u65B0\u7684\u94FE\u63A5\uFF0C\u963B\u585E\u4F1A\u5728\u6B64\u963B\u585E\u4F4F\u8FDB\u7A0B\u975E\u963B\u585E\u4F1A\u8FD4\u56DEnull</span>
            <span class="token class-name">SocketChannel</span> sc <span class="token operator">=</span> ssc<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>sc <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Incoming connection from: &quot;</span> <span class="token operator">+</span> sc<span class="token punctuation">.</span><span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRemoteSocketAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                \u6307\u9488\u6307\u54110</span>
                buffer<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                sc<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                \u5173\u95ED</span>
                sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="socketchannel" tabindex="-1"><a class="header-anchor" href="#socketchannel" aria-hidden="true">#</a> SocketChannel</h5><p>\u200B Java NIO\u4E2D\u7684SocketChannel\u662F\u4E00\u4E2A\u8FDE\u63A5\u5230TCP\u7F51\u7EDC\u5957\u63A5\u5B57\u7684\u901A\u9053\u3002 A selectable channel for stream-oriented connecting sockets. \u4EE5\u4E0A\u662FJava docs\u4E2D\u5BF9\u4E8ESocketChannel\u7684\u63CF\u8FF0\uFF1ASocketChannel\u662F\u4E00\u79CD\u9762\u5411\u6D41\u8FDE\u63A5sockets\u5957\u63A5\u5B57\u7684\u53EF\u9009\u62E9\u901A\u9053\u3002\u4ECE\u8FD9\u91CC\u53EF\u4EE5\u770B\u51FA\uFF1A \u200B \u2022 SocketChannel\u662F\u7528\u6765\u8FDE\u63A5Socket\u5957\u63A5\u5B57 \u200B \u2022SocketChannel\u4E3B\u8981\u7528\u9014\u7528\u6765\u5904\u7406\u7F51\u7EDCI/O\u7684\u901A\u9053 \u200B \u2022 SocketChannel\u662F\u57FA\u4E8ETCP\u8FDE\u63A5\u4F20\u8F93 \u200B \u2022 SocketChannel\u5B9E\u73B0\u4E86\u53EF\u9009\u62E9\u901A\u9053\uFF0C\u53EF\u4EE5\u88AB\u591A\u8DEF\u590D\u7528\u7684 \u200B \u7279\u5F81\uFF1A \uFF081\uFF09\u5BF9\u4E8E\u5DF2\u7ECF\u5B58\u5728\u7684socket\u4E0D\u80FD\u521B\u5EFASocketChannel \uFF082\uFF09SocketChannel\u4E2D\u63D0\u4F9B\u7684open\u63A5\u53E3\u521B\u5EFA\u7684Channel\u5E76\u6CA1\u6709\u8FDB\u884C\u7F51\u7EDC\u7EA7\u8054\uFF0C\u9700\u8981\u4F7F\u7528connect\u63A5\u53E3\u8FDE\u63A5\u5230\u6307\u5B9A\u5730\u5740 \uFF083\uFF09\u672A\u8FDB\u884C\u8FDE\u63A5\u7684SocketChannle\u6267\u884CI/O\u64CD\u4F5C\u65F6\uFF0C\u4F1A\u629B\u51FANotYetConnectedException \uFF084\uFF09SocketChannel\u652F\u6301\u4E24\u79CDI/O\u6A21\u5F0F\uFF1A\u963B\u585E\u5F0F\u548C\u975E\u963B\u585E\u5F0F \uFF085\uFF09SocketChannel\u652F\u6301\u5F02\u6B65\u5173\u95ED\u3002\u5982\u679CSocketChannel\u5728\u4E00\u4E2A\u7EBF\u7A0B\u4E0Aread\u963B\u585E\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u5BF9\u8BE5SocketChannel\u8C03\u7528shutdownInput\uFF0C\u5219\u8BFB\u963B\u585E\u7684\u7EBF\u7A0B\u5C06\u8FD4\u56DE-1\u8868\u793A\u6CA1\u6709\u8BFB\u53D6\u4EFB\u4F55\u6570\u636E\uFF1B\u5982\u679CSocketChannel\u5728\u4E00\u4E2A\u7EBF\u7A0B\u4E0Awrite\u963B\u585E\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u5BF9\u8BE5SocketChannel\u8C03\u7528shutdownWrite\uFF0C\u5219\u5199\u963B\u585E\u7684\u7EBF\u7A0B\u5C06\u629B\u51FAAsynchronousCloseException \uFF086\uFF09SocketChannel\u652F\u6301\u8BBE\u5B9A\u53C2\u6570 \u200B SO_SNDBUF \u5957\u63A5\u5B57\u53D1\u9001\u7F13\u51B2\u533A\u5927\u5C0F \u200B SO_RCVBUF \u5957\u63A5\u5B57\u63A5\u6536\u7F13\u51B2\u533A\u5927\u5C0F \u200B SO_KEEPALIVE \u4FDD\u6D3B\u8FDE\u63A5 \u200B O_REUSEADDR \u590D\u7528\u5730\u5740 \u200B SO_LINGER \u6709\u6570\u636E\u4F20\u8F93\u65F6\u5EF6\u7F13\u5173\u95EDChannel (\u53EA\u6709\u5728\u975E\u963B\u585E\u6A21\u5F0F\u4E0B\u6709\u7528) \u200B TCP_NODELAY \u7981\u7528Nagle\u7B97\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">pers<span class="token punctuation">.</span>lxl<span class="token punctuation">.</span>mylearnproject<span class="token punctuation">.</span>javase<span class="token punctuation">.</span>io<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channel</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetSocketAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">StandardSocketOptions</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SocketChannel</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SocketChannelDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> <span class="token class-name">SocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;www.baidu.com&quot;</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">SocketChannel</span> socketChanne2 <span class="token operator">=</span> <span class="token class-name">SocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socketChanne2<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;www.baidu.com&quot;</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u8FDE\u63A5\u6821\u9A8C</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">isOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6D4B\u8BD5SocketChannel\u662F\u5426\u4E3Aopen\u72B6\u6001</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">isConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6D4B\u8BD5SocketChannel\u662F\u5426\u5DF2\u7ECF\u88AB\u8FDE\u63A5</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">isConnectionPending</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6D4B\u8BD5SocketChannel\u662F\u5426\u6B63\u5728\u8FDB\u884C\u8FDE\u63A5</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">finishConnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6821\u9A8C\u6B63\u5728\u8FDB\u884C\u5957\u63A5\u5B57\u8FDE\u63A5\u7684SocketChannel\u662F\u5426\u5DF2\u7ECF\u5B8C\u6210\u8FDE\u63A5</span>
<span class="token comment">//        \u8BFB\u5199\u6A21\u5F0F \u524D\u9762\u63D0\u5230SocketChannel\u652F\u6301\u963B\u585E\u548C\u975E\u963B\u585E\u4E24\u79CD\u6A21\u5F0F\uFF1A</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        \u901A\u8FC7setOptions\u65B9\u6CD5\u53EF\u4EE5\u8BBE\u7F6Esocket\u5957\u63A5\u5B57\u7684\u76F8\u5173\u53C2\u6570</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span><span class="token class-name">StandardSocketOptions</span><span class="token punctuation">.</span>SO_KEEPALIVE<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span><span class="token class-name">StandardSocketOptions</span><span class="token punctuation">.</span>TCP_NODELAY<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TRUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u53EF\u4EE5\u901A\u8FC7getOption\u83B7\u53D6\u76F8\u5173\u53C2\u6570\u7684\u503C\u3002\u5982\u9ED8\u8BA4\u7684\u63A5\u6536\u7F13\u51B2\u533A\u5927\u5C0F\u662F8192byte\u3002</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">getOption</span><span class="token punctuation">(</span><span class="token class-name">StandardSocketOptions</span><span class="token punctuation">.</span>SO_KEEPALIVE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">getOption</span><span class="token punctuation">(</span><span class="token class-name">StandardSocketOptions</span><span class="token punctuation">.</span>SO_RCVBUF<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u8BFB\u5199</span>
        <span class="token class-name">ByteBuffer</span> byteBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;read over&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="datagramchannel" tabindex="-1"><a class="header-anchor" href="#datagramchannel" aria-hidden="true">#</a> DatagramChannel</h5><p>\u200B \u6B63\u5982SocketChannel\u5BF9\u5E94Socket\uFF0CServerSocketChannel\u5BF9\u5E94ServerSocket\uFF0C\u6BCF\u4E00\u4E2ADatagramChannel\u5BF9\u8C61\u4E5F\u6709\u4E00\u4E2A\u5173\u8054\u7684DatagramSocket\u5BF9\u8C61\u3002\u6B63\u5982SocketChannel\u6A21\u62DF\u8FDE\u63A5\u5BFC\u5411\u7684\u6D41\u534F\u8BAE\uFF08\u5982TCP/IP\uFF09\uFF0CDatagramChannel\u5219\u6A21\u62DF\u5305\u5BFC\u5411\u7684\u65E0\u8FDE\u63A5\u534F\u8BAE\uFF08\u5982UDP/IP\uFF09\u3002DatagramChannel\u662F\u65E0\u8FDE\u63A5\u7684\uFF0C\u6BCF\u4E2A\u6570\u636E\u62A5\uFF08datagram\uFF09\u90FD\u662F\u4E00\u4E2A\u81EA\u5305\u542B\u7684\u5B9E\u4F53\uFF0C\u62E5\u6709\u5B83\u81EA\u5DF1\u7684\u76EE\u7684\u5730\u5740\u53CA\u4E0D\u4F9D\u8D56\u5176\u4ED6\u6570\u636E\u62A5\u7684\u6570\u636E\u8D1F\u8F7D\u3002\u4E0E\u9762\u5411\u6D41\u7684\u7684socket\u4E0D\u540C\uFF0CDatagramChannel\u53EF\u4EE5\u53D1\u9001\u5355\u72EC\u7684\u6570\u636E\u62A5\u7ED9\u4E0D\u540C\u7684\u76EE\u7684\u5730\u5740\u3002\u540C\u6837\uFF0CDatagramChannel\u5BF9\u8C61\u4E5F\u53EF\u4EE5\u63A5\u6536\u6765\u81EA\u4EFB\u610F\u5730\u5740\u7684\u6570\u636E\u5305\u3002\u6BCF\u4E2A\u5230\u8FBE\u7684\u6570\u636E\u62A5\u90FD\u542B\u6709\u5173\u4E8E\u5B83\u6765\u81EA\u4F55\u5904\u7684\u4FE1\u606F\uFF08\u6E90\u5730\u5740\uFF09\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetSocketAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">SocketAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">DatagramChannel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">Charset</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DatagramChannelDemo</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u53D1\u5305\u7684datagram * * @throws <span class="token reference"><span class="token class-name">IOException</span></span> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">InterruptedException</span></span>
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendDatagram</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">DatagramChannel</span> sendChannel <span class="token operator">=</span> <span class="token class-name">DatagramChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">InetSocketAddress</span> sendAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            \u53D1\u9001</span>
            sendChannel<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D1\u5305&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sendAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D1\u5305\u7AEF\u53D1\u5305&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6536\u5305\u7AEF * * @throws <span class="token reference"><span class="token class-name">IOException</span></span>
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">DatagramChannel</span> receiveChannel <span class="token operator">=</span> <span class="token class-name">DatagramChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6253\u5F009999\u7AEF\u53E3\u63A5\u6536UDP\u6570\u636E\u5305</span>
        <span class="token class-name">InetSocketAddress</span> receiveAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        receiveChannel<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>receiveAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> receiveBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            receiveBuffer<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            \u63A5\u6536</span>
            <span class="token class-name">SocketAddress</span> sendAddress <span class="token operator">=</span> receiveChannel<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span>receiveBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            receiveBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>sendAddress<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>receiveBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u53EA\u63A5\u6536\u548C\u53D1\u90019999\u7684\u6570\u636E\u5305 * * @throws <span class="token reference"><span class="token class-name">IOException</span></span>
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConect1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">DatagramChannel</span> connChannel <span class="token operator">=</span> <span class="token class-name">DatagramChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        connChannel<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//UDP\u4E0D\u5B58\u5728\u771F\u6B63\u610F\u4E49\u4E0A\u7684\u8FDE\u63A5\uFF0C\u8FD9\u91CC\u7684\u8FDE\u63A5\u662F\u5411\u7279\u5B9A\u670D\u52A1\u5730\u5740\u7528read\u548Cwrite\u63A5\u6536\u53D1\u9001\u6570\u636E\u5305\u3002</span>
        connChannel<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        connChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D1\u5305&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> readBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//read()\u548Cwrite()\u53EA\u6709\u5728connect()\u540E\u624D\u80FD\u4F7F\u7528\uFF0C\u4E0D\u7136\u4F1A\u629BNotYetConnectedException\u5F02\u5E38\u3002\u7528read()\u63A5\u6536\u65F6\uFF0C\u5982\u679C\u6CA1\u6709\u63A5\u6536\u5230\u5305\uFF0C\u4F1A\u629BPortUnreachableException\u5F02\u5E38\u3002</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                readBuffer<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                connChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>readBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                readBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>readBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="scatter-gather" tabindex="-1"><a class="header-anchor" href="#scatter-gather" aria-hidden="true">#</a> Scatter/Gather</h5><p>\u200B Java NIO\u5F00\u59CB\u652F\u6301scatter/gather\uFF0Cscatter/gather\u7528\u4E8E\u63CF\u8FF0\u4ECEChannel\u4E2D\u8BFB\u53D6\u6216\u8005\u5199\u5165\u5230Channel\u7684\u64CD\u4F5C\u3002 \u200B **\u5206\u6563\uFF08scatter\uFF09**\u4ECEChannel\u4E2D\u8BFB\u53D6\u662F\u6307\u5728\u8BFB\u64CD\u4F5C\u65F6\u5C06\u8BFB\u53D6\u7684\u6570\u636E\u5199\u5165\u591A\u4E2Abuffer\u4E2D\u3002\u56E0\u6B64\uFF0CChannel\u5C06\u4ECEChannel\u4E2D\u8BFB\u53D6\u7684\u6570\u636E\u201C\u5206\u6563\uFF08scatter\uFF09\u201D\u5230\u591A\u4E2ABuffer\u4E2D\u3002 \u200B **\u805A\u96C6\uFF08gather\uFF09**\u5199\u5165Channel\u662F\u6307\u5728\u5199\u64CD\u4F5C\u65F6\u5C06\u591A\u4E2Abuffer\u7684\u6570\u636E\u5199\u5165\u540C\u4E00\u4E2AChannel\uFF0C\u56E0\u6B64\uFF0CChannel \u5C06\u591A\u4E2ABuffer\u4E2D\u7684\u6570\u636E\u201C\u805A\u96C6\uFF08gather\uFF09\u201D\u540E\u53D1\u9001\u5230Channel\u3002 scatter / gather\u7ECF\u5E38\u7528\u4E8E\u9700\u8981\u5C06\u4F20\u8F93\u7684\u6570\u636E\u5206\u5F00\u5904\u7406\u7684\u573A\u5408\uFF0C\u4F8B\u5982\u4F20\u8F93\u4E00\u4E2A\u7531\u6D88\u606F\u5934\u548C\u6D88\u606F\u4F53\u7EC4\u6210\u7684\u6D88\u606F\uFF0C\u4F60\u53EF\u80FD\u4F1A\u5C06\u6D88\u606F\u4F53\u548C\u6D88\u606F\u5934\u5206\u6563\u5230\u4E0D\u540C\u7684buffer\u4E2D\uFF0C\u8FD9\u6837\u4F60\u53EF\u4EE5\u65B9\u4FBF\u7684\u5904\u7406\u6D88\u606F\u5934\u548C\u6D88\u606F\u4F53\u3002</p><h6 id="scattering-reads" tabindex="-1"><a class="header-anchor" href="#scattering-reads" aria-hidden="true">#</a> Scattering Reads</h6><p>Scattering <strong>Reads</strong>\u662F\u6307\u6570\u636E\u4ECE\u4E00\u4E2Achannel\u8BFB\u53D6\u5230\u591A\u4E2Abuffer\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ByteBuffer</span> header <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">ByteBuffer</span> body <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">ByteBuffer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bufferArray <span class="token operator">=</span> <span class="token punctuation">{</span> header<span class="token punctuation">,</span> body <span class="token punctuation">}</span><span class="token punctuation">;</span>
 channel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>bufferArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u200B \u6CE8\u610Fbuffer\u9996\u5148\u88AB\u63D2\u5165\u5230\u6570\u7EC4\uFF0C\u7136\u540E\u518D\u5C06\u6570\u7EC4\u4F5C\u4E3Achannel.read() \u7684\u8F93\u5165\u53C2\u6570\u3002read()\u65B9\u6CD5\u6309\u7167buffer\u5728\u6570\u7EC4\u4E2D\u7684\u987A\u5E8F\u5C06\u4ECEchannel\u4E2D\u8BFB\u53D6\u7684\u6570\u636E\u5199\u5165\u5230buffer\uFF0C\u5F53\u4E00\u4E2Abuffer\u88AB\u5199\u6EE1\u540E\uFF0Cchannel\u7D27\u63A5\u7740\u5411\u53E6\u4E00\u4E2Abuffer\u4E2D\u5199\u3002 Scattering Reads\u5728\u79FB\u52A8\u4E0B\u4E00\u4E2Abuffer\u524D\uFF0C\u5FC5\u987B\u586B\u6EE1\u5F53\u524D\u7684buffer\uFF0C\u8FD9\u4E5F\u610F\u5473\u7740\u5B83\u4E0D\u9002\u7528\u4E8E\u52A8\u6001\u6D88\u606F(\u8BD1\u8005\u6CE8\uFF1A\u6D88\u606F\u5927\u5C0F\u4E0D\u56FA\u5B9A)\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5982\u679C\u5B58\u5728\u6D88\u606F\u5934\u548C\u6D88\u606F\u4F53\uFF0C\u6D88\u606F\u5934\u5FC5\u987B\u5B8C\u6210\u586B\u5145\uFF08\u4F8B\u5982 128byte\uFF09\uFF0CScattering Reads\u624D\u80FD\u6B63\u5E38\u5DE5\u4F5C\u3002</p><h6 id="gathering-writes" tabindex="-1"><a class="header-anchor" href="#gathering-writes" aria-hidden="true">#</a> Gathering Writes</h6><p>\u200B Gathering <strong>Writes</strong>\u662F\u6307\u6570\u636E\u4ECE\u591A\u4E2Abuffer\u5199\u5165\u5230\u540C\u4E00\u4E2Achannel\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ByteBuffer</span> header <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">ByteBuffer</span> body <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">//write data into buffers ByteBuffer[] bufferArray = { header, body };</span>
channel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u200B buffers\u6570\u7EC4\u662Fwrite()\u65B9\u6CD5\u7684\u5165\u53C2\uFF0Cwrite()\u65B9\u6CD5\u4F1A\u6309\u7167buffer\u5728\u6570\u7EC4\u4E2D\u7684\u987A\u5E8F\uFF0C\u5C06\u6570\u636E\u5199\u5165\u5230channel\uFF0C\u6CE8\u610F\u53EA\u6709position\u548Climit\u4E4B\u95F4\u7684\u6570\u636E\u624D\u4F1A\u88AB\u5199\u5165\u3002\u56E0\u6B64\uFF0C\u5982\u679C\u4E00\u4E2Abuffer\u7684\u5BB9\u91CF\u4E3A128byte\uFF0C\u4F46\u662F\u4EC5\u4EC5\u5305\u542B58byte\u7684\u6570\u636E\uFF0C\u90A3\u4E48\u8FD958byte\u7684\u6570\u636E\u5C06\u88AB\u5199\u5165\u5230channel\u4E2D\u3002\u56E0\u6B64\u4E0EScattering Reads\u76F8\u53CD\uFF0CGathering Writes\u80FD\u8F83\u597D\u7684\u5904\u7406\u52A8\u6001\u6D88\u606F\u3002</p><h4 id="\u7F13\u51B2\u533A" tabindex="-1"><a class="header-anchor" href="#\u7F13\u51B2\u533A" aria-hidden="true">#</a> \u7F13\u51B2\u533A</h4><p>\u53D1\u9001\u7ED9<strong>\u4E00\u4E2A\u901A\u9053\u7684\u6240\u6709\u6570\u636E\u90FD\u5FC5\u987B\u9996\u5148\u653E\u5230\u7F13\u51B2\u533A\u4E2D</strong>\uFF0C\u540C\u6837\u5730\uFF0C\u4ECE\u901A\u9053\u4E2D\u8BFB\u53D6\u7684\u4EFB\u4F55\u6570\u636E\u90FD\u8981\u5148\u8BFB\u5230\u7F13\u51B2\u533A\u4E2D\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0D\u4F1A\u76F4\u63A5\u5BF9\u901A\u9053\u8FDB\u884C\u8BFB\u5199\u6570\u636E\uFF0C\u800C\u662F\u8981\u5148\u7ECF\u8FC7\u7F13\u51B2\u533A\u3002</p><p><img src="http://qnimg.gisfsde.com/work/image-20220221192014358.png" alt="image-20220221192014358" loading="lazy"></p><p>\u7F13\u51B2\u533A\u5B9E\u8D28\u4E0A\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F46\u5B83\u4E0D\u4EC5\u4EC5\u662F\u4E00\u4E2A\u6570\u7EC4\u3002\u7F13\u51B2\u533A\u63D0\u4F9B\u4E86\u5BF9\u6570\u636E\u7684\u7ED3\u6784\u5316\u8BBF\u95EE\uFF0C\u800C\u4E14\u8FD8\u53EF\u4EE5\u8DDF\u8E2A\u7CFB\u7EDF\u7684\u8BFB/\u5199\u8FDB\u7A0B\u3002</p><p>\u200B \u7F13\u51B2\u533A\u672C\u8D28\u4E0A\u662F\u4E00\u5757\u53EF\u4EE5\u5199\u5165\u6570\u636E\uFF0C\u7136\u540E\u53EF\u4EE5\u4ECE\u4E2D\u8BFB\u53D6\u6570\u636E\u7684\u5185\u5B58\u3002\u8FD9\u5757\u5185\u5B58\u88AB\u5305\u88C5\u6210NIO Buffer\u5BF9\u8C61\uFF0C\u5E76\u63D0\u4F9B\u4E86\u4E00\u7EC4\u65B9\u6CD5\uFF0C\u7528\u6765\u65B9\u4FBF\u7684\u8BBF\u95EE\u8BE5\u5757\u5185\u5B58\u3002\u7F13\u51B2\u533A\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u5BB9\u5668\u5BF9\u8C61\uFF0C\u66F4\u76F4\u63A5\u7684\u8BF4\uFF0C\u5176\u5B9E\u5C31\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5728NIO\u5E93\u4E2D\uFF0C\u6240\u6709\u6570\u636E\u90FD\u662F\u7528\u7F13\u51B2\u533A\u5904\u7406\u7684\u3002\u5728\u8BFB\u53D6\u6570\u636E\u65F6\uFF0C\u5B83\u662F\u76F4\u63A5\u8BFB\u5230\u7F13\u51B2\u533A\u4E2D\u7684\uFF1B \u5728\u5199\u5165\u6570\u636E\u65F6\uFF0C\u5B83\u4E5F\u662F\u5199\u5165\u5230\u7F13\u51B2\u533A\u4E2D\u7684\uFF1B\u4EFB\u4F55\u65F6\u5019\u8BBF\u95EE NIO \u4E2D\u7684\u6570\u636E\uFF0C\u90FD\u662F\u5C06\u5B83\u653E\u5230\u7F13\u51B2\u533A\u4E2D\u3002\u800C\u5728\u9762\u5411\u6D41I/O\u7CFB\u7EDF\u4E2D\uFF0C\u6240\u6709\u6570\u636E\u90FD\u662F\u76F4\u63A5\u5199\u5165\u6216\u8005\u76F4\u63A5\u5C06\u6570\u636E\u8BFB\u53D6\u5230Stream\u5BF9\u8C61\u4E2D\u3002\u5728NIO\u4E2D\uFF0C\u6240\u6709\u7684\u7F13\u51B2\u533A\u7C7B\u578B\u90FD\u7EE7\u627F\u4E8E\u62BD\u8C61\u7C7BBuffer\uFF0C\u6700\u5E38\u7528\u7684\u5C31\u662FByteBuffer\uFF0C\u5BF9\u4E8EJava\u4E2D\u7684\u57FA\u672C\u7C7B\u578B\uFF0C\u57FA\u672C\u90FD\u6709\u4E00\u4E2A\u5177\u4F53Buffer\u7C7B\u578B\u4E0E\u4E4B\u76F8\u5BF9\u5E94\uFF0C\u5B83\u4EEC\u4E4B\u95F4\u7684\u7EE7\u627F\u5173\u7CFB\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</p><p><img src="http://qnimg.gisfsde.com/work/image-20220221192137213.png" alt="image-20220221192137213" loading="lazy"></p><p>\u7F13\u51B2\u533A\u5305\u62EC\u4EE5\u4E0B\u7C7B\u578B\uFF1A</p><p>ByteBuffer CharBuffer ShortBuffer IntBuffer LongBuffer FloatBuffer DoubleBuffer</p><ul><li>\u7F13\u51B2\u533A\u72B6\u6001\u53D8\u91CF</li></ul><p>capacity\uFF1A\u6700\u5927\u5BB9\u91CF\uFF1B position\uFF1A\u5F53\u524D\u5DF2\u7ECF\u8BFB\u5199\u7684\u5B57\u8282\u6570\uFF1B limit\uFF1A\u8FD8\u53EF\u4EE5\u8BFB\u5199\u7684\u5B57\u8282\u6570\u3002</p><h5 id="buffer\u7684\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#buffer\u7684\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> Buffer\u7684\u57FA\u672C\u7528\u6CD5</h5><p>1\u3001\u4F7F\u7528Buffer\u8BFB\u5199\u6570\u636E\uFF0C\u4E00\u822C\u9075\u5FAA\u4EE5\u4E0B\u56DB\u4E2A\u6B65\u9AA4\uFF1A \uFF081\uFF09\u5199\u5165\u6570\u636E\u5230Buffer \uFF082\uFF09\u8C03\u7528flip()\u65B9\u6CD5 \uFF083\uFF09\u4ECEBuffer\u4E2D\u8BFB\u53D6\u6570\u636E \uFF084\uFF09\u8C03\u7528clear()\u65B9\u6CD5\u6216\u8005compact()\u65B9\u6CD5 \u5F53\u5411buffer\u5199\u5165\u6570\u636E\u65F6\uFF0Cbuffer\u4F1A\u8BB0\u5F55\u4E0B\u5199\u4E86\u591A\u5C11\u6570\u636E\u3002\u4E00\u65E6\u8981\u8BFB\u53D6\u6570\u636E\uFF0C\u9700\u8981\u901A\u8FC7<strong>flip()\u65B9\u6CD5\u5C06Buffer\u4ECE\u5199\u6A21\u5F0F\u5207\u6362\u5230\u8BFB\u6A21\u5F0F</strong>\u3002\u5728\u8BFB\u6A21\u5F0F\u4E0B\uFF0C\u53EF\u4EE5\u8BFB\u53D6\u4E4B\u524D\u5199\u5165\u5230buffer\u7684\u6240\u6709\u6570\u636E\u3002\u4E00\u65E6\u8BFB\u5B8C\u4E86\u6240\u6709\u7684\u6570\u636E\uFF0C\u5C31\u9700\u8981\u6E05\u7A7A\u7F13\u51B2\u533A\uFF0C\u8BA9\u5B83\u53EF\u4EE5\u518D\u6B21\u88AB\u5199\u5165\u3002\u6709\u4E24\u79CD\u65B9\u5F0F\u80FD\u6E05\u7A7A\u7F13\u51B2\u533A\uFF1A\u8C03\u7528clear()\u6216compact()\u65B9\u6CD5\u3002clear()\u65B9\u6CD5\u4F1A\u6E05\u7A7A\u6574\u4E2A\u7F13\u51B2\u533A\u3002compact()\u65B9\u6CD5\u53EA\u4F1A\u6E05\u9664\u5DF2\u7ECF\u8BFB\u8FC7\u7684\u6570\u636E\u3002\u4EFB\u4F55\u672A\u8BFB\u7684\u6570\u636E\u90FD\u88AB\u79FB\u5230\u7F13\u51B2\u533A\u7684\u8D77\u59CB\u5904\uFF0C\u65B0\u5199\u5165\u7684\u6570\u636E\u5C06\u653E\u5230\u7F13\u51B2\u533A\u672A\u8BFB\u6570\u636E\u7684\u540E\u9762\u3002</p><p>Buffer\u4E0EIntBuffer\u4F8B\u5B50</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">pers<span class="token punctuation">.</span>lxl<span class="token punctuation">.</span>mylearnproject<span class="token punctuation">.</span>javase<span class="token punctuation">.</span>io<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>buffer</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">RandomAccessFile</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">IntBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">FileChannel</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BufferDemo</span> <span class="token punctuation">{</span>

    <span class="token comment">//\u4F7F\u7528Buffer\u7684\u4F8B\u5B50</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConect2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">RandomAccessFile</span> aFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;src/main/resources/fileTest.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> inChannel <span class="token operator">=</span> aFile<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//create buffer with capacity of 48 bytes</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> bytesRead <span class="token operator">=</span> inChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//read into buffer.</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>bytesRead <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            buf<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//make buffer ready for read</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> buf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// read 1 byte at a time</span>
            <span class="token punctuation">}</span>
            buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//make buffer ready for writing</span>
            bytesRead <span class="token operator">=</span> inChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u4F7F\u7528IntBuffer\u7684\u4F8B\u5B50</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConect3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5206\u914D\u65B0\u7684int\u7F13\u51B2\u533A\uFF0C\u53C2\u6570\u4E3A\u7F13\u51B2\u533A\u5BB9\u91CF</span>
        <span class="token comment">// \u65B0\u7F13\u51B2\u533A\u7684\u5F53\u524D\u4F4D\u7F6E\u5C06\u4E3A\u96F6\uFF0C\u5176\u754C\u9650(\u9650\u5236\u4F4D\u7F6E)\u5C06\u4E3A\u5176\u5BB9\u91CF\u3002</span>
        <span class="token comment">// \u5B83\u5C06\u5177\u6709\u4E00\u4E2A\u5E95\u5C42\u5B9E\u73B0\u6570\u7EC4\uFF0C\u5176\u6570\u7EC4\u504F\u79FB\u91CF\u5C06\u4E3A\u96F6\u3002</span>
        <span class="token class-name">IntBuffer</span> buffer <span class="token operator">=</span> <span class="token class-name">IntBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;</span> buffer<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5C06\u7ED9\u5B9A\u6574\u6570\u5199\u5165\u6B64\u7F13\u51B2\u533A\u7684\u5F53\u524D\u4F4D\u7F6E\uFF0C\u5F53\u524D\u4F4D\u7F6E\u9012\u589E</span>
            buffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u91CD\u8BBE\u6B64\u7F13\u51B2\u533A\uFF0C\u5C06\u9650\u5236\u8BBE\u7F6E\u4E3A\u5F53\u524D\u4F4D\u7F6E\uFF0C\u7136\u540E\u5C06\u5F53\u524D\u4F4D\u7F6E\u8BBE\u7F6E\u4E3A0</span>
        buffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u67E5\u770B\u5728\u5F53\u524D\u4F4D\u7F6E\u548C\u9650\u5236\u4F4D\u7F6E\u4E4B\u95F4\u662F\u5426\u6709\u5143\u7D20</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8BFB\u53D6\u6B64\u7F13\u51B2\u533A\u5F53\u524D\u4F4D\u7F6E\u7684\u6574\u6570\uFF0C\u7136\u540E\u5F53\u524D\u4F4D\u7F6E\u9012\u589E</span>
            <span class="token keyword">int</span> j <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="buffer\u7684capacity\u3001position\u548Climit" tabindex="-1"><a class="header-anchor" href="#buffer\u7684capacity\u3001position\u548Climit" aria-hidden="true">#</a> Buffer\u7684capacity\u3001position\u548Climit</h5><p>\u4E3A\u4E86\u7406\u89E3Buffer\u7684\u5DE5\u4F5C\u539F\u7406\uFF0C\u9700\u8981\u719F\u6089\u5B83\u7684\u4E09\u4E2A\u5C5E\u6027\uFF1A Capacity \u3001 Position \u3001 limit position\u548Climit\u7684\u542B\u4E49\u53D6\u51B3\u4E8EBuffer\u5904\u5728\u8BFB\u6A21\u5F0F\u8FD8\u662F\u5199\u6A21\u5F0F\u3002\u4E0D\u7BA1Buffer\u5904\u5728\u4EC0\u4E48\u6A21\u5F0F\uFF0Ccapacity\u7684\u542B\u4E49\u603B\u662F\u4E00\u6837\u7684\u3002 \u8FD9\u91CC\u6709\u4E00\u4E2A\u5173\u4E8Ecapacity\uFF0Cposition\u548Climit\u5728\u8BFB\u5199\u6A21\u5F0F\u4E2D\u7684\u8BF4\u660E</p><p><img src="http://qnimg.gisfsde.com/work/image-20220221193102357.png" alt="image-20220221193102357" loading="lazy"></p><h6 id="_1-capacity" tabindex="-1"><a class="header-anchor" href="#_1-capacity" aria-hidden="true">#</a> \uFF081\uFF09capacity</h6><p>\u4F5C\u4E3A\u4E00\u4E2A\u5185\u5B58\u5757\uFF0CBuffer\u6709\u4E00\u4E2A\u56FA\u5B9A\u7684\u5927\u5C0F\u503C\uFF0C\u4E5F\u53EB\u201Ccapacity\u201D.\u4F60\u53EA\u80FD\u5F80\u91CC\u5199capacity\u4E2Abyte\u3001long\uFF0Cchar\u7B49\u7C7B\u578B\u3002\u4E00\u65E6Buffer<strong>\u6EE1\u4E86\uFF0C\u9700\u8981\u5C06\u5176\u6E05\u7A7A</strong>\uFF08\u901A\u8FC7\u8BFB\u6570\u636E\u6216\u8005\u6E05\u9664\u6570\u636E\uFF09\u624D\u80FD\u7EE7\u7EED\u5199\u6570\u636E\u5F80\u91CC\u5199\u6570\u636E\u3002</p><h6 id="_2-position" tabindex="-1"><a class="header-anchor" href="#_2-position" aria-hidden="true">#</a> \uFF082\uFF09position</h6><p>1\uFF09<strong>\u5199\u6570\u636E\u5230Buffer</strong>\u4E2D\u65F6\uFF0Cposition\u8868\u793A<strong>\u5199\u5165\u6570\u636E\u7684\u5F53\u524D\u4F4D\u7F6E</strong>\uFF0Cposition\u7684\u521D\u59CB\u503C\u4E3A0\u3002\u5F53\u4E00\u4E2Abyte\u3001long\u7B49\u6570\u636E\u5199\u5230Buffer\u540E\uFF0C position\u4F1A\u5411\u4E0B\u79FB\u52A8\u5230\u4E0B\u4E00\u4E2A\u53EF\u63D2\u5165\u6570\u636E\u7684Buffer\u5355\u5143\u3002position\u6700\u5927\u53EF\u4E3Acapacity \u2013 1\uFF08\u56E0\u4E3Aposition\u7684\u521D\u59CB\u503C\u4E3A0\uFF09. 2\uFF09<strong>\u8BFB\u6570\u636E\u5230Buffer</strong>\u4E2D\u65F6\uFF0Cposition\u8868\u793A<strong>\u8BFB\u5165\u6570\u636E\u7684\u5F53\u524D\u4F4D\u7F6E</strong>\uFF0C\u5982position=2\u65F6\u8868\u793A\u5DF2\u5F00\u59CB\u8BFB\u5165\u4E863\u4E2Abyte\uFF0C\u6216\u4ECE\u7B2C3\u4E2Abyte\u5F00\u59CB\u8BFB\u53D6\u3002\u901A\u8FC7ByteBuffer.flip()\u5207\u6362\u5230\u8BFB\u6A21\u5F0F\u65F6position\u4F1A\u88AB\u91CD\u7F6E\u4E3A0\uFF0C\u5F53Buffer\u4ECEposition\u8BFB\u5165\u6570\u636E\u540E\uFF0Cposition\u4F1A\u4E0B\u79FB\u5230\u4E0B\u4E00\u4E2A\u53EF\u8BFB\u5165\u7684\u6570\u636EBuffer\u5355\u5143\u3002</p><h6 id="_3-limit" tabindex="-1"><a class="header-anchor" href="#_3-limit" aria-hidden="true">#</a> \uFF083\uFF09limit</h6><p>1\uFF09<strong>\u5199</strong>\u6570\u636E\u65F6\uFF0Climit\u8868\u793A\u53EF\u5BF9Buffer<strong>\u6700\u591A\u5199\u5165</strong>\u591A\u5C11\u4E2A\u6570\u636E\u3002\u5199\u6A21\u5F0F\u4E0B\uFF0Climit\u7B49\u4E8EBuffer\u7684capacity\u3002 2\uFF09<strong>\u8BFB</strong>\u6570\u636E\u65F6\uFF0Climit\u8868\u793ABuffer\u91CC\u6709<strong>\u591A\u5C11\u53EF\u8BFB</strong>\u6570\u636E\uFF08not null\u7684\u6570\u636E\uFF09\uFF0C\u56E0\u6B64\u80FD\u8BFB\u5230\u4E4B\u524D\u5199\u5165\u7684\u6240\u6709\u6570\u636E\uFF08limit\u88AB\u8BBE\u7F6E\u6210\u5DF2\u5199\u6570\u636E\u7684\u6570\u91CF\uFF0C\u8FD9\u4E2A\u503C\u5728\u5199\u6A21\u5F0F\u4E0B\u5C31\u662Fposition\uFF09\u3002</p><h5 id="buffer\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#buffer\u7684\u7C7B\u578B" aria-hidden="true">#</a> Buffer\u7684\u7C7B\u578B</h5><p>Java NIO \u6709\u4EE5\u4E0BBuffer\u7C7B\u578B</p><ul><li><p>ByteBuffer</p></li><li><p>MappedByteBuffer</p></li><li><p>CharBuffer</p></li><li><p>DoubleBuffer</p></li><li><p>FloatBuffer</p></li><li><p>IntBuffer</p></li><li><p>LongBuffer</p></li><li><p>ShortBuffer \u8FD9\u4E9BBuffer\u7C7B\u578B\u4EE3\u8868\u4E86\u4E0D\u540C\u7684\u6570\u636E\u7C7B\u578B\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u5C31\u662F\u53EF\u4EE5\u901A\u8FC7char\uFF0Cshort\uFF0Cint\uFF0Clong\uFF0Cfloat \u6216 double\u7C7B\u578B\u6765\u64CD\u4F5C\u7F13\u51B2\u533A\u4E2D\u7684\u5B57\u8282\u3002</p></li></ul><h5 id="buffer\u5206\u914D\u548C\u5199\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#buffer\u5206\u914D\u548C\u5199\u6570\u636E" aria-hidden="true">#</a> Buffer\u5206\u914D\u548C\u5199\u6570\u636E</h5><h6 id="buffer\u5206\u914D" tabindex="-1"><a class="header-anchor" href="#buffer\u5206\u914D" aria-hidden="true">#</a> Buffer\u5206\u914D</h6><p>\u8981\u60F3\u83B7\u5F97\u4E00\u4E2ABuffer\u5BF9\u8C61\u9996\u5148\u8981\u8FDB\u884C\u5206\u914D\u3002 \u6BCF\u4E00\u4E2ABuffer\u7C7B\u90FD\u6709\u4E00\u4E2A<strong>allocate</strong>\u65B9\u6CD5\u3002 \u4E0B\u9762\u662F\u4E00\u4E2A\u5206\u914D48\u5B57\u8282capacity\u7684ByteBuffer\u7684\u4F8B\u5B50\u3002 ByteBuffer buf = ByteBuffer.allocate(48); \u8FD9\u662F\u5206\u914D\u4E00\u4E2A\u53EF\u5B58\u50A81024\u4E2A\u5B57\u7B26\u7684CharBuffer\uFF1A CharBuffer buf = CharBuffer.allocate(1024);</p><h6 id="\u5411buffer\u4E2D\u5199\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u5411buffer\u4E2D\u5199\u6570\u636E" aria-hidden="true">#</a> \u5411Buffer\u4E2D\u5199\u6570\u636E</h6><p>\u5199\u6570\u636E\u5230Buffer\u6709\u4E24\u79CD\u65B9\u5F0F\uFF1A \uFF081\uFF09\u4ECEChannel\u5199\u5230Buffer\u3002 \uFF082\uFF09\u901A\u8FC7Buffer\u7684put()\u65B9\u6CD5\u5199\u5230Buffer\u91CC\u3002 \u4ECEChannel\u5199\u5230Buffer\u7684\u4F8B\u5B50 int bytesRead = inChannel.read(buf); //read into buffer. \u901A\u8FC7put\u65B9\u6CD5\u5199Buffer\u7684\u4F8B\u5B50\uFF1A buf.put(127); put\u65B9\u6CD5\u6709\u5F88\u591A\u7248\u672C\uFF0C\u5141\u8BB8\u4F60\u4EE5\u4E0D\u540C\u7684\u65B9\u5F0F\u628A\u6570\u636E\u5199\u5165\u5230Buffer\u4E2D\u3002\u4F8B\u5982\uFF0C \u5199\u5230\u4E00\u4E2A\u6307\u5B9A\u7684\u4F4D\u7F6E\uFF0C\u6216\u8005\u628A\u4E00\u4E2A\u5B57\u8282\u6570\u7EC4\u5199\u5165\u5230Buffer</p><h6 id="flip-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#flip-\u65B9\u6CD5" aria-hidden="true">#</a> flip()\u65B9\u6CD5</h6><p>flip\u65B9\u6CD5\u5C06Buffer<strong>\u4ECE\u5199\u6A21\u5F0F\u5207\u6362\u5230\u8BFB\u6A21\u5F0F</strong>\u3002\u8C03\u7528flip()\u65B9\u6CD5\u4F1A\u5C06position\u8BBE\u56DE0\uFF0C\u5E76\u5C06limit\u8BBE\u7F6E\u6210\u4E4B\u524Dposition\u7684\u503C\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0Cposition\u73B0\u5728\u7528\u4E8E\u6807\u8BB0\u8BFB\u7684\u4F4D\u7F6E\uFF0Climit\u8868\u793A\u4E4B\u524D\u5199\u8FDB\u4E86\u591A\u5C11\u4E2Abyte\u3001char\u7B49 \uFF08\u73B0\u5728\u80FD\u8BFB\u53D6\u591A\u5C11\u4E2Abyte\u3001char\u7B49\uFF09\u3002</p><h5 id="\u4ECEbuffer\u4E2D\u8BFB\u53D6\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u4ECEbuffer\u4E2D\u8BFB\u53D6\u6570\u636E" aria-hidden="true">#</a> \u4ECEBuffer\u4E2D\u8BFB\u53D6\u6570\u636E</h5><p>\u4ECEBuffer\u4E2D\u8BFB\u53D6\u6570\u636E\u6709\u4E24\u79CD\u65B9\u5F0F\uFF1A \uFF081\uFF09\u4ECEBuffer\u8BFB\u53D6\u6570\u636E\u5230Channel\u3002 \uFF082\uFF09\u4F7F\u7528get()\u65B9\u6CD5\u4ECEBuffer\u4E2D\u8BFB\u53D6\u6570\u636E\u3002 \u4ECEBuffer\u8BFB\u53D6\u6570\u636E\u5230Channel\u7684\u4F8B\u5B50\uFF1A //read from buffer into channel. int bytesWritten = inChannel.write(buf); \u4F7F\u7528get()\u65B9\u6CD5\u4ECEBuffer\u4E2D\u8BFB\u53D6\u6570\u636E\u7684\u4F8B\u5B50 byte aByte = buf.get(); get\u65B9\u6CD5\u6709\u5F88\u591A\u7248\u672C\uFF0C\u5141\u8BB8\u4F60\u4EE5\u4E0D\u540C\u7684\u65B9\u5F0F\u4ECEBuffer\u4E2D\u8BFB\u53D6\u6570\u636E\u3002\u4F8B\u5982\uFF0C\u4ECE\u6307\u5B9Aposition\u8BFB\u53D6\uFF0C\u6216\u8005\u4ECEBuffer\u4E2D\u8BFB\u53D6\u6570\u636E\u5230\u5B57\u8282\u6570\u7EC4\u3002</p><h5 id="buffer\u51E0\u4E2A\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#buffer\u51E0\u4E2A\u65B9\u6CD5" aria-hidden="true">#</a> Buffer\u51E0\u4E2A\u65B9\u6CD5</h5><h6 id="rewind-\u65B9\u6CD5\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#rewind-\u65B9\u6CD5\u65B9\u6CD5" aria-hidden="true">#</a> rewind()\u65B9\u6CD5\u65B9\u6CD5</h6><p>Buffer.rewind()\u5C06<strong>position\u8BBE\u56DE0</strong>\uFF0C\u6240\u4EE5\u4F60\u53EF\u4EE5\u91CD\u8BFBBuffer\u4E2D\u7684\u6240\u6709\u6570\u636E\u3002limit\u4FDD\u6301\u4E0D\u53D8\uFF0C\u4ECD\u7136\u8868\u793A\u80FD\u4ECEBuffer\u4E2D\u8BFB\u53D6\u591A\u5C11\u4E2A\u5143\u7D20\uFF08byte\u3001char\u7B49\uFF09\u3002</p><h6 id="clear-\u4E0Ecompact-\u65B9\u6CD5\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#clear-\u4E0Ecompact-\u65B9\u6CD5\u65B9\u6CD5" aria-hidden="true">#</a> clear()\u4E0Ecompact()\u65B9\u6CD5\u65B9\u6CD5</h6><p>\u200B \u4E00\u65E6\u8BFB\u5B8CBuffer\u4E2D\u7684\u6570\u636E\uFF0C\u9700\u8981\u8BA9Buffer\u51C6\u5907\u597D\u518D\u6B21\u88AB\u5199\u5165\u3002\u53EF\u4EE5\u901A\u8FC7clear()\u6216compact()\u65B9\u6CD5\u6765\u5B8C\u6210\u3002 \u5982\u679C\u8C03\u7528\u7684\u662F**clear()<strong>\u65B9\u6CD5\uFF0Cposition\u5C06\u88AB\u8BBE\u56DE0\uFF0Climit\u88AB\u8BBE\u7F6E\u6210 capacity\u7684\u503C\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0CBuffer \u88AB\u6E05\u7A7A\u4E86\u3002Buffer\u4E2D\u7684\u6570\u636E\u5E76\u672A\u6E05\u9664\uFF0C\u53EA\u662F\u8FD9\u4E9B\u6807\u8BB0\u544A\u8BC9\u6211\u4EEC\u53EF\u4EE5\u4ECE\u54EA\u91CC\u5F00\u59CB\u5F80Buffer\u91CC\u5199\u6570\u636E\u3002 \u5982\u679CBuffer\u4E2D\u6709\u4E00\u4E9B\u672A\u8BFB\u7684\u6570\u636E\uFF0C\u8C03\u7528clear()\u65B9\u6CD5\uFF0C\u6570\u636E\u5C06\u201C\u88AB\u9057\u5FD8\u201D\uFF0C\u610F\u5473\u7740\u4E0D\u518D\u6709\u4EFB\u4F55\u6807\u8BB0\u4F1A\u544A\u8BC9\u4F60\u54EA\u4E9B\u6570\u636E\u88AB\u8BFB\u8FC7\uFF0C\u54EA\u4E9B\u8FD8\u6CA1\u6709\u3002 \u5982\u679CBuffer\u4E2D\u4ECD\u6709\u672A\u8BFB\u7684\u6570\u636E\uFF0C\u4E14\u540E\u7EED\u8FD8\u9700\u8981\u8FD9\u4E9B\u6570\u636E\uFF0C\u4F46\u662F\u6B64\u65F6\u60F3\u8981\u5148\u5148\u5199\u4E9B\u6570\u636E\uFF0C\u90A3\u4E48\u4F7F\u7528</strong>compact()**\u65B9\u6CD5\u3002 compact()\u65B9\u6CD5\u5C06\u6240\u6709\u672A\u8BFB\u7684\u6570\u636E\u62F7\u8D1D\u5230Buffer\u8D77\u59CB\u5904\u3002\u7136\u540E\u5C06position\u8BBE\u5230\u6700\u540E\u4E00\u4E2A\u672A\u8BFB\u5143\u7D20\u6B63\u540E\u9762\u3002limit\u5C5E\u6027\u4F9D\u7136\u50CFclear()\u65B9\u6CD5\u4E00\u6837\uFF0C\u8BBE\u7F6E\u6210capacity\u3002\u73B0\u5728Buffer\u51C6\u5907\u597D\u5199\u6570\u636E\u4E86\uFF0C\u4F46\u662F\u4E0D\u4F1A\u8986\u76D6\u672A\u8BFB\u7684\u6570\u636E\u3002</p><h6 id="mark-\u4E0Ereset-\u65B9\u6CD5\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#mark-\u4E0Ereset-\u65B9\u6CD5\u65B9\u6CD5" aria-hidden="true">#</a> mark()\u4E0Ereset()\u65B9\u6CD5\u65B9\u6CD5</h6><p>\u901A\u8FC7\u8C03\u7528Buffer.mark()\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u6807\u8BB0Buffer\u4E2D\u7684\u4E00\u4E2A\u7279\u5B9Aposition\u3002\u4E4B\u540E\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528Buffer.reset()\u65B9\u6CD5\u6062\u590D\u5230\u8FD9\u4E2Aposition\u3002\u4F8B\u5982\uFF1A buffer.mark(); //call buffer.get() a couple of times, e.g. during parsing. buffer.reset(); //set position back to mark.</p><h5 id="\u7F13\u51B2\u533A\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7F13\u51B2\u533A\u64CD\u4F5C" aria-hidden="true">#</a> \u7F13\u51B2\u533A\u64CD\u4F5C</h5><h6 id="\u7F13\u51B2\u533A\u5206\u7247" tabindex="-1"><a class="header-anchor" href="#\u7F13\u51B2\u533A\u5206\u7247" aria-hidden="true">#</a> \u7F13\u51B2\u533A\u5206\u7247</h6><p>\u200B \u5728NIO\u4E2D\uFF0C\u9664\u4E86\u53EF\u4EE5\u5206\u914D\u6216\u8005\u5305\u88C5\u4E00\u4E2A\u7F13\u51B2\u533A\u5BF9\u8C61\u5916\uFF0C\u8FD8\u53EF\u4EE5\u6839\u636E\u73B0\u6709\u7684\u7F13\u51B2\u533A\u5BF9\u8C61\u6765\u521B\u5EFA\u4E00\u4E2A\u5B50\u7F13\u51B2\u533A\uFF0C\u5373\u5728\u73B0\u6709\u7F13\u51B2\u533A\u4E0A\u5207\u51FA\u4E00\u7247\u6765\u4F5C\u4E3A\u4E00\u4E2A\u65B0\u7684\u7F13\u51B2\u533A\uFF0C\u4F46\u73B0\u6709\u7684\u7F13\u51B2\u533A\u4E0E\u521B\u5EFA\u7684\u5B50\u7F13\u51B2\u533A\u5728\u5E95\u5C42\u6570\u7EC4\u5C42\u9762\u4E0A\u662F<strong>\u6570\u636E\u5171\u4EAB</strong>\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5B50\u7F13\u51B2\u533A\u76F8\u5F53\u4E8E\u662F\u73B0\u6709\u7F13\u51B2\u533A\u7684\u4E00\u4E2A\u89C6\u56FE\u7A97\u53E3\u3002\u8C03\u7528**slice()**\u65B9\u6CD5\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u5B50\u7F13\u51B2\u533A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConect2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ByteBuffer</span> buffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E0-9</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;</span> buffer<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            buffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u521B\u5EFA\u5B50\u7F13\u51B2\u533A</span>
        buffer<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buffer<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> slice <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6539\u53D8\u5B50\u7F13\u51B2\u533A\u7684\u5185\u5BB9</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;</span> slice<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">byte</span> b <span class="token operator">=</span> slice<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            b <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            slice<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        buffer<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buffer<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">remaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="\u53EA\u8BFB\u7F13\u51B2\u533A" tabindex="-1"><a class="header-anchor" href="#\u53EA\u8BFB\u7F13\u51B2\u533A" aria-hidden="true">#</a> \u53EA\u8BFB\u7F13\u51B2\u533A</h6><p>\u200B \u53EA\u8BFB\u7F13\u51B2\u533A\u975E\u5E38\u7B80\u5355\uFF0C<strong>\u53EF\u8BFB\u7981\u5199</strong>\u3002\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528\u7F13\u51B2\u533A\u7684asReadOnlyBuffer()\u65B9\u6CD5\uFF0C\u5C06\u4EFB\u4F55\u5E38\u89C4\u7F13\u51B2\u533A\u8F6C \u6362\u4E3A\u53EA\u8BFB\u7F13\u51B2\u533A\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u4E0E\u539F\u7F13\u51B2\u533A\u5B8C\u5168\u76F8\u540C\u7684\u7F13\u51B2\u533A\uFF0C\u5E76\u4E0E\u539F\u7F13\u51B2\u533A\u5171\u4EAB\u6570\u636E\uFF0C\u53EA\u4E0D\u8FC7\u5B83\u662F\u53EA\u8BFB\u7684\u3002<strong>\u539F\u53D8\u53EA\u8BFB\u53D8</strong>\uFF0C\u5982\u679C\u539F\u7F13\u51B2\u533A\u7684\u5185\u5BB9\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u53EA\u8BFB\u7F13\u51B2\u533A\u7684\u5185\u5BB9\u4E5F\u968F\u4E4B\u53D1\u751F\u53D8\u5316\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>   <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConect4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ByteBuffer</span> buffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E0-9 </span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;</span> buffer<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            buffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u521B\u5EFA\u53EA\u8BFB\u7F13\u51B2\u533A </span>
        <span class="token class-name">ByteBuffer</span> readonly <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">asReadOnlyBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6539\u53D8\u539F\u7F13\u51B2\u533A\u7684\u5185\u5BB9 </span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;</span> buffer<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">byte</span> b <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            b <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">;</span>
            buffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        readonly<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        readonly<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u53EA\u8BFB\u7F13\u51B2\u533A\u7684\u5185\u5BB9\u4E5F\u968F\u4E4B\u6539\u53D8 </span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>readonly<span class="token punctuation">.</span><span class="token function">remaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>readonly<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u200B \u5982\u679C\u5C1D\u8BD5\u4FEE\u6539\u53EA\u8BFB\u7F13\u51B2\u533A\u7684\u5185\u5BB9\uFF0C\u5219\u4F1A\u62A5ReadOnlyBufferException\u5F02\u5E38\u3002\u53EA\u8BFB\u7F13\u51B2\u533A\u5BF9\u4E8E\u4FDD\u62A4\u6570\u636E\u5F88\u6709\u7528\u3002\u5728\u5C06\u7F13\u51B2\u533A\u4F20\u9012\u7ED9\u67D0\u4E2A \u5BF9\u8C61\u7684\u65B9\u6CD5\u65F6\uFF0C\u65E0\u6CD5\u77E5\u9053\u8FD9\u4E2A\u65B9\u6CD5\u662F\u5426\u4F1A\u4FEE\u6539\u7F13\u51B2\u533A\u4E2D\u7684\u6570\u636E\u3002\u521B\u5EFA\u4E00\u4E2A\u53EA\u8BFB\u7684\u7F13\u51B2\u533A\u53EF\u4EE5\u4FDD\u8BC1\u8BE5\u7F13\u51B2\u533A\u4E0D\u4F1A\u88AB\u4FEE\u6539\u3002\u53EA\u53EF\u4EE5\u628A\u5E38\u89C4\u7F13\u51B2\u533A\u8F6C\u6362\u4E3A\u53EA\u8BFB\u7F13\u51B2\u533A\uFF0C\u800C\u4E0D\u80FD\u5C06\u53EA\u8BFB\u7684\u7F13\u51B2\u533A\u8F6C\u6362\u4E3A\u53EF\u5199\u7684\u7F13\u51B2\u533A\u3002</p><h6 id="\u76F4\u63A5\u7F13\u51B2\u533A" tabindex="-1"><a class="header-anchor" href="#\u76F4\u63A5\u7F13\u51B2\u533A" aria-hidden="true">#</a> \u76F4\u63A5\u7F13\u51B2\u533A</h6><p>\u200B \u76F4\u63A5\u7F13\u51B2\u533A\u662F\u4E3A\u52A0\u5FEBI/O\u901F\u5EA6\uFF0C\u4F7F\u7528\u4E00\u79CD\u7279\u6B8A\u65B9\u5F0F\u4E3A\u5176\u5206\u914D\u5185\u5B58\u7684\u7F13\u51B2\u533A\uFF0CJDK\u6587\u6863\u4E2D\u7684\u63CF\u8FF0\u4E3A\uFF1A\u7ED9\u5B9A\u4E00\u4E2A\u76F4\u63A5\u5B57\u8282\u7F13\u51B2\u533A\uFF0CJava\u865A\u62DF\u673A\u5C06\u5C3D\u6700\u5927\u52AA\u529B\u76F4\u63A5\u5BF9\u5B83\u6267\u884C\u672C\u673AI/O\u64CD\u4F5C\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5B83\u4F1A\u5728\u6BCF\u4E00\u6B21\u8C03\u7528\u5E95\u5C42\u64CD\u4F5C\u7CFB\u7EDF\u7684\u672C\u673AI/O\u64CD\u4F5C\u4E4B\u524D(\u6216\u4E4B\u540E)\uFF0C\u5C1D\u8BD5\u907F\u514D\u5C06\u7F13\u51B2\u533A\u7684\u5185\u5BB9\u62F7\u8D1D\u5230\u4E00\u4E2A\u4E2D\u95F4\u7F13\u51B2\u533A\u4E2D \u6216\u8005\u4ECE\u4E00\u4E2A\u4E2D\u95F4\u7F13\u51B2\u533A\u4E2D\u62F7\u8D1D\u6570\u636E\u3002\u8981\u5206\u914D\u76F4\u63A5\u7F13\u51B2\u533A\uFF0C\u9700\u8981\u8C03\u7528allocateDirect()\u65B9\u6CD5\uFF0C\u800C\u4E0D\u662Fallocate()\u65B9\u6CD5\uFF0C\u4F7F\u7528\u65B9\u5F0F\u4E0E\u666E\u901A\u7F13\u51B2\u533A\u5E76\u65E0\u533A\u522B\u3002 \u62F7\u8D1D\u6587\u4EF6\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConect5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> infile <span class="token operator">=</span> <span class="token string">&quot;d:\\\\atguigu\\\\01.txt&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">FileInputStream</span> fin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>infile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> fcin <span class="token operator">=</span> fin<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> outfile <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;d:\\\\atguigu\\\\02.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileOutputStream</span> fout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>outfile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> fcout <span class="token operator">=</span> fout<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4F7F\u7528allocateDirect\uFF0C\u800C\u4E0D\u662Fallocate </span>
        <span class="token class-name">ByteBuffer</span> buffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocateDirect</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            buffer<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> r <span class="token operator">=</span> fcin<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            buffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            fcout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="\u5185\u5B58\u6620\u5C04\u6587\u4EF6i-o" tabindex="-1"><a class="header-anchor" href="#\u5185\u5B58\u6620\u5C04\u6587\u4EF6i-o" aria-hidden="true">#</a> \u5185\u5B58\u6620\u5C04\u6587\u4EF6I/O</h6><p>\u200B \u5185\u5B58\u6620\u5C04\u6587\u4EF6I/O\u662F\u4E00\u79CD\u8BFB\u548C\u5199\u6587\u4EF6\u6570\u636E\u7684\u65B9\u6CD5\uFF0C\u5B83\u53EF\u4EE5\u6BD4\u5E38\u89C4\u7684\u57FA\u4E8E\u6D41\u6216\u8005\u57FA\u4E8E\u901A\u9053\u7684I/O\u5FEB\u7684\u591A\u3002\u5185\u5B58\u6620\u5C04\u6587\u4EF6I/O\u662F\u901A\u8FC7\u4F7F\u6587\u4EF6\u4E2D\u7684\u6570\u636E\u51FA\u73B0\u4E3A \u5185\u5B58\u6570\u7EC4\u7684\u5185\u5BB9\u6765\u5B8C\u6210\u7684\uFF0C\u8FD9\u5176\u521D\u542C\u8D77\u6765\u4F3C\u4E4E\u4E0D\u8FC7\u5C31\u662F\u5C06\u6574\u4E2A\u6587\u4EF6\u8BFB\u5230\u5185\u5B58\u4E2D\uFF0C\u4F46\u662F\u4E8B\u5B9E\u4E0A\u5E76\u4E0D\u662F\u8FD9\u6837\u3002\u4E00\u822C\u6765\u8BF4\uFF0C\u53EA\u6709\u6587\u4EF6\u4E2D\u5B9E\u9645\u8BFB\u53D6\u6216\u8005\u5199\u5165\u7684\u90E8\u5206\u624D\u4F1A\u6620\u5C04\u5230\u5185\u5B58\u4E2D\u3002\u793A\u4F8B\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">RandomAccessFile</span> raf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;d:\\\\atguigu\\\\01.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> raf<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MappedByteBuffer</span> mbb <span class="token operator">=</span> fc<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FileChannel<span class="token punctuation">.</span>MapMode</span><span class="token punctuation">.</span>READ_WRITE<span class="token punctuation">,</span> start<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mbb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">97</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mbb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">1023</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        raf<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9009\u62E9\u5668" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u5668" aria-hidden="true">#</a> \u9009\u62E9\u5668</h3><h4 id="selector\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#selector\u7B80\u4ECB" aria-hidden="true">#</a> Selector\u7B80\u4ECB</h4><h5 id="_1\u3001-selector\u548C-channel\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#_1\u3001-selector\u548C-channel\u5173\u7CFB" aria-hidden="true">#</a> 1\u3001 Selector\u548C Channel\u5173\u7CFB</h5><p>\u200B Selector \u4E00\u822C\u79F0 \u4E3A\u9009\u62E9\u5668 \uFF0C\u4E5F\u53EF\u4EE5\u7FFB\u8BD1\u4E3A \u591A\u8DEF\u590D\u7528\u5668 \u3002\u5B83\u662FJava NIO\u6838\u5FC3\u7EC4\u4EF6\u4E2D\u7684\u4E00\u4E2A\uFF0C**\u7528\u4E8E\u68C0\u67E5\u4E00\u4E2A\u6216\u591A\u4E2ANIO Channel\uFF08\u901A\u9053\uFF09\u7684\u72B6\u6001\u662F\u5426\u5904\u4E8E\u53EF\u8BFB\u3001\u53EF\u5199\u3002**\u5982\u6B64\u53EF\u4EE5\u5B9E\u73B0\u5355\u7EBF\u7A0B\u7BA1\u7406\u591A\u4E2Achannels,\u4E5F\u5C31\u662F\u53EF\u4EE5\u7BA1\u7406\u591A\u4E2A\u7F51\u7EDC\u94FE\u63A5\u3002\u5373\u4F7F\u7528Selector\u7684\u597D\u5904\u5728\u4E8E\uFF1A \u4F7F\u7528\u66F4\u5C11\u7684\u7EBF\u7A0B\u6765\u5C31\u53EF\u4EE5\u6765\u5904\u7406\u901A\u9053\u4E86\uFF0C \u76F8\u6BD4\u4F7F\u7528\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u907F\u514D\u4E86\u7EBF\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u5E26\u6765\u7684\u5F00\u9500\u3002NIO \u5B9E\u73B0\u4E86 IO \u591A\u8DEF\u590D\u7528\u4E2D\u7684 Reactor \u6A21\u578B\uFF0C\u4E00\u4E2A\u7EBF\u7A0B Thread \u4F7F\u7528\u4E00\u4E2A\u9009\u62E9\u5668 Selector \u901A\u8FC7\u8F6E\u8BE2\u7684\u65B9\u5F0F\u53BB\u76D1\u542C\u591A\u4E2A\u901A\u9053 Channel \u4E0A\u7684\u4E8B\u4EF6\uFF0C\u4ECE\u800C\u8BA9\u4E00\u4E2A\u7EBF\u7A0B\u5C31\u53EF\u4EE5\u5904\u7406\u591A\u4E2A\u4E8B\u4EF6\u3002\u901A\u8FC7\u914D\u7F6E\u76D1\u542C\u7684\u901A\u9053 Channel \u4E3A\u975E\u963B\u585E\uFF0C\u90A3\u4E48\u5F53 Channel \u4E0A\u7684 IO \u4E8B\u4EF6\u8FD8\u672A\u5230\u8FBE\u65F6\uFF0C\u5C31\u4E0D\u4F1A\u8FDB\u5165\u963B\u585E\u72B6\u6001\u4E00\u76F4\u7B49\u5F85\uFF0C\u800C\u662F\u7EE7\u7EED\u8F6E\u8BE2\u5176\u5B83 Channel\uFF0C\u627E\u5230 IO \u4E8B\u4EF6\u5DF2\u7ECF\u5230\u8FBE\u7684 Channel \u6267\u884C\u3002\u56E0\u4E3A\u521B\u5EFA\u548C\u5207\u6362\u7EBF\u7A0B\u7684\u5F00\u9500\u5F88\u5927\uFF0C\u56E0\u6B64\u4F7F\u7528\u4E00\u4E2A\u7EBF\u7A0B\u6765\u5904\u7406\u591A\u4E2A\u4E8B\u4EF6\u800C\u4E0D\u662F\u4E00\u4E2A\u7EBF\u7A0B\u5904\u7406\u4E00\u4E2A\u4E8B\u4EF6\uFF0C\u5BF9\u4E8E IO \u5BC6\u96C6\u578B\u7684\u5E94\u7528\u5177\u6709\u5F88\u597D\u5730\u6027\u80FD\u3002</p><p><img src="http://qnimg.gisfsde.com/work/image-20220221201825702.png" alt="image-20220221201825702" loading="lazy"></p><h5 id="_2\u3001-\u53EF\u9009\u62E9\u901A\u9053-selectablechannel" tabindex="-1"><a class="header-anchor" href="#_2\u3001-\u53EF\u9009\u62E9\u901A\u9053-selectablechannel" aria-hidden="true">#</a> 2\u3001 \u53EF\u9009\u62E9\u901A\u9053 (SelectableChannel)</h5><p>\uFF081\uFF09\u4E0D\u662F\u6240\u6709\u7684Channel\u90FD\u53EF\u4EE5\u88ABSelector \u590D\u7528\u7684\u3002\u6BD4\u65B9\u8BF4\uFF0C<strong>FileChannel\u5C31\u4E0D\u80FD\u88AB\u9009\u62E9\u5668\u590D\u7528</strong>\u3002\u5224\u65AD\u4E00\u4E2AChannel \u80FD\u88ABSelector \u590D\u7528\uFF0C\u6709\u4E00\u4E2A\u524D\u63D0\uFF1A\u5224\u65AD\u4ED6\u662F\u5426\u7EE7\u627F\u4E86\u4E00\u4E2A\u62BD\u8C61\u7C7BSelectableChannel\u3002\u5982\u679C<strong>\u7EE7\u627F\u4E86SelectableChannel\uFF0C\u5219\u53EF\u4EE5\u88AB\u590D\u7528</strong>\uFF0C\u5426\u5219\u4E0D\u80FD\u3002 \uFF082\uFF09SelectableChannel\u7C7B\u63D0\u4F9B\u4E86\u5B9E\u73B0\u901A\u9053\u7684\u53EF\u9009\u62E9\u6027\u6240\u9700\u8981\u7684\u516C\u5171\u65B9\u6CD5\u3002\u5B83\u662F\u6240\u6709\u652F\u6301\u5C31\u7EEA\u68C0\u67E5\u7684\u901A\u9053\u7C7B\u7684\u7236\u7C7B\u3002\u6240\u6709socket\u901A\u9053\uFF0C\u90FD\u7EE7\u627F\u4E86SelectableChannel\u7C7B\u90FD\u662F\u53EF\u9009\u62E9\u7684\uFF0C\u5305\u62EC\u4ECE\u7BA1\u9053(Pipe)\u5BF9\u8C61\u7684\u4E2D\u83B7\u5F97\u7684\u901A\u9053\u3002\u800CFileChannel\u7C7B\uFF0C\u6CA1\u6709\u7EE7\u627FSelectableChannel\uFF0C\u56E0\u6B64\u662F\u4E0D\u662F\u53EF\u9009\u901A\u9053\u3002 \uFF083\uFF09\u4E00\u4E2A\u901A\u9053\u53EF\u4EE5\u88AB\u6CE8\u518C\u5230\u591A\u4E2A\u9009\u62E9\u5668\u4E0A\uFF0C\u4F46\u5BF9\u6BCF\u4E2A\u9009\u62E9\u5668\u800C\u8A00\u53EA\u80FD\u88AB\u6CE8\u518C\u4E00\u6B21,\u5373<strong>\u901A\u9053\u4E0E\u9009\u62E9\u5668\u4E00\u5BF9\u591A</strong>\u3002\u901A\u9053\u548C\u9009\u62E9\u5668\u4E4B\u95F4\u7684\u5173\u7CFB\uFF0C\u4F7F\u7528\u6CE8\u518C\u7684\u65B9\u5F0F\u5B8C\u6210\u3002SelectableChannel\u53EF\u4EE5\u88AB\u6CE8\u518C\u5230Selector\u5BF9\u8C61\u4E0A\uFF0C\u5728\u6CE8\u518C\u7684\u65F6\u5019\uFF0C\u9700\u8981\u6307\u5B9A\u901A\u9053\u7684\u54EA\u4E9B\u64CD\u4F5C\uFF0C\u662FSelector\u611F\u5174\u8DA3\u7684\u3002</p><p><img src="http://qnimg.gisfsde.com/work/image-20220221202034823.png" alt="image-20220221202034823" loading="lazy"></p><h5 id="_3\u3001channel\u6CE8\u518C\u5230\u6CE8\u518C\u5230selector" tabindex="-1"><a class="header-anchor" href="#_3\u3001channel\u6CE8\u518C\u5230\u6CE8\u518C\u5230selector" aria-hidden="true">#</a> 3\u3001Channel\u6CE8\u518C\u5230\u6CE8\u518C\u5230Selector</h5><p>\uFF081\uFF09\u4F7F\u7528<strong>Channel.register\uFF08Selector sel\uFF0Cint ops\uFF09<strong>\u65B9\u6CD5\uFF0C\u5C06\u4E00\u4E2A\u901A\u9053\u6CE8\u518C\u5230\u4E00\u4E2A\u9009\u62E9\u5668\u65F6\u3002\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u6307\u5B9A\u901A\u9053\u8981\u6CE8\u518C\u7684\u9009\u62E9\u5668\u3002\u7B2C\u4E8C\u4E2A\u53C2\u6570\u6307\u5B9A\u9009\u62E9\u5668\u9700\u8981\u67E5\u8BE2\u7684\u901A\u9053\u64CD\u4F5C\u3002 \uFF082\uFF09\u53EF\u4EE5\u4F9B\u9009\u62E9\u5668\u67E5\u8BE2\u7684</strong>\u901A\u9053\u64CD\u4F5C\u56DB\u7C7B</strong>\uFF1A</p><ul><li><p>\u53EF\u8BFB : SelectionKey.OP_READ</p></li><li><p>\u53EF\u5199 : SelectionKey.OP_WRITE</p></li><li><p>\u8FDE\u63A5 : SelectionKey.OP_CONNECT</p></li><li><p>\u63A5\u6536 : SelectionKey.OP_ACCEPT Selector\u5BF9\u901A\u9053\u7684<strong>\u591A\u64CD\u4F5C\u7C7B\u578B\u7528\u201C\u4F4D\u6216\u201D\u64CD\u4F5C\u7B26\u5B9E\u73B0</strong>\uFF1A \u6BD4\u5982\uFF1Aint key = SelectionKey.OP_READ | SelectionKey.OP_WRITE ;</p></li></ul><p>\uFF083\uFF09\u9009\u62E9\u5668\u67E5\u8BE2\u7684\u4E0D\u662F\u901A\u9053\u7684\u64CD\u4F5C\uFF0C\u800C\u662F\u901A\u9053\u7684\u67D0\u4E2A\u64CD\u4F5C\u7684\u4E00\u79CD\u5C31\u7EEA\u72B6\u6001\u3002\u4EC0\u4E48\u662F\u64CD\u4F5C\u7684\u5C31\u7EEA\u72B6\u6001\uFF1F\u4E00\u65E6\u901A\u9053\u5177\u5907\u5B8C\u6210\u67D0\u4E2A\u64CD\u4F5C\u7684\u6761\u4EF6\uFF0C\u8868\u793A\u8BE5\u901A\u9053\u7684\u67D0\u4E2A\u64CD\u4F5C\u5DF2\u7ECF\u5C31\u7EEA\uFF0C\u5C31\u53EF\u4EE5\u88ABSelector\u67E5\u8BE2\u5230\uFF0C\u7A0B\u5E8F\u53EF\u4EE5\u5BF9\u901A\u9053\u8FDB\u884C\u5BF9\u5E94\u7684\u64CD\u4F5C\u3002\u6BD4\u65B9\u8BF4\uFF0C\u67D0\u4E2ASocketChannel\u901A\u9053\u53EF\u4EE5\u8FDE\u63A5\u5230\u4E00\u4E2A\u670D\u52A1\u5668\uFF0C\u5219\u5904\u4E8E\u201C\u8FDE\u63A5\u5C31\u7EEA\u201D(OP_CONNECT)\u3002\u518D\u6BD4\u65B9\u8BF4\uFF0C\u4E00\u4E2AServerSocketChannel\u670D\u52A1\u5668\u901A\u9053\u51C6\u5907\u597D\u63A5\u6536\u65B0\u8FDB\u5165\u7684\u8FDE\u63A5\uFF0C\u5219\u5904\u4E8E\u201C\u63A5\u6536\u5C31\u7EEA\u201D\uFF08OP_ACCEPT\uFF09\u72B6\u6001\u3002\u8FD8\u6BD4\u65B9\u8BF4\uFF0C\u4E00\u4E2A\u6709\u6570\u636E\u53EF\u8BFB\u7684\u901A\u9053\uFF0C\u53EF\u4EE5\u8BF4\u662F\u201C\u8BFB\u5C31\u7EEA\u201D(OP_READ)\u3002\u4E00\u4E2A\u7B49\u5F85\u5199\u6570\u636E\u7684\u901A\u9053\u53EF\u4EE5\u8BF4\u662F\u201C\u5199\u5C31\u7EEA\u201D(OP_WRITE)\u3002</p><h5 id="_4\u3001\u9009\u62E9\u952E-selectionkey" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u9009\u62E9\u952E-selectionkey" aria-hidden="true">#</a> 4\u3001\u9009\u62E9\u952E(SelectionKey)</h5><p>\uFF081\uFF09Channel\u6CE8\u518C\u5230\u540E\uFF0C\u5E76\u4E14\u4E00\u65E6\u901A\u9053\u5904\u4E8E\u67D0\u79CD\u5C31\u7EEA\u7684\u72B6\u6001\uFF0C\u5C31\u53EF\u4EE5\u88AB\u9009\u62E9\u5668\u67E5\u8BE2\u5230\u3002\u8FD9\u4E2A\u5DE5\u4F5C\uFF0C\u4F7F\u7528\u9009\u62E9\u5668Selector\u7684<strong>select\uFF08\uFF09<strong>\u65B9\u6CD5\u5B8C\u6210\u3002select\u65B9\u6CD5\u7684\u4F5C\u7528\uFF0C\u5BF9\u611F\u5174\u8DA3\u7684\u901A\u9053\u64CD\u4F5C\uFF0C\u8FDB\u884C</strong>\u5C31\u7EEA\u72B6\u6001\u7684\u67E5\u8BE2</strong>\u3002 \uFF082\uFF09Selector\u53EF\u4EE5\u4E0D\u65AD\u7684\u67E5\u8BE2Channel\u4E2D\u53D1\u751F\u7684\u64CD\u4F5C\u7684\u5C31\u7EEA\u72B6\u6001\u3002\u5E76\u4E14\u6311\u9009\u611F\u5174\u8DA3\u7684\u64CD\u4F5C\u5C31\u7EEA\u72B6\u6001\u3002\u4E00\u65E6\u901A\u9053\u6709\u64CD\u4F5C\u7684\u5C31\u7EEA\u72B6\u6001\u8FBE\u6210\uFF0C\u5E76\u4E14\u662FSelector\u611F\u5174\u8DA3\u7684\u64CD\u4F5C\uFF0C\u5C31\u4F1A\u88ABSelector\u9009\u4E2D\uFF0C\u653E\u5165<strong>\u9009\u62E9\u952E\u96C6\u5408</strong>\u4E2D\u3002 \uFF083\uFF09\u4E00\u4E2A\u9009\u62E9\u952E\uFF0C\u9996\u5148\u662F\u5305\u542B\u4E86\u6CE8\u518C\u5728Selector\u7684\u901A\u9053\u64CD\u4F5C\u7684<strong>\u7C7B\u578B</strong>\uFF0C\u6BD4\u65B9\u8BF4SelectionKey.OP_READ\u3002\u4E5F\u5305\u542B\u4E86\u7279\u5B9A\u7684\u901A\u9053\u4E0E\u7279\u5B9A\u7684\u9009\u62E9\u5668\u4E4B\u95F4\u7684<strong>\u6CE8\u518C\u5173\u7CFB</strong>\u3002 \u5F00\u53D1\u5E94\u7528\u7A0B\u5E8F\u662F\uFF0C\u9009\u62E9\u952E\u662F\u7F16\u7A0B\u7684\u5173\u952E\u3002NIO\u7684\u7F16\u7A0B\uFF0C\u5C31\u662F\u6839\u636E\u5BF9\u5E94\u7684\u9009\u62E9\u952E\uFF0C\u8FDB\u884C\u4E0D\u540C\u7684\u4E1A\u52A1\u903B\u8F91\u5904\u7406\u3002 \uFF084\uFF09\u9009\u62E9\u952E\u7684\u6982\u5FF5\uFF0C\u548C\u4E8B\u4EF6\u7684\u6982\u5FF5\u6BD4\u8F83\u76F8\u4F3C\u3002\u4E00\u4E2A\u9009\u62E9\u952E\u7C7B\u4F3C\u76D1\u542C\u5668\u6A21\u5F0F\u91CC\u8FB9\u7684\u4E00\u4E2A\u4E8B\u4EF6\u3002\u7531\u4E8ESelector\u4E0D\u662F\u4E8B\u4EF6\u89E6\u53D1\u7684\u6A21\u5F0F\uFF0C\u800C\u662F<strong>\u4E3B\u52A8\u53BB\u67E5\u8BE2</strong>\u7684\u6A21\u5F0F\uFF0C\u6240\u4EE5\u4E0D\u53EB\u4E8B\u4EF6Event\uFF0C\u800C\u662F\u53EBSelectionKey\u9009\u62E9\u952E\u3002</p><ul><li>NIO \u5E38\u5E38\u88AB\u53EB\u505A\u975E\u963B\u585E IO\uFF0C\u4E3B\u8981\u662F\u56E0\u4E3A NIO \u5728\u7F51\u7EDC\u901A\u4FE1\u4E2D\u7684\u975E\u963B\u585E\u7279\u6027\u88AB\u5E7F\u6CDB\u4F7F\u7528\u3002</li></ul><h4 id="selector\u7684\u4F7F\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#selector\u7684\u4F7F\u7528\u65B9\u6CD5" aria-hidden="true">#</a> Selector\u7684\u4F7F\u7528\u65B9\u6CD5</h4><h5 id="_1-selector-\u7684\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#_1-selector-\u7684\u521B\u5EFA" aria-hidden="true">#</a> 1.Selector \u7684\u521B\u5EFA</h5><p>\u901A\u8FC7\u8C03\u7528Selector.open()\u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2ASelector\u5BF9\u8C61\uFF0C\u5982\u4E0B\uFF1A</p><p>// 1\u3001\u83B7\u53D6Selector\u9009\u62E9\u5668 Selector selector = Selector.open();</p><h5 id="_2-\u6CE8\u518C-channel-\u5230-selector" tabindex="-1"><a class="header-anchor" href="#_2-\u6CE8\u518C-channel-\u5230-selector" aria-hidden="true">#</a> 2.\u6CE8\u518C Channel \u5230 Selector</h5><p>\u8981\u5B9E\u73B0Selector\u7BA1\u7406Channel\uFF0C\u9700\u8981\u5C06channel\u6CE8\u518C\u5230\u76F8\u5E94\u7684Selector\u4E0A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 1\u3001\u83B7\u53D6Selector\u9009\u62E9\u5668 Selector selector = Selector.open(); </span>
<span class="token comment">// 2\u3001\u83B7\u53D6\u901A\u9053 ServerSocketChannel serverSocketChannel = ServerSocketChannel.open(); </span>
<span class="token comment">// 3.\u8BBE\u7F6E\u4E3A\u975E\u963B\u585E serverSocketChannel.configureBlocking(false); </span>
<span class="token comment">// 4\u3001\u7ED1\u5B9A\u8FDE\u63A5 serverSocketChannel.bind(new InetSocketAddress(9999)); </span>
<span class="token comment">// 5\u3001\u5C06\u901A\u9053\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A,\u5E76\u5236\u5B9A\u76D1\u542C\u4E8B\u4EF6\u4E3A\uFF1A\u201C\u63A5\u6536\u201D\u4E8B\u4EF6 serverSocketChannel.register(selector,SelectionKey.OP_ACCEPT);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u901A\u8FC7\u8C03\u7528\u901A\u9053\u7684register()\u65B9\u6CD5\u4F1A\u5C06\u5B83\u6CE8\u518C\u5230\u4E00\u4E2A\u9009\u62E9\u5668\u4E0A\u3002 \u9996\u5148\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF1A \uFF081\uFF09\u4E0ESelector\u4E00\u8D77\u4F7F\u7528\u65F6\uFF0C<strong>Channel\u5FC5\u987B\u5904\u4E8E\u975E\u963B\u585E\u6A21\u5F0F\u4E0B</strong>\uFF0C\u5426\u5219\u5C06\u629B\u51FA\u5F02\u5E38IllegalBlockingModeException\u3002\u8FD9\u610F\u5473\u7740\uFF0CFileChannel\u4E0D\u80FD\u4E0ESelector\u4E00\u8D77\u4F7F\u7528\uFF0C\u56E0\u4E3AFileChannel\u4E0D\u80FD\u5207\u6362\u5230\u975E\u963B\u585E\u6A21\u5F0F\uFF0C\u800C\u5957\u63A5\u5B57\u76F8\u5173\u7684\u6240\u6709\u7684\u901A\u9053\u90FD\u53EF\u4EE5\u3002 \uFF082\uFF09\u4E00\u4E2A\u901A\u9053\uFF0C\u5E76\u6CA1\u6709\u4E00\u5B9A\u8981\u652F\u6301\u6240\u6709\u7684\u56DB\u79CD\u64CD\u4F5C\u3002\u6BD4\u5982\u670D\u52A1\u5668\u901A\u9053ServerSocketChannel\u652F\u6301Accept \u63A5\u53D7\u64CD\u4F5C\uFF0C\u800CSocketChannel\u5BA2\u6237\u7AEF\u901A\u9053\u5219\u4E0D\u652F\u6301\u3002\u53EF\u4EE5\u901A\u8FC7\u901A\u9053\u4E0A\u7684<strong>validOps()\u65B9\u6CD5\uFF0C\u6765\u83B7\u53D6\u7279\u5B9A\u901A\u9053\u4E0B\u6240\u6709\u652F\u6301\u7684\u64CD\u4F5C\u96C6\u5408</strong>\u3002</p><h5 id="_3-\u8F6E\u8BE2\u67E5\u8BE2\u5C31\u7EEA\u64CD\u4F5C\u8F6E\u8BE2\u67E5\u8BE2\u5C31\u7EEA\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_3-\u8F6E\u8BE2\u67E5\u8BE2\u5C31\u7EEA\u64CD\u4F5C\u8F6E\u8BE2\u67E5\u8BE2\u5C31\u7EEA\u64CD\u4F5C" aria-hidden="true">#</a> 3.\u8F6E\u8BE2\u67E5\u8BE2\u5C31\u7EEA\u64CD\u4F5C\u8F6E\u8BE2\u67E5\u8BE2\u5C31\u7EEA\u64CD\u4F5C</h5><p>\uFF081\uFF09\u901A\u8FC7Selector\u7684select\uFF08\uFF09\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u67E5\u8BE2\u51FA\u5DF2\u7ECF\u5C31\u7EEA\u7684\u901A\u9053\u64CD\u4F5C\uFF0C\u8FD9\u4E9B\u5C31\u7EEA\u7684\u72B6\u6001\u96C6\u5408\uFF0C\u5305\u5B58\u5728\u4E00\u4E2A\u5143\u7D20\u662FSelectionKey\u5BF9\u8C61\u7684Set\u96C6\u5408\u4E2D\u3002 \uFF082\uFF09\u4E0B\u9762\u662FSelector\u51E0\u4E2A\u91CD\u8F7D\u7684\u67E5\u8BE2select()\u65B9\u6CD5\uFF1A</p><ul><li><p>select():\u963B\u585E\u5230\u81F3\u5C11\u6709\u4E00\u4E2A\u901A\u9053\u5728\u4F60\u6CE8\u518C\u7684\u4E8B\u4EF6\u4E0A\u5C31\u7EEA\u4E86\u3002</p></li><li><p>select(long timeout)\uFF1A\u548Cselect()\u4E00\u6837\uFF0C\u4F46\u6700\u957F\u963B\u585E\u4E8B\u4EF6\u4E3Atimeout\u6BEB\u79D2\u3002</p></li><li><p>selectNow():\u975E\u963B\u585E\uFF0C\u53EA\u8981\u6709\u901A\u9053\u5C31\u7EEA\u5C31\u7ACB\u523B\u8FD4\u56DE\u3002 select()\u65B9\u6CD5\u8FD4\u56DE\u7684int\u503C\uFF0C\u8868\u793A\u6709\u591A\u5C11\u901A\u9053\u5DF2\u7ECF\u5C31\u7EEA\uFF0C\u66F4\u51C6\u786E\u7684\u8BF4\uFF0C\u662F\u81EA\u524D\u4E00\u6B21select\u65B9\u6CD5\u4EE5\u6765\u5230\u8FD9\u4E00\u6B21select\u65B9\u6CD5\u4E4B\u95F4\u7684\u65F6\u95F4\u6BB5\u4E0A\uFF0C\u6709\u591A\u5C11\u901A\u9053\u53D8\u6210\u5C31\u7EEA\u72B6\u6001\u3002 \u4F8B\u5982\uFF1A\u9996\u6B21\u8C03\u7528select()\u65B9\u6CD5\uFF0C\u5982\u679C\u6709\u4E00\u4E2A\u901A\u9053\u53D8\u6210\u5C31\u7EEA\u72B6\u6001\uFF0C\u8FD4\u56DE\u4E861\uFF0C\u82E5\u518D\u6B21\u8C03\u7528select()\u65B9\u6CD5\uFF0C\u5982\u679C\u53E6\u4E00\u4E2A\u901A\u9053\u5C31\u7EEA\u4E86\uFF0C\u5B83\u4F1A\u518D\u6B21\u8FD4\u56DE1\u3002\u5982\u679C\u5BF9\u7B2C\u4E00\u4E2A\u5C31\u7EEA\u7684channel\u6CA1\u6709\u505A\u4EFB\u4F55\u64CD\u4F5C\uFF0C\u73B0\u5728\u5C31\u6709\u4E24\u4E2A\u5C31\u7EEA\u7684\u901A\u9053\uFF0C\u4F46\u5728\u6BCF\u6B21select()\u65B9\u6CD5\u8C03\u7528\u4E4B\u95F4\uFF0C\u53EA\u6709\u4E00\u4E2A\u901A\u9053\u5C31\u7EEA\u4E86\u3002 \u4E00\u65E6\u8C03\u7528select()\u65B9\u6CD5\uFF0C\u5E76\u4E14\u8FD4\u56DE\u503C\u4E0D\u4E3A0\u65F6\uFF0C\u5728Selector\u4E2D\u6709\u4E00\u4E2AselectedKeys()\u65B9\u6CD5\uFF0C\u7528\u6765\u8BBF\u95EE\u5DF2\u9009\u62E9\u952E\u96C6\u5408\uFF0C\u8FED\u4EE3\u96C6\u5408\u7684\u6BCF\u4E00\u4E2A\u9009\u62E9\u952E\u5143\u7D20\uFF0C\u6839\u636E\u5C31\u7EEA\u64CD\u4F5C\u7684\u7C7B\u578B\uFF0C\u5B8C\u6210\u5BF9\u5E94\u7684\u64CD\u4F5C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token class-name">Set</span> selectedKeys <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">selectedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Iterator</span> keyIterator <span class="token operator">=</span> selectedKeys<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">while</span><span class="token punctuation">(</span>keyIterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token class-name">SelectionKey</span> key <span class="token operator">=</span> keyIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">if</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">isAcceptable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token comment">// a connection was accepted by a ServerSocketChannel. </span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">isConnectable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// a connection was established with a remote server. </span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">isReadable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token comment">// a channel is ready for reading </span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">isWritable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token comment">// a channel is ready for writing } keyIterator.remove(); </span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h5 id="_4-\u505C\u6B62\u9009\u62E9\u7684\u65B9\u6CD5\u505C\u6B62\u9009\u62E9\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4-\u505C\u6B62\u9009\u62E9\u7684\u65B9\u6CD5\u505C\u6B62\u9009\u62E9\u7684\u65B9\u6CD5" aria-hidden="true">#</a> 4.\u505C\u6B62\u9009\u62E9\u7684\u65B9\u6CD5\u505C\u6B62\u9009\u62E9\u7684\u65B9\u6CD5</h5><p>\u200B \u9009\u62E9\u5668\u6267\u884C\u9009\u62E9\u7684\u8FC7\u7A0B\uFF0C\u7CFB\u7EDF\u5E95\u5C42\u4F1A\u4F9D\u6B21\u8BE2\u95EE\u6BCF\u4E2A\u901A\u9053\u662F\u5426\u5DF2\u7ECF\u5C31\u7EEA\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u53EF\u80FD\u4F1A\u9020\u6210\u8C03\u7528\u7EBF\u7A0B\u8FDB\u5165\u963B\u585E\u72B6\u6001,\u90A3\u4E48\u6211\u4EEC\u6709\u4EE5\u4E0B\u4E09\u79CD\u65B9\u5F0F\u53EF\u4EE5\u5524\u9192\u5728select\uFF08\uFF09\u65B9\u6CD5\u4E2D\u963B\u585E\u7684\u7EBF\u7A0B\u3002 wakeup()\u65B9\u6CD5 \uFF1A\u901A\u8FC7\u8C03\u7528Selector\u5BF9\u8C61\u7684wakeup\uFF08\uFF09\u65B9\u6CD5\u8BA9\u5904\u5728\u963B\u585E\u72B6\u6001\u7684select()\u65B9\u6CD5\u7ACB\u523B\u8FD4\u56DE \u8BE5\u65B9\u6CD5\u4F7F\u5F97\u9009\u62E9\u5668\u4E0A\u7684\u7B2C\u4E00\u4E2A\u8FD8\u6CA1\u6709\u8FD4\u56DE\u7684\u9009\u62E9\u64CD\u4F5C\u7ACB\u5373\u8FD4\u56DE\u3002\u5982\u679C\u5F53\u524D\u6CA1\u6709\u8FDB\u884C\u4E2D\u7684\u9009\u62E9\u64CD\u4F5C\uFF0C\u90A3\u4E48\u4E0B\u4E00\u6B21\u5BF9select()\u65B9\u6CD5\u7684\u4E00\u6B21\u8C03\u7528\u5C06\u7ACB\u5373\u8FD4\u56DE\u3002 close()\u65B9\u6CD5 \uFF1A\u901A\u8FC7close\uFF08\uFF09\u65B9\u6CD5\u5173\u95EDSelector\uFF0C \u8BE5\u65B9\u6CD5\u4F7F\u5F97\u4EFB\u4F55\u4E00\u4E2A\u5728\u9009\u62E9\u64CD\u4F5C\u4E2D\u963B\u585E\u7684\u7EBF\u7A0B\u90FD\u88AB\u5524\u9192\uFF08\u7C7B\u4F3Cwakeup\uFF08\uFF09\uFF09\uFF0C\u540C\u65F6\u4F7F\u5F97\u6CE8\u518C\u5230\u8BE5Selector\u7684\u6240\u6709Channel\u88AB\u6CE8\u9500\uFF0C\u6240\u6709\u7684\u952E\u5C06\u88AB\u53D6\u6D88\uFF0C\u4F46\u662FChannel\u672C\u8EAB\u5E76\u4E0D\u4F1A\u5173\u95ED\u3002</p><h4 id="\u793A\u4F8B\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B\u4EE3\u7801" aria-hidden="true">#</a> \u793A\u4F8B\u4EE3\u7801</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetSocketAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SelectionKey</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">Selector</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">ServerSocketChannel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SocketChannel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">StandardCharsets</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SelectorDemo</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u670D\u52A1\u7AEF</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">ServerDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
<span class="token comment">//      1.\u83B7\u53D6\u670D\u52A1\u7AEF\u901A\u9053</span>
        <span class="token class-name">ServerSocketChannel</span> ssc <span class="token operator">=</span> <span class="token class-name">ServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        2.\u7ED1\u5B9A\u7AEF\u53E3\u53F7</span>
        ssc<span class="token punctuation">.</span><span class="token function">socket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        3.\u5207\u6362\u975E\u963B\u585E\u6A21\u5F0F</span>
        ssc<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        4.\u521B\u5EFA\u9009\u62E9\u5668</span>
        <span class="token class-name">Selector</span> selector <span class="token operator">=</span> <span class="token class-name">Selector</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        5.\u6CE8\u518Cchannel\uFF0C\u5E76\u4E14\u6307\u5B9A\u611F\u5174\u8DA3\u7684\u4E8B\u4EF6\u662F Accept</span>
        ssc<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_ACCEPT<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        6.\u521B\u5EFAbuffer</span>
        <span class="token class-name">ByteBuffer</span> readBuff <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> writeBuff <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        writeBuff<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;received&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        writeBuff<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//            7.\u68C0\u6D4B\u901A\u9053\u5C31\u7EEA\u72B6\u6001</span>
            <span class="token keyword">int</span> nReady <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            8.\u904D\u5386\u9009\u62E9\u5668\uFF0C\u83B7\u53D6\u5C31\u7EEA\u901A\u9053\u96C6\u5408</span>
            <span class="token class-name">Set</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> keys <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">selectedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Iterator</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span> keys<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">SelectionKey</span> key <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                it<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                \u5224\u65AD\u72B6\u6001</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">isAcceptable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//              \u521B\u5EFA\u65B0\u7684\u8FDE\u63A5\uFF0C\u5E76\u4E14\u628A\u8FDE\u63A5\u6CE8\u518C\u5230selector\u4E0A\uFF0C\u8FDB\u884C\u76D1\u542C\uFF0C\u58F0\u660E\u8FD9\u4E2Achannel\u53EA\u5BF9\u8BFB\u64CD\u4F5C\u611F\u5174\u8DA3\u3002</span>
                    <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> ssc<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                    \u5207\u6362\u5230\u975E\u963B\u585E</span>
                    socketChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                    \u6CE8\u518C</span>
                    socketChannel<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">isReadable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//                    \u83B7\u53D6\u901A\u9053</span>
                    <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SocketChannel</span><span class="token punctuation">)</span> key<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    readBuff<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    socketChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>readBuff<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    readBuff<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;received : &quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>readBuff<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    key<span class="token punctuation">.</span><span class="token function">interestOps</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_WRITE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">isWritable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    writeBuff<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SocketChannel</span><span class="token punctuation">)</span> key<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    socketChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>writeBuff<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    key<span class="token punctuation">.</span><span class="token function">interestOps</span><span class="token punctuation">(</span><span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token comment">//\u5BA2\u6237\u7AEF\u4EE3\u7801</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">ClientDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
<span class="token comment">//            1.\u83B7\u53D6\u901A\u9053\uFF0C\u7ED1\u5B9A\u4E3B\u673A\u4E0E\u7AEF\u53E3\u53F7</span>
        <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> <span class="token class-name">SocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            2.\u5207\u6362\u5230\u975E\u963B\u585E\u6A21\u5F0F</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            3.\u521B\u5EFAbuffer</span>
        <span class="token class-name">ByteBuffer</span> writeBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> readBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            4.\u5199\u5165buffer\u6570\u636E</span>
        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> str <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">//            writeBuffer.put(&quot;hello&quot;.getBytes());</span>
            writeBuffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;----&gt;&quot;</span> <span class="token operator">+</span> str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            5.\u6A21\u5F0F\u5207\u6362</span>
            writeBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5C06position\u8BBE\u56DE0</span>
                writeBuffer<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                6.\u5199\u5165\u901A\u9053</span>
                socketChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>writeBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                7.\u5173\u95ED</span>
                readBuffer<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                socketChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>readBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token comment">//              \u8F93\u5165\u65B9\u5F0F \u5BA2\u6237\u7AEF</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">//            1.\u83B7\u53D6\u901A\u9053\uFF0C\u7ED1\u5B9A\u4E3B\u673A\u4E0E\u7AEF\u53E3\u53F7</span>
        <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> <span class="token class-name">SocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            2.\u5207\u6362\u5230\u975E\u963B\u585E\u6A21\u5F0F</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            3.\u521B\u5EFAbuffer  \u8D85\u8FC7\u4F1A\u62A5\u9519Exception in thread &quot;main&quot; java.nio.BufferOverflowException</span>
        <span class="token class-name">ByteBuffer</span> writeBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> readBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            4.\u5199\u5165buffer\u6570\u636E</span>
        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> str <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">//            writeBuffer.put(&quot;hello&quot;.getBytes());</span>
            writeBuffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;----&gt;&quot;</span> <span class="token operator">+</span> str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            5.\u6A21\u5F0F\u5207\u6362</span>
            writeBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5C06position\u8BBE\u56DE0</span>
                writeBuffer<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                6.\u5199\u5165\u901A\u9053</span>
                socketChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>writeBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                7.\u5173\u95ED</span>
                readBuffer<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                socketChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>readBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="nio\u7F16\u7A0B\u6B65\u9AA4\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#nio\u7F16\u7A0B\u6B65\u9AA4\u603B\u7ED3" aria-hidden="true">#</a> NIO\u7F16\u7A0B\u6B65\u9AA4\u603B\u7ED3</h4><p>\u7B2C\u4E00\u6B65\uFF1A\u521B\u5EFASelector\u9009\u62E9\u5668 \u7B2C\u4E8C\u6B65\uFF1A\u521B\u5EFAServerSocketChannel\u901A\u9053\uFF0C\u5E76\u7ED1\u5B9A\u76D1\u542C\u7AEF\u53E3 \u7B2C\u4E09\u6B65\uFF1A\u8BBE\u7F6EChannel\u901A\u9053\u662F\u975E\u963B\u585E\u6A21\u5F0F \u7B2C\u56DB\u6B65\uFF1A\u628AChannel\u6CE8\u518C\u5230Socketor\u9009\u62E9\u5668\u4E0A\uFF0C\u76D1\u542C\u8FDE\u63A5\u4E8B\u4EF6 \u7B2C\u4E94\u6B65\uFF1A\u8C03\u7528Selector\u7684select\u65B9\u6CD5\uFF08\u5FAA\u73AF\u8C03\u7528\uFF09\uFF0C\u76D1\u6D4B\u901A\u9053\u7684\u5C31\u7EEA\u72B6\u51B5 \u7B2C\u516D\u6B65\uFF1A\u8C03\u7528selectKeys\u65B9\u6CD5\u83B7\u53D6\u5C31\u7EEAchannel\u96C6\u5408 \u7B2C\u4E03\u6B65\uFF1A\u904D\u5386\u5C31\u7EEAchannel\u96C6\u5408\uFF0C\u5224\u65AD\u5C31\u7EEA\u4E8B\u4EF6\u7C7B\u578B\uFF0C\u5B9E\u73B0\u5177\u4F53\u7684\u4E1A\u52A1\u64CD\u4F5C \u7B2C\u516B\u6B65\uFF1A\u6839\u636E\u4E1A\u52A1\uFF0C\u51B3\u5B9A\u662F\u5426\u9700\u8981\u518D\u6B21\u6CE8\u518C\u76D1\u542C\u4E8B\u4EF6\uFF0C\u91CD\u590D\u6267\u884C\u7B2C\u4E09\u6B65\u64CD\u4F5C</p><ol><li>\u521B\u5EFA\u9009\u62E9\u5668</li></ol><p>Selector selector = Selector.open();</p><ol start="2"><li>\u5C06\u901A\u9053\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A ServerSocketChannel ssChannel = ServerSocketChannel.open(); ssChannel.configureBlocking(false); ssChannel.register(selector, SelectionKey.OP_ACCEPT); \u901A\u9053\u5FC5\u987B\u914D\u7F6E\u4E3A\u975E\u963B\u585E\u6A21\u5F0F\uFF0C\u5426\u5219\u4F7F\u7528\u9009\u62E9\u5668\u5C31\u6CA1\u6709\u4EFB\u4F55\u610F\u4E49\u4E86\uFF0C\u56E0\u4E3A\u5982\u679C\u901A\u9053\u5728\u67D0\u4E2A\u4E8B\u4EF6\u4E0A\u88AB\u963B\u585E\uFF0C\u90A3\u4E48\u670D\u52A1\u5668\u5C31\u4E0D\u80FD\u54CD\u5E94\u5176\u5B83\u4E8B\u4EF6\uFF0C\u5FC5\u987B\u7B49\u5F85\u8FD9\u4E2A\u4E8B\u4EF6\u5904\u7406\u5B8C\u6BD5\u624D\u80FD\u53BB\u5904\u7406\u5176\u5B83\u4E8B\u4EF6\uFF0C\u663E\u7136\u8FD9\u548C\u9009\u62E9\u5668\u7684\u4F5C\u7528\u80CC\u9053\u800C\u9A70\u3002</li></ol><p>\u5728\u5C06\u901A\u9053\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A\u65F6\uFF0C\u8FD8\u9700\u8981\u6307\u5B9A\u8981\u6CE8\u518C\u7684\u5177\u4F53\u4E8B\u4EF6\uFF0C\u4E3B\u8981\u6709\u4EE5\u4E0B\u51E0\u7C7B\uFF1A</p><p>SelectionKey.OP_CONNECT SelectionKey.OP_ACCEPT SelectionKey.OP_READ SelectionKey.OP_WRITE \u5B83\u4EEC\u5728 SelectionKey \u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><p>public static final int OP_READ = 1 &lt;&lt; 0; public static final int OP_WRITE = 1 &lt;&lt; 2; public static final int OP_CONNECT = 1 &lt;&lt; 3; public static final int OP_ACCEPT = 1 &lt;&lt; 4; \u53EF\u4EE5\u770B\u51FA\u6BCF\u4E2A\u4E8B\u4EF6\u53EF\u4EE5\u88AB\u5F53\u6210\u4E00\u4E2A\u4F4D\u57DF\uFF0C\u4ECE\u800C\u7EC4\u6210\u4E8B\u4EF6\u96C6\u6574\u6570\u3002\u4F8B\u5982\uFF1A</p><p>int interestSet = SelectionKey.OP_READ | SelectionKey.OP_WRITE;</p><ol start="3"><li><p>\u76D1\u542C\u4E8B\u4EF6 int num = selector.select(); \u4F7F\u7528 select() \u6765\u76D1\u542C\u5230\u8FBE\u7684\u4E8B\u4EF6\uFF0C\u5B83\u4F1A\u4E00\u76F4\u963B\u585E\u76F4\u5230\u6709\u81F3\u5C11\u4E00\u4E2A\u4E8B\u4EF6\u5230\u8FBE\u3002</p></li><li><p>\u83B7\u53D6\u5230\u8FBE\u7684\u4E8B\u4EF6 Set&lt;SelectionKey&gt; keys = selector.selectedKeys(); Iterator&lt;SelectionKey&gt; keyIterator = keys.iterator(); while (keyIterator.hasNext()) { SelectionKey key = keyIterator.next(); if (key.isAcceptable()) { // ... } else if (key.isReadable()) { // ... } keyIterator.remove(); }</p></li><li><p>\u4E8B\u4EF6\u5FAA\u73AF \u56E0\u4E3A\u4E00\u6B21 select() \u8C03\u7528\u4E0D\u80FD\u5904\u7406\u5B8C\u6240\u6709\u7684\u4E8B\u4EF6\uFF0C\u5E76\u4E14\u670D\u52A1\u5668\u7AEF\u6709\u53EF\u80FD\u9700\u8981\u4E00\u76F4\u76D1\u542C\u4E8B\u4EF6\uFF0C\u56E0\u6B64\u670D\u52A1\u5668\u7AEF\u5904\u7406\u4E8B\u4EF6\u7684\u4EE3\u7801\u4E00\u822C\u4F1A\u653E\u5728\u4E00\u4E2A\u6B7B\u5FAA\u73AF\u5185\u3002</p></li></ol><p>while (true) { int num = selector.select(); Set&lt;SelectionKey&gt; keys = selector.selectedKeys(); Iterator&lt;SelectionKey&gt; keyIterator = keys.iterator(); while (keyIterator.hasNext()) { SelectionKey key = keyIterator.next(); if (key.isAcceptable()) { // ... } else if (key.isReadable()) { // ... } keyIterator.remove(); } }</p><h3 id="pipe" tabindex="-1"><a class="header-anchor" href="#pipe" aria-hidden="true">#</a> Pipe</h3><p>Java NIO \u7BA1\u9053\u662F2\u4E2A\u7EBF\u7A0B\u4E4B\u95F4\u7684\u5355\u5411\u6570\u636E\u8FDE\u63A5\u3002Pipe\u6709\u4E00\u4E2Asource\u901A\u9053\u548C\u4E00\u4E2Asink\u901A\u9053\u3002\u6570\u636E\u4F1A\u88AB\u5199\u5230sink\u901A\u9053\uFF0C\u4ECEsource\u901A\u9053\u8BFB\u53D6\u3002</p><p><img src="http://qnimg.gisfsde.com/work/image-20220222134658767.png" alt="image-20220222134658767" loading="lazy"></p><h4 id="_1\u3001\u521B\u5EFA\u7BA1\u9053" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u521B\u5EFA\u7BA1\u9053" aria-hidden="true">#</a> 1\u3001\u521B\u5EFA\u7BA1\u9053</h4><p>\u901A\u8FC7Pipe.open()\u65B9\u6CD5\u6253\u5F00\u7BA1\u9053\u3002 Pipe pipe = Pipe.open();</p><h4 id="_2\u3001\u5199\u5165\u7BA1\u9053" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u5199\u5165\u7BA1\u9053" aria-hidden="true">#</a> 2\u3001\u5199\u5165\u7BA1\u9053</h4>`,131),$n=n("p",{"sinkChannel.write(buf);":""},'\u8981\u5411\u7BA1\u9053\u5199\u6570\u636E\uFF0C\u9700\u8981\u8BBF\u95EEsink\u901A\u9053\u3002\uFF1A Pipe.SinkChannel sinkChannel = pipe.sink(); \u901A\u8FC7\u8C03\u7528SinkChannel\u7684write()\u65B9\u6CD5\uFF0C\u5C06\u6570\u636E\u5199\u5165SinkChannel\uFF1A String newData = "New String to write to file..." + System.currentTimeMillis(); ByteBuffer buf = ByteBuffer.allocate(48); buf.clear(); buf.put(newData.getBytes()); buf.flip(); while(buf.hasRemaining())',-1),ns=p(`<h4 id="_3\u3001\u4ECE\u7BA1\u9053\u8BFB\u53D6\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u4ECE\u7BA1\u9053\u8BFB\u53D6\u6570\u636E" aria-hidden="true">#</a> 3\u3001\u4ECE\u7BA1\u9053\u8BFB\u53D6\u6570\u636E</h4><p>\u8BBF\u95EEsource\u901A\u9053 Pipe.SourceChannel sourceChannel = pipe.source(); \u8C03\u7528source\u901A\u9053\u7684read()\u65B9\u6CD5\u6765\u8BFB\u53D6\u6570\u636E\uFF1A ByteBuffer buf = ByteBuffer.allocate(48); int bytesRead = sourceChannel.read(buf); read()\u65B9\u6CD5\u8FD4\u56DE\u7684int\u503C\u4F1A\u544A\u8BC9\u6211\u4EEC\u591A\u5C11\u5B57\u8282\u88AB\u8BFB\u8FDB\u4E86\u7F13\u51B2\u533A\u3002</p><h4 id="_4\u3001\u4EE3\u7801\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u4EE3\u7801\u793A\u4F8B" aria-hidden="true">#</a> 4\u3001\u4EE3\u7801\u793A\u4F8B</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">pers<span class="token punctuation">.</span>lxl<span class="token punctuation">.</span>mylearnproject<span class="token punctuation">.</span>javase<span class="token punctuation">.</span>io<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>pipe</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">Pipe</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PipeDemo</span> <span class="token punctuation">{</span>

<span class="token comment">//        1.\u83B7\u53D6\u7BA1\u9053</span>
<span class="token comment">//        2\u83B7\u53D6sink\u901A\u9053</span>
<span class="token comment">//        3.\u521B\u5EFA\u7F13\u51B2\u533A</span>
<span class="token comment">//        4.\u5199\u5165\u6570\u636E</span>
<span class="token comment">//        5.\u83B7\u53D6source\u901A\u9053</span>
<span class="token comment">//        6.\u521B\u5EFAsource\u901A\u9053</span>
<span class="token comment">//        7.\u521B\u5EFA\u7F13\u51B2\u533A\uFF0C\u8BFB\u53D6\u6570\u636E</span>
<span class="token comment">//        8.\u5173\u95ED\u901A\u9053</span>
    <span class="token comment">/**/</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPipe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1\u3001\u83B7\u53D6\u901A\u9053</span>
        <span class="token class-name">Pipe</span> pipe <span class="token operator">=</span> <span class="token class-name">Pipe</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2\u3001\u83B7\u53D6sink\u7BA1\u9053\uFF0C\u7528\u6765\u4F20\u9001\u6570\u636E</span>
        <span class="token class-name">Pipe<span class="token punctuation">.</span>SinkChannel</span> sinkChannel <span class="token operator">=</span> pipe<span class="token punctuation">.</span><span class="token function">sink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3\u3001\u7533\u8BF7\u4E00\u5B9A\u5927\u5C0F\u7684\u7F13\u51B2\u533A</span>
        <span class="token class-name">ByteBuffer</span> byteBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        byteBuffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;atguigu&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        byteBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4\u3001sink\u53D1\u9001\u6570\u636E</span>
        sinkChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5\u3001\u521B\u5EFA\u63A5\u6536pipe\u6570\u636E\u7684source\u7BA1\u9053</span>
        <span class="token class-name">Pipe<span class="token punctuation">.</span>SourceChannel</span> sourceChannel <span class="token operator">=</span> pipe<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 6\u3001\u63A5\u6536\u6570\u636E\uFF0C\u5E76\u4FDD\u5B58\u5230\u7F13\u51B2\u533A\u4E2D</span>
        <span class="token class-name">ByteBuffer</span> byteBuffer2 <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> length <span class="token operator">=</span> sourceChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>byteBuffer2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>byteBuffer2<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sourceChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sinkChannel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filelock" tabindex="-1"><a class="header-anchor" href="#filelock" aria-hidden="true">#</a> FileLock</h3><h4 id="_1\u3001-filelock-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1\u3001-filelock-\u7B80\u4ECB" aria-hidden="true">#</a> 1\u3001 FileLock \u7B80\u4ECB</h4><p>\u200B \u6587\u4EF6\u9501\u5728OS\u4E2D\u5F88\u5E38\u89C1\uFF0C\u5982\u679C\u591A\u4E2A\u7A0B\u5E8F\u540C\u65F6\u8BBF\u95EE\u3001\u4FEE\u6539\u540C\u4E00\u4E2A\u6587\u4EF6\uFF0C\u5F88\u5BB9\u6613\u56E0\u4E3A\u6587\u4EF6\u6570\u636E\u4E0D\u540C\u6B65\u800C\u51FA\u73B0\u95EE\u9898\u3002\u7ED9\u6587\u4EF6\u52A0\u4E00\u4E2A\u9501\uFF0C\u540C\u4E00\u65F6\u95F4\uFF0C\u53EA\u80FD\u6709\u4E00\u4E2A\u7A0B\u5E8F\u4FEE\u6539\u6B64\u6587\u4EF6\uFF0C\u6216\u8005\u7A0B\u5E8F\u90FD\u53EA\u80FD\u8BFB\u6B64\u6587\u4EF6\uFF0C\u8FD9\u5C31\u89E3\u51B3\u4E86\u540C\u6B65\u95EE\u9898\u3002 \u200B \u6587\u4EF6\u9501\u662F<strong>\u8FDB\u7A0B\u7EA7\u522B</strong>\u7684\uFF0C\u4E0D\u662F\u7EBF\u7A0B\u7EA7\u522B\u7684\u3002\u6587\u4EF6\u9501\u53EF\u4EE5\u89E3\u51B3\u591A\u4E2A\u8FDB\u7A0B\u5E76\u53D1\u8BBF\u95EE\u3001\u4FEE\u6539\u540C\u4E00\u4E2A\u6587\u4EF6\u7684\u95EE\u9898\uFF0C\u4F46\u4E0D\u80FD\u89E3\u51B3\u591A\u7EBF\u7A0B\u5E76\u53D1\u8BBF\u95EE\u3001\u4FEE\u6539\u540C\u4E00\u6587\u4EF6\u7684\u95EE\u9898\u3002\u4F7F\u7528\u6587\u4EF6\u9501\u65F6\uFF0C\u540C\u4E00\u8FDB\u7A0B\u5185\u7684\u591A\u4E2A\u7EBF\u7A0B\uFF0C\u53EF\u4EE5\u540C\u65F6\u8BBF\u95EE\u3001\u4FEE\u6539\u6B64\u6587\u4EF6\u3002 \u200B \u6587\u4EF6\u9501\u662F\u5F53\u524D\u7A0B\u5E8F\u6240\u5C5E\u7684JVM\u5B9E\u4F8B\u6301\u6709\u7684\uFF0C\u4E00\u65E6\u83B7\u53D6\u5230\u6587\u4EF6\u9501\uFF08\u5BF9\u6587\u4EF6\u52A0\u9501\uFF09\uFF0C\u8981\u8C03\u7528release()\uFF0C\u6216\u8005\u5173\u95ED\u5BF9\u5E94\u7684FileChannel\u5BF9\u8C61\uFF0C\u6216\u8005\u5F53\u524DJVM\u9000\u51FA\uFF0C\u624D\u4F1A\u91CA\u653E\u8FD9\u4E2A\u9501\u3002 \u200B \u4E00\u65E6\u67D0\u4E2A\u8FDB\u7A0B\uFF08\u6BD4\u5982\u8BF4JVM\u5B9E\u4F8B\uFF09\u5BF9\u67D0\u4E2A\u6587\u4EF6\u52A0\u9501\uFF0C\u5219\u5728\u91CA\u653E\u8FD9\u4E2A\u9501\u4E4B\u524D\uFF0C\u6B64\u8FDB\u7A0B\u4E0D\u80FD\u518D\u5BF9\u6B64\u6587\u4EF6\u52A0\u9501\uFF0C\u5C31\u662F\u8BF4JVM\u5B9E\u4F8B\u5728\u540C\u4E00\u6587\u4EF6\u4E0A\u7684\u6587\u4EF6\u9501\u662F\u4E0D\u91CD\u53E0\u7684\uFF08\u8FDB\u7A0B\u7EA7\u522B\u4E0D\u80FD\u91CD\u590D\u5728\u540C\u4E00\u6587\u4EF6\u4E0A\u83B7\u53D6\u9501\uFF09\u3002</p><h4 id="_2\u3001\u6587\u4EF6\u9501\u5206\u7C7B-\u6587\u4EF6\u9501\u5206\u7C7B" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u6587\u4EF6\u9501\u5206\u7C7B-\u6587\u4EF6\u9501\u5206\u7C7B" aria-hidden="true">#</a> 2\u3001\u6587\u4EF6\u9501\u5206\u7C7B\uFF1A\u6587\u4EF6\u9501\u5206\u7C7B\uFF1A</h4><p>\u200B <strong>\u6392\u5B83\u9501</strong>\uFF1A\u53C8\u53EB\u72EC\u5360\u9501\u3002\u5BF9\u6587\u4EF6\u52A0\u6392\u5B83\u9501\u540E\uFF0C\u8BE5\u8FDB\u7A0B\u53EF\u4EE5\u5BF9\u6B64\u6587\u4EF6\u8FDB\u884C\u8BFB\u5199\uFF0C\u8BE5\u8FDB\u7A0B\u72EC\u5360\u6B64\u6587\u4EF6\uFF0C\u5176\u4ED6\u8FDB\u7A0B\u4E0D\u80FD\u8BFB\u5199\u6B64\u6587\u4EF6\uFF0C\u76F4\u5230\u8BE5\u8FDB\u7A0B\u91CA\u653E\u6587\u4EF6\u9501\u3002 \u200B <strong>\u5171\u4EAB\u9501</strong>\uFF1A\u67D0\u4E2A\u8FDB\u7A0B\u5BF9\u6587\u4EF6\u52A0\u5171\u4EAB\u9501\uFF0C\u5176\u4ED6\u8FDB\u7A0B\u4E5F\u53EF\u4EE5\u8BBF\u95EE\u6B64\u6587\u4EF6\uFF0C\u4F46\u8FD9\u4E9B\u8FDB\u7A0B\u90FD\u53EA\u80FD\u8BFB\u6B64\u6587\u4EF6\uFF0C\u4E0D\u80FD\u5199\u3002\u7EBF\u7A0B\u662F\u5B89\u5168\u7684\u3002\u53EA\u8981\u8FD8\u6709\u4E00\u4E2A\u8FDB\u7A0B\u6301\u6709\u5171\u4EAB\u9501\uFF0C\u6B64\u6587\u4EF6\u5C31\u53EA\u80FD\u8BFB\uFF0C\u4E0D\u80FD\u5199\u3002</p><h4 id="_3\u3001\u4F7F\u7528\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u4F7F\u7528\u793A\u4F8B" aria-hidden="true">#</a> 3\u3001\u4F7F\u7528\u793A\u4F8B</h4><p>//\u521B\u5EFAFileChannel\u5BF9\u8C61\uFF0C\u6587\u4EF6\u9501\u53EA\u80FD\u901A\u8FC7FileChannel\u5BF9\u8C61\u6765\u4F7F\u7528 FileChannel fileChannel=new FileOutputStream(&quot;./1.txt&quot;).getChannel(); //\u5BF9\u6587\u4EF6\u52A0\u9501 FileLock lock=fileChannel.lock(); //\u5BF9\u6B64\u6587\u4EF6\u8FDB\u884C\u4E00\u4E9B\u8BFB\u5199\u64CD\u4F5C\u3002 //....... //\u91CA\u653E\u9501 lock.release(); \u6587\u4EF6\u9501\u8981\u901A\u8FC7FileChannel\u5BF9\u8C61\u4F7F\u7528\u3002</p><h4 id="_4\u3001\u83B7\u53D6\u6587\u4EF6\u9501\u65B9\u6CD5\u3001\u83B7\u53D6\u6587\u4EF6\u9501\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u83B7\u53D6\u6587\u4EF6\u9501\u65B9\u6CD5\u3001\u83B7\u53D6\u6587\u4EF6\u9501\u65B9\u6CD5" aria-hidden="true">#</a> 4\u3001\u83B7\u53D6\u6587\u4EF6\u9501\u65B9\u6CD5\u3001\u83B7\u53D6\u6587\u4EF6\u9501\u65B9\u6CD5</h4><p>\u67094\u79CD\u83B7\u53D6\u6587\u4EF6\u9501\u7684\u65B9\u6CD5\uFF1A lock() //\u5BF9\u6574\u4E2A\u6587\u4EF6\u52A0\u9501\uFF0C\u9ED8\u8BA4\u4E3A\u6392\u5B83\u9501\u3002 lock(long position, long size, booean shared) //\u81EA\u5B9A\u4E49\u52A0\u9501\u65B9\u5F0F\u3002\u524D2\u4E2A\u53C2\u6570\u6307\u5B9A\u8981\u52A0\u9501\u7684\u90E8\u5206\uFF08\u53EF\u4EE5\u53EA\u5BF9\u6B64\u6587\u4EF6\u7684\u90E8\u5206\u5185\u5BB9\u52A0\u9501\uFF09\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570\u503C\u6307\u5B9A\u662F\u5426\u662F\u5171\u4EAB\u9501\u3002 tryLock() //\u5BF9\u6574\u4E2A\u6587\u4EF6\u52A0\u9501\uFF0C\u9ED8\u8BA4\u4E3A\u6392\u5B83\u9501\u3002 tryLock(long position, long size, booean shared) //\u81EA\u5B9A\u4E49\u52A0\u9501\u65B9\u5F0F\u3002 \u5982\u679C\u6307\u5B9A\u4E3A\u5171\u4EAB\u9501\uFF0C\u5219\u5176\u5B83\u8FDB\u7A0B\u53EF\u8BFB\u6B64\u6587\u4EF6\uFF0C\u6240\u6709\u8FDB\u7A0B\u5747\u4E0D\u80FD\u5199\u6B64\u6587\u4EF6\uFF0C\u5982\u679C\u67D0\u8FDB\u7A0B\u8BD5\u56FE\u5BF9\u6B64\u6587\u4EF6\u8FDB\u884C\u5199\u64CD\u4F5C\uFF0C\u4F1A\u629B\u51FA\u5F02\u5E38\u3002</p><h4 id="_5\u3001locklock\u4E0Etrylocktrylock\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_5\u3001locklock\u4E0Etrylocktrylock\u7684\u533A\u522B" aria-hidden="true">#</a> 5\u3001locklock\u4E0EtryLocktryLock\u7684\u533A\u522B</h4><p>lock\u662F\u963B\u585E\u5F0F\u7684\uFF0C\u5982\u679C\u672A\u83B7\u53D6\u5230\u6587\u4EF6\u9501\uFF0C\u4F1A\u4E00\u76F4\u963B\u585E\u5F53\u524D\u7EBF\u7A0B\uFF0C\u76F4\u5230\u83B7\u53D6\u6587\u4EF6\u9501 tryLock\u548Clock\u7684\u4F5C\u7528\u76F8\u540C\uFF0C\u53EA\u4E0D\u8FC7tryLock\u662F\u975E\u963B\u585E\u5F0F\u7684\uFF0CtryLock\u662F\u5C1D\u8BD5\u83B7\u53D6\u6587\u4EF6\u9501\uFF0C\u83B7\u53D6\u6210\u529F\u5C31\u8FD4\u56DE\u9501\u5BF9\u8C61\uFF0C\u5426\u5219\u8FD4\u56DEnull\uFF0C\u4E0D\u4F1A\u963B\u585E\u5F53\u524D\u7EBF\u7A0B\u3002</p><h4 id="_6\u3001filelock\u4E24\u4E2A\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_6\u3001filelock\u4E24\u4E2A\u65B9\u6CD5" aria-hidden="true">#</a> 6\u3001FileLock\u4E24\u4E2A\u65B9\u6CD5\uFF1A</h4><p>boolean isShared() //\u6B64\u6587\u4EF6\u9501\u662F\u5426\u662F\u5171\u4EAB\u9501 boolean isValid() //\u6B64\u6587\u4EF6\u9501\u662F\u5426\u8FD8\u6709\u6548 \u5728\u67D0\u4E9BOS\u4E0A\uFF0C\u5BF9\u67D0\u4E2A\u6587\u4EF6\u52A0\u9501\u540E\uFF0C\u4E0D\u80FD\u5BF9\u6B64\u6587\u4EF6\u4F7F\u7528\u901A\u9053\u6620\u5C04\u3002</p><h4 id="_7\u3001\u5B8C\u6574\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_7\u3001\u5B8C\u6574\u4F8B\u5B50" aria-hidden="true">#</a> 7\u3001\u5B8C\u6574\u4F8B\u5B50</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileReader</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">FileChannel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">FileLock</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Path</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Paths</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">StandardOpenOption</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileLockDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> input <span class="token operator">=</span> <span class="token string">&quot;atguigu&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8F93\u5165 :&quot;</span> <span class="token operator">+</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ByteBuffer</span> buf <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> fp <span class="token operator">=</span> <span class="token string">&quot;D:\\\\atguigu\\\\01.txt&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> pt <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileChannel</span> channel <span class="token operator">=</span> <span class="token class-name">FileChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span>pt<span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>WRITE<span class="token punctuation">,</span> <span class="token class-name">StandardOpenOption</span><span class="token punctuation">.</span>APPEND<span class="token punctuation">)</span><span class="token punctuation">;</span>
        channel<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span>channel<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// position of a cursor at the end of file</span>
        <span class="token comment">// \u83B7\u5F97\u9501\u65B9\u6CD5\u4E00\uFF1Alock()\uFF0C\u963B\u585E\u65B9\u6CD5\uFF0C\u5F53\u6587\u4EF6\u9501\u4E0D\u53EF\u7528\u65F6\uFF0C\u5F53\u524D\u8FDB\u7A0B\u4F1A\u88AB\u6302\u8D77</span>
<span class="token comment">//            lock = channel.lock();</span>
        <span class="token comment">// \u65E0\u53C2lock()\u4E3A\u72EC\u5360\u9501</span>
<span class="token comment">//            lock = channel.lock(0L, Long.MAX_VALUE, true);</span>
        <span class="token comment">//\u6709\u53C2lock()\u4E3A\u5171\u4EAB\u9501\uFF0C\u6709\u5199\u64CD\u4F5C\u4F1A\u62A5\u5F02\u5E38</span>
        <span class="token comment">// \u83B7\u5F97\u9501\u65B9\u6CD5\u4E8C\uFF1Atrylock()\uFF0C\u975E\u963B\u585E\u7684\u65B9\u6CD5\uFF0C\u5F53\u6587\u4EF6\u9501\u4E0D\u53EF\u7528\u65F6\uFF0CtryLock()\u4F1A\u5F97\u5230null\u503C</span>
        <span class="token class-name">FileLock</span> lock <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5171\u4EAB\u9501shared: &quot;</span> <span class="token operator">+</span> lock<span class="token punctuation">.</span><span class="token function">isShared</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        channel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        channel<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Releases the Lock</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5199\u64CD\u4F5C\u5B8C\u6210.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8BFB\u53D6\u6570\u636E</span>
        <span class="token function">readPrint</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">readPrint</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileReader</span> filereader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BufferedReader</span> bufferedreader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>filereader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> tr <span class="token operator">=</span> bufferedreader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\u5185\u5BB9: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>tr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span> <span class="token operator">+</span> tr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            tr <span class="token operator">=</span> bufferedreader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        filereader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bufferedreader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="path" tabindex="-1"><a class="header-anchor" href="#path" aria-hidden="true">#</a> Path</h3><h4 id="_1\u3001-path-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1\u3001-path-\u7B80\u4ECB" aria-hidden="true">#</a> 1\u3001 Path \u7B80\u4ECB</h4><p>Java Path\u63A5\u53E3\u662FJava NIO\u66F4\u65B0\u7684\u4E00\u90E8\u5206\uFF0C\u540CJava NIO\u4E00\u8D77\u5DF2\u7ECF\u5305\u62EC\u5728Java6\u548CJava7\u4E2D\u3002Java Path\u63A5\u53E3\u662F\u5728Java7\u4E2D\u6DFB\u52A0\u5230Java NIO\u7684\u3002Path\u63A5\u53E3\u4F4D\u4E8Ejava.nio.file\u5305\u4E2D\uFF0C\u6240\u4EE5Path\u63A5\u53E3\u7684\u5B8C\u5168\u9650\u5B9A\u540D\u79F0\u4E3Ajava.nio.file.Path\u3002 Java Path\u5B9E\u4F8B\u8868\u793A\u6587\u4EF6\u7CFB\u7EDF\u4E2D\u7684\u8DEF\u5F84\u3002\u4E00\u4E2A\u8DEF\u5F84\u53EF\u4EE5\u6307\u5411\u4E00\u4E2A\u6587\u4EF6\u6216\u4E00\u4E2A\u76EE\u5F55\u3002\u8DEF\u5F84\u53EF\u4EE5\u662F\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u4E5F\u53EF\u4EE5\u662F\u76F8\u5BF9\u8DEF\u5F84\u3002\u7EDD\u5BF9\u8DEF\u5F84\u5305\u542B\u4ECE\u6587\u4EF6\u7CFB\u7EDF\u7684\u6839\u76EE\u5F55\u5230\u5B83\u6307\u5411\u7684\u6587\u4EF6\u6216\u76EE\u5F55\u7684\u5B8C\u6574\u8DEF\u5F84\u3002\u76F8\u5BF9\u8DEF\u5F84\u5305\u542B\u76F8\u5BF9\u4E8E\u5176\u4ED6\u8DEF\u5F84\u7684\u6587\u4EF6\u6216\u76EE\u5F55\u7684\u8DEF\u5F84\u3002 \u5728\u8BB8\u591A\u65B9\u9762\uFF0Cjava.nio.file.Path\u63A5\u53E3\u7C7B\u4F3C\u4E8Ejava.io.File\u7C7B\uFF0C\u4F46\u662F\u6709\u4E00\u4E9B\u5DEE\u522B\u3002\u4E0D\u8FC7\uFF0C\u5728\u8BB8\u591A\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u4F7F\u7528Path\u63A5\u53E3\u6765\u66FF\u6362File\u7C7B\u7684\u4F7F\u7528\u3002</p><h4 id="_2\u3001\u521B\u5EFApath\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u521B\u5EFApath\u5B9E\u4F8B" aria-hidden="true">#</a> 2\u3001\u521B\u5EFAPath\u5B9E\u4F8B</h4><p>\u4F7F\u7528java.nio.file.Path\u5B9E\u4F8B\u5FC5\u987B\u521B\u5EFA\u4E00\u4E2APath\u5B9E\u4F8B\u3002\u53EF\u4EE5\u4F7F\u7528Paths\u7C7B(java.nio.file.Paths)\u4E2D\u7684\u9759\u6001\u65B9\u6CD5Paths.get()\u6765\u521B\u5EFA\u8DEF\u5F84\u5B9E\u4F8B\u3002 \u793A\u4F8B\u4EE3\u7801:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Path</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Paths</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PathDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Path</span> path <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;d:\\\\atguigu\\\\001.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A\uFF0CPaths.get()\u65B9\u6CD5\u662FPath\u5B9E\u4F8B\u7684\u5DE5\u5382\u65B9\u6CD5\u3002</p><h4 id="_3\u3001\u521B\u5EFA\u7EDD\u5BF9\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u521B\u5EFA\u7EDD\u5BF9\u8DEF\u5F84" aria-hidden="true">#</a> 3\u3001\u521B\u5EFA\u7EDD\u5BF9\u8DEF\u5F84</h4><p>\uFF081\uFF09\u521B\u5EFA\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u901A\u8FC7\u8C03\u7528Paths.get()\u65B9\u6CD5\uFF0C\u7ED9\u5B9A\u7EDD\u5BF9\u8DEF\u5F84\u6587\u4EF6\u4F5C\u4E3A\u53C2\u6570\u6765\u5B8C\u6210\u3002 \u793A\u4F8B\u4EE3\u7801\uFF1A Path path = Paths.get(&quot;d:\\atguigu\\001.txt&quot;); \u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C\u7EDD\u5BF9\u8DEF\u5F84\u662Fd:\\atguigu\\001.txt\u3002\u5728Java\u5B57\u7B26\u4E32\u4E2D\uFF0C \\\u662F\u4E00\u4E2A\u8F6C\u4E49\u5B57\u7B26\uFF0C\u9700\u8981\u7F16\u5199\\\uFF0C\u544A\u8BC9Java\u7F16\u8BD1\u5668\u5728\u5B57\u7B26\u4E32\u4E2D\u5199\u5165\u4E00\u4E2A\\\u5B57\u7B26\u3002 \uFF082\uFF09\u5982\u679C\u5728Linux\u3001MacOS\u7B49\u64CD\u4F5C\u5B57\u4F53\u4E0A\uFF0C\u4E0A\u9762\u7684\u7EDD\u5BF9\u8DEF\u5F84\u53EF\u80FD\u5982\u4E0B: Path path = Paths.get(&quot;/home/jakobjenkov/myfile.txt&quot;); \u7EDD\u5BF9\u8DEF\u5F84\u73B0\u5728\u4E3A/home/jakobjenkov/myfile.txt. \uFF083\uFF09\u5982\u679C\u5728Windows\u673A\u5668\u4E0A\u4F7F\u7528\u4E86\u4ECE/\u5F00\u59CB\u7684\u8DEF\u5F84\uFF0C\u90A3\u4E48\u8DEF\u5F84\u5C06\u88AB\u89E3\u91CA\u4E3A\u76F8\u5BF9\u4E8E\u5F53\u524D\u9A71\u52A8\u5668\u3002</p><h4 id="_4\u3001\u521B\u5EFA\u76F8\u5BF9\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u521B\u5EFA\u76F8\u5BF9\u8DEF\u5F84" aria-hidden="true">#</a> 4\u3001\u521B\u5EFA\u76F8\u5BF9\u8DEF\u5F84</h4><p>Java NIO Path\u7C7B\u4E5F\u53EF\u4EE5\u7528\u4E8E\u5904\u7406\u76F8\u5BF9\u8DEF\u5F84\u3002\u60A8\u53EF\u4EE5\u4F7F\u7528Paths.get(basePath, relativePath)\u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2A\u76F8\u5BF9\u8DEF\u5F84\u3002 \u793A\u4F8B\u4EE3\u7801: //\u4EE3\u78011 Path projects = Paths.get(&quot;d:\\atguigu&quot;, &quot;projects&quot;); //\u4EE3\u78012 Path file = Paths.get(&quot;d:\\atguigu&quot;, &quot;projects\\002.txt&quot;); \u4EE3\u78011\u521B\u5EFA\u4E86\u4E00\u4E2AJava Path\u7684\u5B9E\u4F8B\uFF0C\u6307\u5411\u8DEF\u5F84(\u76EE\u5F55):d:\\atguigu\\projects \u4EE3\u78012\u521B\u5EFA\u4E86\u4E00\u4E2APath\u7684\u5B9E\u4F8B\uFF0C\u6307\u5411\u8DEF\u5F84(\u6587\u4EF6):d:\\atguigu\\projects\\002.txt 5\u3001Path.normalize() Path\u63A5\u53E3\u7684normalize()\u65B9\u6CD5\u53EF\u4EE5\u4F7F\u8DEF\u5F84\u6807\u51C6\u5316\u3002\u6807\u51C6\u5316\u610F\u5473\u7740\u5B83\u5C06\u79FB\u9664\u6240\u6709\u5728\u8DEF\u5F84\u5B57\u7B26\u4E32\u7684\u4E2D\u95F4\u7684.\u548C..\u4EE3\u7801\uFF0C\u5E76\u89E3\u6790\u8DEF\u5F84\u5B57\u7B26\u4E32\u6240\u5F15\u7528\u7684\u8DEF\u5F84\u3002 Path.normalize()\u793A\u4F8B: String originalPath = &quot;d:\\atguigu\\projects\\..\\yygh-project&quot;; Path path1 = Paths.get(originalPath); System.out.println(&quot;path1 = &quot; + path1); Path path2 = path1.normalize(); System.out.println(&quot;path2 = &quot; + path2); \u8F93\u51FA\u7ED3\u679C\uFF1A\u6807\u51C6\u5316\u7684\u8DEF\u5F84\u4E0D\u5305\u542Bprojects..\u90E8\u5206</p><h3 id="files" tabindex="-1"><a class="header-anchor" href="#files" aria-hidden="true">#</a> Files</h3><p>Java NIO Files\u7C7B(java.nio.file.Files)\u63D0\u4F9B\u4E86\u51E0\u79CD\u64CD\u4F5C\u6587\u4EF6\u7CFB\u7EDF\u4E2D\u7684\u6587\u4EF6\u7684\u65B9\u6CD5\u3002\u4EE5\u4E0B\u5185\u5BB9\u4ECB\u7ECDJava NIO Files\u6700\u5E38\u7528\u7684\u4E00\u4E9B\u65B9\u6CD5\u3002java.nio.file.Files\u7C7B\u4E0Ejava.nio.file.Path\u5B9E\u4F8B\u4E00\u8D77\u5DE5\u4F5C\uFF0C\u56E0\u6B64\u5728\u5B66\u4E60Files\u7C7B\u4E4B\u524D\uFF0C\u9700\u8981\u5148\u4E86\u89E3Path\u7C7B\u3002</p><h4 id="_1\u3001-files-createdirectory" tabindex="-1"><a class="header-anchor" href="#_1\u3001-files-createdirectory" aria-hidden="true">#</a> 1\u3001 Files.createDirectory()</h4><p>Files.createDirectory()\u65B9\u6CD5\uFF0C\u7528\u4E8E\u6839\u636EPath\u5B9E\u4F8B\u521B\u5EFA\u4E00\u4E2A\u65B0\u76EE\u5F55 \u793A\u4F8B\uFF1A Path path = Paths.get(&quot;d:\\sgg&quot;); try { Path newDir = Files.createDirectory(path); } catch(FileAlreadyExistsException e){ // \u76EE\u5F55\u5DF2\u7ECF\u5B58\u5728 } catch (IOException e) { // \u5176\u4ED6\u53D1\u751F\u7684\u5F02\u5E38 e.printStackTrace(); } \u7B2C\u4E00\u884C\u521B\u5EFA\u8868\u793A\u8981\u521B\u5EFA\u7684\u76EE\u5F55\u7684Path\u5B9E\u4F8B\u3002\u5728try-catch\u5757\u4E2D\uFF0C\u7528\u8DEF\u5F84\u4F5C\u4E3A\u53C2\u6570\u8C03\u7528Files.createDirectory()\u65B9\u6CD5\u3002\u5982\u679C\u521B\u5EFA\u76EE\u5F55\u6210\u529F\uFF0C\u5C06\u8FD4\u56DE\u4E00\u4E2APath\u5B9E\u4F8B\uFF0C\u8BE5\u5B9E\u4F8B\u6307\u5411\u65B0\u521B\u5EFA\u7684\u8DEF\u5F84\u3002 \u5982\u679C\u8BE5\u76EE\u5F55\u5DF2\u7ECF\u5B58\u5728\uFF0C\u5219\u662F\u629B\u51FA\u4E00\u4E2Ajava.nio.file.FileAlreadyExistsException\u3002\u5982\u679C\u51FA\u73B0\u5176\u4ED6\u9519\u8BEF\uFF0C\u53EF\u80FD\u4F1A\u629B\u51FAIOException\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u60F3\u8981\u7684\u65B0\u76EE\u5F55\u7684\u7236\u76EE\u5F55\u4E0D\u5B58\u5728\uFF0C\u5219\u53EF\u80FD\u4F1A\u629B\u51FAIOException\u3002</p><h4 id="_2\u3001files-copy" tabindex="-1"><a class="header-anchor" href="#_2\u3001files-copy" aria-hidden="true">#</a> 2\u3001Files.copy()</h4><p>\uFF081\uFF09Files.copy()\u65B9\u6CD5\u4ECE\u4E00\u4E2A\u8DEF\u5F84\u62F7\u8D1D\u4E00\u4E2A\u6587\u4EF6\u5230\u53E6\u5916\u4E00\u4E2A\u76EE\u5F55 \u793A\u4F8B\uFF1A Path sourcePath = Paths.get(&quot;d:\\atguigu\\01.txt&quot;); Path destinationPath = Paths.get(&quot;d:\\atguigu\\002.txt&quot;); try { Files.copy(sourcePath, destinationPath); } catch(FileAlreadyExistsException e) { // \u76EE\u5F55\u5DF2\u7ECF\u5B58\u5728 } catch (IOException e) { // \u5176\u4ED6\u53D1\u751F\u7684\u5F02\u5E38 e.printStackTrace(); } \u9996\u5148\uFF0C\u8BE5\u793A\u4F8B\u521B\u5EFA\u4E24\u4E2APath\u5B9E\u4F8B\u3002\u7136\u540E\uFF0C\u8FD9\u4E2A\u4F8B\u5B50\u8C03\u7528Files.copy()\uFF0C\u5C06\u4E24\u4E2APath\u5B9E\u4F8B\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u3002\u8FD9\u53EF\u4EE5\u8BA9\u6E90\u8DEF\u5F84\u5F15\u7528\u7684\u6587\u4EF6\u88AB\u590D\u5236\u5230\u76EE\u6807\u8DEF\u5F84\u5F15\u7528\u7684\u6587\u4EF6\u4E2D\u3002 \u5982\u679C\u76EE\u6807\u6587\u4EF6\u5DF2\u7ECF\u5B58\u5728\uFF0C\u5219\u629B\u51FA\u4E00\u4E2Ajava.nio.file.FileAlreadyExistsException\u5F02\u5E38\u3002\u5982\u679C\u6709\u5176\u4ED6\u9519\u8BEF\uFF0C\u5219\u4F1A\u629B\u51FA\u4E00\u4E2AIOException\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u5C06\u8BE5\u6587\u4EF6\u590D\u5236\u5230\u4E0D\u5B58\u5728\u7684\u76EE\u5F55\uFF0C\u5219\u4F1A\u629B\u51FAIOException\u3002 \uFF082\uFF09\u8986\u76D6\u5DF2\u5B58\u5728\u7684\u6587\u4EF6 Files.copy()\u65B9\u6CD5\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570\u3002\u5982\u679C\u76EE\u6807\u6587\u4EF6\u5DF2\u7ECF\u5B58\u5728\uFF0C\u8FD9\u4E2A\u53C2\u6570\u6307\u793Acopy()\u65B9\u6CD5\u8986\u76D6\u73B0\u6709\u7684\u6587\u4EF6\u3002 Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING);</p><h4 id="_3\u3001files-move" tabindex="-1"><a class="header-anchor" href="#_3\u3001files-move" aria-hidden="true">#</a> 3\u3001Files.move()</h4><p>Files.move()\u7528\u4E8E\u5C06\u6587\u4EF6\u4ECE\u4E00\u4E2A\u8DEF\u5F84\u79FB\u52A8\u5230\u53E6\u4E00\u4E2A\u8DEF\u5F84\u3002\u79FB\u52A8\u6587\u4EF6\u4E0E\u91CD\u547D\u540D\u76F8\u540C\uFF0C\u4F46\u662F\u79FB\u52A8\u6587\u4EF6\u65E2\u53EF\u4EE5\u79FB\u52A8\u5230\u4E0D\u540C\u7684\u76EE\u5F55\uFF0C\u4E5F\u53EF\u4EE5\u5728\u76F8\u540C\u7684\u64CD\u4F5C\u4E2D\u66F4\u6539\u5B83\u7684\u540D\u79F0\u3002 \u793A\u4F8B\uFF1A Path sourcePath = Paths.get(&quot;d:\\atguigu\\01.txt&quot;); Path destinationPath = Paths.get(&quot;d:\\atguigu\\001.txt&quot;); try { Files.move(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING); } catch (IOException e) { //\u79FB\u52A8\u6587\u4EF6\u5931\u8D25 e.printStackTrace(); } Files.move()\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570\u3002\u8FD9\u4E2A\u53C2\u6570\u544A\u8BC9Files.move()\u65B9\u6CD5\u6765\u8986\u76D6\u76EE\u6807\u8DEF\u5F84\u4E0A\u7684\u4EFB\u4F55\u73B0\u6709\u6587\u4EF6\u3002</p><h4 id="_4\u3001files-delete" tabindex="-1"><a class="header-anchor" href="#_4\u3001files-delete" aria-hidden="true">#</a> 4\u3001Files.delete()</h4><p>Files.delete()\u65B9\u6CD5\u53EF\u4EE5\u5220\u9664\u4E00\u4E2A\u6587\u4EF6\u6216\u8005\u76EE\u5F55\u3002 \u793A\u4F8B\uFF1A Path path = Paths.get(&quot;d:\\atguigu\\001.txt&quot;); try { Files.delete(path); } catch (IOException e) { // \u5220\u9664\u6587\u4EF6\u5931\u8D25 e.printStackTrace(); } \u521B\u5EFA\u6307\u5411\u8981\u5220\u9664\u7684\u6587\u4EF6\u7684Path\u3002\u7136\u540E\u8C03\u7528Files.delete()\u65B9\u6CD5\u3002\u5982\u679CFiles.delete()\u4E0D\u80FD\u5220\u9664\u6587\u4EF6(\u4F8B\u5982\uFF0C\u6587\u4EF6\u6216\u76EE\u5F55\u4E0D\u5B58\u5728)\uFF0C\u4F1A\u629B\u51FA\u4E00\u4E2AIOException\u3002</p><h4 id="_5-files-walkfiletree" tabindex="-1"><a class="header-anchor" href="#_5-files-walkfiletree" aria-hidden="true">#</a> 5.Files.walkFileTree()</h4>`,41),ss=s('\uFF081\uFF09Files.walkFileTree()\u65B9\u6CD5\u5305\u542B\u9012\u5F52\u904D\u5386\u76EE\u5F55\u6811\u529F\u80FD\uFF0C\u5C06Path\u5B9E\u4F8B\u548CFileVisitor\u4F5C\u4E3A\u53C2\u6570\u3002Path\u5B9E\u4F8B\u6307\u5411\u8981\u904D\u5386\u7684\u76EE\u5F55\uFF0CFileVisitor\u5728\u904D\u5386\u671F\u95F4\u88AB\u8C03\u7528\u3002 \uFF082\uFF09FileVisitor\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5FC5\u987B\u81EA\u5DF1\u5B9E\u73B0FileVisitor\u63A5\u53E3\uFF0C\u5E76\u5C06\u5B9E\u73B0\u7684\u5B9E\u4F8B\u4F20\u9012\u7ED9walkFileTree()\u65B9\u6CD5\u3002\u5728\u76EE\u5F55\u904D\u5386\u8FC7\u7A0B\u4E2D\uFF0C\u60A8\u7684FileVisitor\u5B9E\u73B0\u7684\u6BCF\u4E2A\u65B9\u6CD5\u90FD\u5C06\u88AB\u8C03\u7528\u3002\u5982\u679C\u4E0D\u9700\u8981\u5B9E\u73B0\u6240\u6709\u8FD9\u4E9B\u65B9\u6CD5\uFF0C\u90A3\u4E48\u53EF\u4EE5\u6269\u5C55SimpleFileVisitor\u7C7B\uFF0C\u5B83\u5305\u542BFileVisitor\u63A5\u53E3\u4E2D\u6240\u6709\u65B9\u6CD5\u7684\u9ED8\u8BA4\u5B9E\u73B0\u3002 \uFF083\uFF09FileVisitor\u63A5\u53E3\u7684\u65B9\u6CD5\u4E2D\uFF0C\u6BCF\u4E2A\u90FD\u8FD4\u56DE\u4E00\u4E2AFileVisitResult\u679A\u4E3E\u5B9E\u4F8B\u3002FileVisitResult\u679A\u4E3E\u5305\u542B\u4EE5\u4E0B\u56DB\u4E2A\u9009\u9879: CONTINUE \u7EE7\u7EED TERMINATE \u7EC8\u6B62 SKIP_SIBLING \u8DF3\u8FC7\u540C\u7EA7 SKIP_SUBTREE \u8DF3\u8FC7\u5B50\u7EA7 \uFF084\uFF09\u67E5\u627E\u4E00\u4E2A\u540D\u4E3A001.txt\u7684\u6587\u4EF6\u793A\u4F8B\uFF1A Path rootPath = Paths.get("d:\\atguigu"); String fileToFind = File.separator + "001.txt"; try { Files.walkFileTree(rootPath, new SimpleFileVisitor<Path>() { @Override public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException { String fileString = file.toAbsolutePath().toString(); '),as={href:"//System.out.println",target:"_blank",rel:"noopener noreferrer"},ts=s("//System.out.println"),ps=s('("pathString = " + fileString); if(fileString.endsWith(fileToFind)){ System.out.println("file found at path: " + file.toAbsolutePath()); return FileVisitResult.TERMINATE; } return FileVisitResult.CONTINUE; } }); } catch(IOException e){ e.printStackTrace(); } \uFF085\uFF09java.nio.file.Files\u7C7B\u5305\u542B\u8BB8\u591A\u5176\u4ED6\u7684\u51FD\u6570\uFF0C\u6709\u5173\u8FD9\u4E9B\u65B9\u6CD5\u7684\u66F4\u591A\u4FE1\u606F\uFF0C\u8BF7\u67E5\u770Bjava.nio.file.Files\u7C7B\u7684JavaDoc\u3002'),es=p(`<h3 id="asynchronousfilechannel" tabindex="-1"><a class="header-anchor" href="#asynchronousfilechannel" aria-hidden="true">#</a> AsynchronousFileChannel</h3><p>\u5728Java 7\u4E2D\uFF0CJava NIO\u4E2D\u6DFB\u52A0\u4E86AsynchronousFileChannel\uFF0C\u4E5F\u5C31\u662F\u662F\u5F02\u6B65\u5730\u5C06\u6570\u636E\u5199\u5165\u6587\u4EF6\u3002</p><h4 id="_1\u3001\u521B\u5EFA-asynchronousfilechannel" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u521B\u5EFA-asynchronousfilechannel" aria-hidden="true">#</a> 1\u3001\u521B\u5EFA AsynchronousFileChannel</h4><p>\u901A\u8FC7\u9759\u6001\u65B9\u6CD5open()\u521B\u5EFA \u793A\u4F8B\uFF1A Path path = Paths.get(&quot;d:\\atguigu\\01.txt&quot;); try { AsynchronousFileChannel fileChannel = AsynchronousFileChannel.open(path, StandardOpenOption.READ); } catch (IOException e) { e.printStackTrace(); } open()\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u6307\u5411\u4E0EAsynchronousFileChannel\u76F8\u5173\u8054\u6587\u4EF6\u7684Path\u5B9E\u4F8B\u3002 \u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u6216\u591A\u4E2A\u6253\u5F00\u9009\u9879\uFF0C\u5B83\u544A\u8BC9AsynchronousFileChannel\u5728\u6587\u4EF6\u4E0A\u6267\u884C\u4EC0\u4E48\u64CD\u4F5C\u3002\u5728\u672C\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86StandardOpenOption.READ\u9009\u9879\uFF0C\u8868\u793A\u8BE5\u6587\u4EF6\u5C06\u88AB\u6253\u5F00\u9605\u8BFB\u3002</p><h4 id="_2\u3001\u901A\u8FC7future\u8BFB\u53D6\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u901A\u8FC7future\u8BFB\u53D6\u6570\u636E" aria-hidden="true">#</a> 2\u3001\u901A\u8FC7Future\u8BFB\u53D6\u6570\u636E</h4><p>\u53EF\u4EE5\u901A\u8FC7\u4E24\u79CD\u65B9\u5F0F\u4ECEAsynchronousFileChannel\u8BFB\u53D6\u6570\u636E\u3002\u7B2C\u4E00\u79CD\u65B9\u5F0F\u662F\u8C03\u7528\u8FD4\u56DEFuture\u7684read()\u65B9\u6CD5 \u793A\u4F8B\uFF1A Path path = Paths.get(&quot;d:\\atguigu\\001.txt&quot;); AsynchronousFileChannel fileChannel = null; try { fileChannel = AsynchronousFileChannel.open(path, StandardOpenOption.READ); } catch (IOException e) { e.printStackTrace(); } ByteBuffer buffer = ByteBuffer.allocate(1024); long position = 0; Future&lt;Integer&gt; operation = fileChannel.read(buffer, position); while(!operation.isDone()); buffer.flip(); byte[] data = new byte[buffer.limit()]; buffer.get(data); System.out.println(new String(data)); buffer.clear(); \u4E0A\u8FF0\u4EE3\u7801\uFF1A \uFF081\uFF09\u521B\u5EFA\u4E86\u4E00\u4E2AAsynchronousFileChannel\uFF0C \uFF082\uFF09\u521B\u5EFA\u4E00\u4E2AByteBuffer\uFF0C\u5B83\u88AB\u4F20\u9012\u7ED9read()\u65B9\u6CD5\u4F5C\u4E3A\u53C2\u6570\uFF0C\u4EE5\u53CA\u4E00\u4E2A0\u7684\u4F4D\u7F6E\u3002 \uFF083\uFF09\u5728\u8C03\u7528read()\u4E4B\u540E\uFF0C\u5FAA\u73AF\uFF0C\u76F4\u5230\u8FD4\u56DE\u7684isDone()\u65B9\u6CD5\u8FD4\u56DEtrue\u3002 \uFF084\uFF09\u8BFB\u53D6\u64CD\u4F5C\u5B8C\u6210\u540E\uFF0C\u6570\u636E\u8BFB\u53D6\u5230ByteBuffer\u4E2D\uFF0C\u7136\u540E\u6253\u5370\u5230System.out\u4E2D\u3002</p><h4 id="_3\u3001\u901A\u8FC7completionhandler\u8BFB\u53D6\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u901A\u8FC7completionhandler\u8BFB\u53D6\u6570\u636E" aria-hidden="true">#</a> 3\u3001\u901A\u8FC7CompletionHandler\u8BFB\u53D6\u6570\u636E</h4><p>\u7B2C\u4E8C\u79CD\u65B9\u6CD5\u662F\u8C03\u7528read()\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u5C06\u4E00\u4E2ACompletionHandler\u4F5C\u4E3A\u53C2\u6570 \u793A\u4F8B\uFF1A Path path = Paths.get(&quot;d:\\atguigu\\001.txt&quot;); AsynchronousFileChannel fileChannel = null; try { fileChannel = AsynchronousFileChannel.open(path, StandardOpenOption.READ); } catch (IOException e) { e.printStackTrace(); } ByteBuffer buffer = ByteBuffer.allocate(1024); long position = 0; fileChannel.read(buffer, position, buffer, new CompletionHandler&lt;Integer, ByteBuffer&gt;() { @Override public void completed(Integer result, ByteBuffer attachment) { System.out.println(&quot;result = &quot; + result); attachment.flip(); byte[] data = new byte[attachment.limit()]; attachment.get(data); System.out.println(new String(data)); attachment.clear(); } @Override public void failed(Throwable exc, ByteBuffer attachment) { } }); \uFF081\uFF09\u8BFB\u53D6\u64CD\u4F5C\u5B8C\u6210\uFF0C\u5C06\u8C03\u7528CompletionHandler\u7684completed()\u65B9\u6CD5\u3002 \uFF082\uFF09\u5BF9\u4E8Ecompleted()\u65B9\u6CD5\u7684\u53C2\u6570\u4F20\u9012\u4E00\u4E2A\u6574\u6570\uFF0C\u5B83\u544A\u8BC9\u6211\u4EEC\u8BFB\u53D6\u4E86\u591A\u5C11\u5B57\u8282\uFF0C\u4EE5\u53CA\u4F20\u9012\u7ED9read()\u65B9\u6CD5\u7684\u201C\u9644\u4EF6\u201D\u3002\u201C\u9644\u4EF6\u201D\u662Fread()\u65B9\u6CD5\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570\u3002\u5728\u672C\u4EE3\u7801\u4E2D\uFF0C\u5B83\u662FByteBuffer\uFF0C\u6570\u636E\u4E5F\u88AB\u8BFB\u53D6\u3002 \uFF083\uFF09\u5982\u679C\u8BFB\u53D6\u64CD\u4F5C\u5931\u8D25\uFF0C\u5219\u5C06\u8C03\u7528CompletionHandler\u7684failed()\u65B9\u6CD5\u3002</p><h4 id="_4\u3001\u901A\u8FC7future\u5199\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u901A\u8FC7future\u5199\u6570\u636E" aria-hidden="true">#</a> 4\u3001\u901A\u8FC7Future\u5199\u6570\u636E</h4><p>\u548C\u8BFB\u53D6\u4E00\u6837\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4E24\u79CD\u65B9\u5F0F\u5C06\u6570\u636E\u5199\u5165\u4E00\u4E2AAsynchronousFileChannel \u793A\u4F8B\uFF1A Path path = Paths.get(&quot;d:\\atguigu\\001.txt&quot;); AsynchronousFileChannel fileChannel = null; try { fileChannel = AsynchronousFileChannel.open(path, StandardOpenOption.WRITE); } catch (IOException e) { e.printStackTrace(); } ByteBuffer buffer = ByteBuffer.allocate(1024); long position = 0; buffer.put(&quot;atguigu data&quot;.getBytes()); buffer.flip(); Future&lt;Integer&gt; operation = fileChannel.write(buffer, position); buffer.clear(); while(!operation.isDone()); System.out.println(&quot;Write over&quot;); \u9996\u5148\uFF0CAsynchronousFileChannel\u4EE5\u5199\u6A21\u5F0F\u6253\u5F00\u3002\u7136\u540E\u521B\u5EFA\u4E00\u4E2AByteBuffer\uFF0C\u5E76\u5C06\u4E00\u4E9B\u6570\u636E\u5199\u5165\u5176\u4E2D\u3002\u7136\u540E\uFF0CByteBuffer\u4E2D\u7684\u6570\u636E\u88AB\u5199\u5165\u5230\u6587\u4EF6\u4E2D\u3002\u6700\u540E\uFF0C\u793A\u4F8B\u68C0\u67E5\u8FD4\u56DE\u7684Future\uFF0C\u4EE5\u67E5\u770B\u5199\u64CD\u4F5C\u5B8C\u6210\u65F6\u7684\u60C5\u51B5\u3002 \u6CE8\u610F\uFF0C\u6587\u4EF6\u5FC5\u987B\u5DF2\u7ECF\u5B58\u5728\u3002\u5982\u679C\u8BE5\u6587\u4EF6\u4E0D\u5B58\u5728\uFF0C\u90A3\u4E48write()\u65B9\u6CD5\u5C06\u629B\u51FA\u4E00\u4E2Ajava.nio.file.NoSuchFileException\u3002</p><h4 id="_5\u3001\u901A\u8FC7completionhandler\u5199\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u901A\u8FC7completionhandler\u5199\u6570\u636E" aria-hidden="true">#</a> 5\u3001\u901A\u8FC7CompletionHandler\u5199\u6570\u636E</h4><p>\u793A\u4F8B\uFF1A</p><p>Path path = Paths.get(&quot;d:\\atguigu\\001.txt&quot;); if(!Files.exists(path)){ try { Files.createFile(path); } catch (IOException e) { e.printStackTrace(); } } AsynchronousFileChannel fileChannel = null; try { fileChannel = AsynchronousFileChannel.open(path, StandardOpenOption.WRITE); } catch (IOException e) { e.printStackTrace(); } ByteBuffer buffer = ByteBuffer.allocate(1024); long position = 0; buffer.put(&quot;atguigu data&quot;.getBytes()); buffer.flip(); fileChannel.write(buffer, position, buffer, new CompletionHandler&lt;Integer, ByteBuffer&gt;() { @Override public void completed(Integer result, ByteBuffer attachment) { System.out.println(&quot;bytes written: &quot; + result); } @Override public void failed(Throwable exc, ByteBuffer attachment) { System.out.println(&quot;Write failed&quot;); exc.printStackTrace(); } });</p><p>\u5F53\u5199\u64CD\u4F5C\u5B8C\u6210\u65F6\uFF0C\u5C06\u4F1A\u8C03\u7528CompletionHandler\u7684completed()\u65B9\u6CD5\u3002\u5982\u679C\u5199\u5931\u8D25\uFF0C\u5219\u4F1A\u8C03\u7528failed()\u65B9\u6CD5\u3002</p><h3 id="\u5B57\u7B26\u96C6-charset" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u96C6-charset" aria-hidden="true">#</a> \u5B57\u7B26\u96C6\uFF08Charset\uFF09</h3><p>java\u4E2D\u4F7F\u7528Charset\u6765\u8868\u793A\u5B57\u7B26\u96C6\u7F16\u7801\u5BF9\u8C61</p><h4 id="charset\u5E38\u7528\u9759\u6001\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#charset\u5E38\u7528\u9759\u6001\u65B9\u6CD5" aria-hidden="true">#</a> Charset\u5E38\u7528\u9759\u6001\u65B9\u6CD5</h4><p>public static Charset forName(String charsetName)//\u901A\u8FC7\u7F16\u7801\u7C7B\u578B\u83B7\u5F97Charset\u5BF9\u8C61 public static SortedMap&lt;String,Charset&gt; availableCharsets()//\u83B7\u5F97\u7CFB\u7EDF\u652F\u6301\u7684\u6240\u6709\u7F16\u7801\u65B9\u5F0F public static Charset defaultCharset()//\u83B7\u5F97\u865A\u62DF\u673A\u9ED8\u8BA4\u7684\u7F16\u7801\u65B9\u5F0F public static boolean isSupported(String charsetName)//\u5224\u65AD\u662F\u5426\u652F\u6301\u8BE5\u7F16\u7801\u7C7B\u578B</p><h4 id="charset\u5E38\u7528\u666E\u901A\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#charset\u5E38\u7528\u666E\u901A\u65B9\u6CD5" aria-hidden="true">#</a> Charset\u5E38\u7528\u666E\u901A\u65B9\u6CD5</h4><p>public final String name()//\u83B7\u5F97Charset\u5BF9\u8C61\u7684\u7F16\u7801\u7C7B\u578B(String) public abstract CharsetEncoder newEncoder()//\u83B7\u5F97\u7F16\u7801\u5668\u5BF9\u8C61 public abstract CharsetDecoder newDecoder()//\u83B7\u5F97\u89E3\u7801\u5668\u5BF9\u8C61 \u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">CharBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">CharacterCodingException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">Charset</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">CharsetDecoder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">CharsetEncoder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CharsetDemo</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">charSetEncoderAndDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">CharacterCodingException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Charset</span> charset <span class="token operator">=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">//1.\u83B7\u53D6\u7F16\u7801\u5668</span>
        <span class="token class-name">CharsetEncoder</span> charsetEncoder <span class="token operator">=</span> charset<span class="token punctuation">.</span><span class="token function">newEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2.\u83B7\u53D6\u89E3\u7801\u5668</span>
        <span class="token class-name">CharsetDecoder</span> charsetDecoder <span class="token operator">=</span> charset<span class="token punctuation">.</span><span class="token function">newDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3.\u83B7\u53D6\u9700\u8981\u89E3\u7801\u7F16\u7801\u7684\u6570\u636E</span>
        <span class="token class-name">CharBuffer</span> charBuffer <span class="token operator">=</span> <span class="token class-name">CharBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        charBuffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;\u5B57\u7B26\u96C6\u7F16\u7801\u89E3\u7801&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        charBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//4.\u7F16\u7801 </span>
        <span class="token class-name">ByteBuffer</span> byteBuffer <span class="token operator">=</span> charsetEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>charBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7F16\u7801\u540E\uFF1A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;</span> byteBuffer<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//5.\u89E3\u7801</span>
        byteBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CharBuffer</span> charBuffer1 <span class="token operator">=</span> charsetDecoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u89E3\u7801\u540E\uFF1A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>charBuffer1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6307\u5B9A\u5176\u4ED6\u683C\u5F0F\u89E3\u7801:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Charset</span> charset1 <span class="token operator">=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;GBK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        byteBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CharBuffer</span> charBuffer2 <span class="token operator">=</span> charset1<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>charBuffer2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//6.\u83B7\u53D6Charset\u6240\u652F\u6301\u7684\u5B57\u7B26\u7F16\u7801</span>
        <span class="token class-name">Map</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">availableCharsets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Set</span>\\<span class="token operator">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">&gt;</span></span><span class="token operator">&gt;</span> set <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> set<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nio\u591A\u7EBF\u7A0B\u804A\u5929\u5BA4\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#nio\u591A\u7EBF\u7A0B\u804A\u5929\u5BA4\u4F8B\u5B50" aria-hidden="true">#</a> NIO\u591A\u7EBF\u7A0B\u804A\u5929\u5BA4\u4F8B\u5B50</h3><h4 id="\u670D\u52A1\u7AEF" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u7AEF" aria-hidden="true">#</a> \u670D\u52A1\u7AEF</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetSocketAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">Charset</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token comment">//\u670D\u52A1\u5668\u7AEF</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChatServer</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u670D\u52A1\u5668\u7AEF\u542F\u52A8\u7684\u65B9\u6CD5</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//1 \u521B\u5EFASelector\u9009\u62E9\u5668</span>
        <span class="token class-name">Selector</span> selector <span class="token operator">=</span> <span class="token class-name">Selector</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2 \u521B\u5EFAServerSocketChannel\u901A\u9053</span>
        <span class="token class-name">ServerSocketChannel</span> serverSocketChannel <span class="token operator">=</span> <span class="token class-name">ServerSocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3 \u4E3Achannel\u901A\u9053\u7ED1\u5B9A\u76D1\u542C\u7AEF\u53E3</span>
        serverSocketChannel<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8BBE\u7F6E\u975E\u963B\u585E\u6A21\u5F0F</span>
        serverSocketChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//4 \u628Achannel\u901A\u9053\u6CE8\u518C\u5230selector\u9009\u62E9\u5668\u4E0A</span>
        serverSocketChannel<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_ACCEPT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u670D\u52A1\u5668\u5DF2\u7ECF\u542F\u52A8\u6210\u529F\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//5 \u5FAA\u73AF\uFF0C\u7B49\u5F85\u6709\u65B0\u94FE\u63A5\u63A5\u5165</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u83B7\u53D6channel\u6570\u91CF</span>
            <span class="token keyword">int</span> readChannels <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>readChannels <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u83B7\u53D6\u53EF\u7528\u7684channel</span>
            <span class="token class-name">Set</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> selectionKeys <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">selectedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u904D\u5386\u96C6\u5408</span>
            <span class="token class-name">Iterator</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> selectionKeys<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">SelectionKey</span> selectionKey <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u79FB\u9664set\u96C6\u5408\u5F53\u524DselectionKey</span>
                iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//6 \u6839\u636E\u5C31\u7EEA\u72B6\u6001\uFF0C\u8C03\u7528\u5BF9\u5E94\u65B9\u6CD5\u5B9E\u73B0\u5177\u4F53\u4E1A\u52A1\u64CD\u4F5C</span>
                <span class="token comment">//6.1 \u5982\u679Caccept\u72B6\u6001</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>selectionKey<span class="token punctuation">.</span><span class="token function">isAcceptable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">acceptOperator</span><span class="token punctuation">(</span>serverSocketChannel<span class="token punctuation">,</span> selector<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//6.2 \u5982\u679C\u53EF\u8BFB\u72B6\u6001</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>selectionKey<span class="token punctuation">.</span><span class="token function">isReadable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">readOperator</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> selectionKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u5904\u7406\u53EF\u8BFB\u72B6\u6001\u64CD\u4F5C</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readOperator</span><span class="token punctuation">(</span><span class="token class-name">Selector</span> selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span> selectionKey<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//1 \u4ECESelectionKey\u83B7\u53D6\u5230\u5DF2\u7ECF\u5C31\u7EEA\u7684\u901A\u9053</span>
        <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SocketChannel</span><span class="token punctuation">)</span> selectionKey<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2 \u521B\u5EFAbuffer</span>
        <span class="token class-name">ByteBuffer</span> byteBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3 \u5FAA\u73AF\u8BFB\u53D6\u5BA2\u6237\u7AEF\u6D88\u606F</span>
        <span class="token keyword">int</span> readLength <span class="token operator">=</span> socketChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>readLength <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u5207\u6362\u8BFB\u6A21\u5F0F</span>
            byteBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//\u8BFB\u53D6\u5185\u5BB9</span>
            message <span class="token operator">+=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//4 \u5C06channel\u518D\u6B21\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A\uFF0C\u76D1\u542C\u53EF\u8BFB\u72B6\u6001</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//5 \u628A\u5BA2\u6237\u7AEF\u53D1\u9001\u6D88\u606F\uFF0C\u5E7F\u64AD\u5230\u5176\u4ED6\u5BA2\u6237\u7AEF</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u5E7F\u64AD\u7ED9\u5176\u4ED6\u5BA2\u6237\u7AEF</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">castOtherClient</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> selector<span class="token punctuation">,</span> socketChannel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u5E7F\u64AD\u5230\u5176\u4ED6\u5BA2\u6237\u7AEF</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">castOtherClient</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">Selector</span> selector<span class="token punctuation">,</span> <span class="token class-name">SocketChannel</span> socketChannel<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//1 \u83B7\u53D6\u6240\u6709\u5DF2\u7ECF\u63A5\u5165channel</span>
        <span class="token class-name">Set</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> selectionKeySet <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2 \u5FAA\u73AF\u60F3\u6240\u6709channel\u5E7F\u64AD\u6D88\u606F</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SelectionKey</span> selectionKey <span class="token operator">:</span> selectionKeySet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u83B7\u53D6\u6BCF\u4E2Achannel</span>
            <span class="token class-name">Channel</span> tarChannel <span class="token operator">=</span> selectionKey<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//\u4E0D\u9700\u8981\u7ED9\u81EA\u5DF1\u53D1\u9001</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tarChannel <span class="token keyword">instanceof</span> <span class="token class-name">SocketChannel</span> <span class="token operator">&amp;&amp;</span> tarChannel <span class="token operator">!=</span> socketChannel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SocketChannel</span><span class="token punctuation">)</span> tarChannel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u5904\u7406\u63A5\u5165\u72B6\u6001\u64CD\u4F5C</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">acceptOperator</span><span class="token punctuation">(</span><span class="token class-name">ServerSocketChannel</span> serverSocketChannel<span class="token punctuation">,</span> <span class="token class-name">Selector</span> selector<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//1 \u63A5\u5165\u72B6\u6001\uFF0C\u521B\u5EFAsocketChannel</span>
        <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> serverSocketChannel<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2 \u628AsocketChannel\u8BBE\u7F6E\u975E\u963B\u585E\u6A21\u5F0F</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3 \u628Achannel\u6CE8\u518C\u5230selector\u9009\u62E9\u5668\u4E0A\uFF0C\u76D1\u542C\u53EF\u8BFB\u72B6\u6001</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//4 \u5BA2\u6237\u7AEF\u56DE\u590D\u4FE1\u606F</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B22\u8FCE\u8FDB\u5165\u804A\u5929\u5BA4\uFF0C\u8BF7\u6CE8\u610F\u9690\u79C1\u5B89\u5168&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u542F\u52A8\u4E3B\u65B9\u6CD5</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">ChatServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5BA2\u6237\u7AEF\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u5BA2\u6237\u7AEF\u4EE3\u7801" aria-hidden="true">#</a> \u5BA2\u6237\u7AEF\u4EE3\u7801</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetSocketAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SelectionKey</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">Selector</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SocketChannel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">Charset</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token comment">//\u5BA2\u6237\u7AEF</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChatClient</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u542F\u52A8\u5BA2\u6237\u7AEF\u65B9\u6CD5</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startClient</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u8FDE\u63A5\u670D\u52A1\u7AEF</span>
        <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> <span class="token class-name">SocketChannel</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InetSocketAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span> <span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u63A5\u6536\u670D\u52A1\u7AEF\u54CD\u5E94\u6570\u636E</span>
        <span class="token class-name">Selector</span> selector <span class="token operator">=</span> <span class="token class-name">Selector</span><span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">configureBlocking</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u521B\u5EFA\u7EBF\u7A0B</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClientThread</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5411\u670D\u52A1\u5668\u7AEF\u53D1\u9001\u6D88\u606F</span>
        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">hasNextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> msg <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                socketChannel<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot; : &quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token class-name">ByteBuffer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SelectionKey</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">Selector</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token class-name">SocketChannel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token class-name">Charset</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClientThread</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Selector</span> selector<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ClientThread</span><span class="token punctuation">(</span><span class="token class-name">Selector</span> selector<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>selector <span class="token operator">=</span> selector<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u83B7\u53D6channel\u6570\u91CF</span>
                <span class="token keyword">int</span> readChannels <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>readChannels <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//\u83B7\u53D6\u53EF\u7528\u7684channel</span>
                <span class="token class-name">Set</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> selectionKeys <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">selectedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//\u904D\u5386\u96C6\u5408</span>
                <span class="token class-name">Iterator</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SelectionKey</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> selectionKeys<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">SelectionKey</span> selectionKey <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//\u79FB\u9664set\u96C6\u5408\u5F53\u524DselectionKey</span>
                    iterator<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//\u5982\u679C\u53EF\u8BFB\u72B6\u6001</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>selectionKey<span class="token punctuation">.</span><span class="token function">isReadable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">readOperator</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> selectionKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u5904\u7406\u53EF\u8BFB\u72B6\u6001\u64CD\u4F5C</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readOperator</span><span class="token punctuation">(</span><span class="token class-name">Selector</span> selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span> selectionKey<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">//1 \u4ECESelectionKey\u83B7\u53D6\u5230\u5DF2\u7ECF\u5C31\u7EEA\u7684\u901A\u9053</span>
        <span class="token class-name">SocketChannel</span> socketChannel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SocketChannel</span><span class="token punctuation">)</span> selectionKey<span class="token punctuation">.</span><span class="token function">channel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2 \u521B\u5EFAbuffer</span>
        <span class="token class-name">ByteBuffer</span> byteBuffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3 \u5FAA\u73AF\u8BFB\u53D6\u5BA2\u6237\u7AEF\u6D88\u606F</span>
        <span class="token keyword">int</span> readLength <span class="token operator">=</span> socketChannel<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>readLength <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u5207\u6362\u8BFB\u6A21\u5F0F</span>
            byteBuffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//\u8BFB\u53D6\u5185\u5BB9</span>
            message <span class="token operator">+=</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>byteBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//4 \u5C06channel\u518D\u6B21\u6CE8\u518C\u5230\u9009\u62E9\u5668\u4E0A\uFF0C\u76D1\u542C\u53EF\u8BFB\u72B6\u6001</span>
        socketChannel<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token class-name">SelectionKey</span><span class="token punctuation">.</span>OP_READ<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//5 \u628A\u5BA2\u6237\u7AEF\u53D1\u9001\u6D88\u606F\uFF0C\u5E7F\u64AD\u5230\u5176\u4ED6\u5BA2\u6237\u7AEF</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u5E7F\u64AD\u7ED9\u5176\u4ED6\u5BA2\u6237\u7AEF</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AClient</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">ChatClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startClient</span><span class="token punctuation">(</span><span class="token string">&quot;lxl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BClient</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">ChatClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startClient</span><span class="token punctuation">(</span><span class="token string">&quot;xqm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="others" tabindex="-1"><a class="header-anchor" href="#others" aria-hidden="true">#</a> others</h2><h3 id="filter\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#filter\u6A21\u5F0F" aria-hidden="true">#</a> Filter\u6A21\u5F0F</h3><ul><li>\u901A\u8FC7\u4E00\u4E2A\u201C\u57FA\u7840\u201D\u7EC4\u4EF6\u518D\u53E0\u52A0\u5404\u79CD\u201C\u9644\u52A0\u201D\u529F\u80FD\u7EC4\u4EF6\u7684\u6A21\u5F0F\uFF0C\u79F0\u4E4B\u4E3AFilter\u6A21\u5F0F\uFF08\u6216\u8005\u88C5\u9970\u5668\u6A21\u5F0F\uFF1ADecorator\uFF09\u3002\u5B83\u53EF\u4EE5\u8BA9\u6211\u4EEC\u901A\u8FC7\u5C11\u91CF\u7684\u7C7B\u6765\u5B9E\u73B0\u5404\u79CD\u529F\u80FD\u7684\u7EC4\u5408</li><li>\u7F16\u5199FilterInputStream</li></ul><h3 id="\u64CD\u4F5Czip" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5Czip" aria-hidden="true">#</a> \u64CD\u4F5CZip</h3><ul><li><p>ZipInputStream</p></li><li><p>JarInputStream\u662F\u4ECEZipInputStream\u6D3E\u751F</p></li><li><p>\u8BFB\u53D6zip\u5305</p><ul><li><p>\u521B\u5EFA\u4E00\u4E2AZipInputStream\uFF0C\u901A\u5E38\u662F\u4F20\u5165\u4E00\u4E2AFileInputStream\u4F5C\u4E3A\u6570\u636E\u6E90\uFF0C\u7136\u540E\uFF0C\u5FAA\u73AF\u8C03\u7528getNextEntry()\uFF0C\u76F4\u5230\u8FD4\u56DEnull\uFF0C\u8868\u793Azip\u6D41\u7ED3\u675F\u3002 \u4E00\u4E2AZipEntry\u8868\u793A\u4E00\u4E2A\u538B\u7F29\u6587\u4EF6\u6216\u76EE\u5F55\uFF0C\u5982\u679C\u662F\u538B\u7F29\u6587\u4EF6\uFF0C\u6211\u4EEC\u5C31\u7528read()\u65B9\u6CD5\u4E0D\u65AD\u8BFB\u53D6\uFF0C\u76F4\u5230\u8FD4\u56DE-1\uFF1A</p><ul><li>try (ZipInputStream zip = new ZipInputStream(new FileInputStream(...))) { ZipEntry entry = null; while ((entry = zip.getNextEntry()) != null) { String name = entry.getName(); if (!entry.isDirectory()) { int n; while ((n = zip.read()) != -1) { ... } } } }</li></ul></li></ul></li><li><p>\u5199\u5165zip\u5305</p><ul><li><p>\u53EF\u4EE5\u76F4\u63A5\u5199\u5165\u5185\u5BB9\u5230zip\u5305\u3002\u6211\u4EEC\u8981\u5148\u521B\u5EFA\u4E00\u4E2AZipOutputStream\uFF0C\u901A\u5E38\u662F\u5305\u88C5\u4E00\u4E2AFileOutputStream\uFF0C\u7136\u540E\uFF0C\u6BCF\u5199\u5165\u4E00\u4E2A\u6587\u4EF6\u524D\uFF0C\u5148\u8C03\u7528putNextEntry()\uFF0C\u7136\u540E\u7528write()\u5199\u5165byte[]\u6570\u636E\uFF0C\u5199\u5165\u5B8C\u6BD5\u540E\u8C03\u7528closeEntry()\u7ED3\u675F\u8FD9\u4E2A\u6587\u4EF6\u7684\u6253\u5305\u3002</p><ul><li>try (ZipOutputStream zip = new ZipOutputStream(new FileOutputStream(...))) { File[] files = ... for (File file : files) { zip.putNextEntry(new ZipEntry(file.getName())); zip.write(getFileDataAsBytes(file)); zip.closeEntry(); } }</li></ul></li></ul></li></ul><p>\u8BFB\u53D6classpath\u8D44\u6E90</p><ul><li>\u628A\u8D44\u6E90\u5B58\u50A8\u5728classpath\u4E2D\u53EF\u4EE5\u907F\u514D\u6587\u4EF6\u8DEF\u5F84\u4F9D\u8D56\uFF1B</li><li>Class\u5BF9\u8C61\u7684getResourceAsStream()\u53EF\u4EE5\u4ECEclasspath\u4E2D\u8BFB\u53D6\u6307\u5B9A\u8D44\u6E90\uFF1B</li><li>\u6839\u636Eclasspath\u8BFB\u53D6\u8D44\u6E90\u65F6\uFF0C\u9700\u8981\u68C0\u67E5\u8FD4\u56DE\u7684InputStream\u662F\u5426\u4E3Anull\u3002</li></ul><h3 id="\u4F7F\u7528files" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528files" aria-hidden="true">#</a> \u4F7F\u7528Files</h3><ul><li>byte[] data = Files.readAllBytes(Paths.get(&quot;/path/to/file.txt&quot;));</li><li>// \u9ED8\u8BA4\u4F7F\u7528UTF-8\u7F16\u7801\u8BFB\u53D6: String content1 = Files.readString(Paths.get(&quot;/path/to/file.txt&quot;)); // \u53EF\u6307\u5B9A\u7F16\u7801: String content2 = Files.readString(Paths.get(&quot;/path/to/file.txt&quot;), StandardCharsets.ISO_8859_1); // \u6309\u884C\u8BFB\u53D6\u5E76\u8FD4\u56DE\u6BCF\u884C\u5185\u5BB9: List&lt;String&gt; lines = Files.readAllLines(Paths.get(&quot;/path/to/file.txt&quot;));</li><li>/ \u5199\u5165\u4E8C\u8FDB\u5236\u6587\u4EF6: byte[] data = ... Files.write(Paths.get(&quot;/path/to/file.txt&quot;), data); // \u5199\u5165\u6587\u672C\u5E76\u6307\u5B9A\u7F16\u7801: Files.writeString(Paths.get(&quot;/path/to/file.txt&quot;), &quot;\u6587\u672C\u5185\u5BB9...&quot;, StandardCharsets.ISO_8859_1); // \u6309\u884C\u5199\u5165\u6587\u672C: List&lt;String&gt; lines = ... Files.write(Paths.get(&quot;/path/to/file.txt&quot;), lines);</li><li>\u6B64\u5916\uFF0CFiles\u5DE5\u5177\u7C7B\u8FD8\u6709copy()\u3001delete()\u3001exists()\u3001move()\u7B49\u5FEB\u6377\u65B9\u6CD5\u64CD\u4F5C\u6587\u4EF6\u548C\u76EE\u5F55\u3002 \u6700\u540E\u9700\u8981\u7279\u522B\u6CE8\u610F\u7684\u662F\uFF0CFiles\u63D0\u4F9B\u7684\u8BFB\u5199\u65B9\u6CD5\uFF0C\u53D7\u5185\u5B58\u9650\u5236\uFF0C\u53EA\u80FD\u8BFB\u5199\u5C0F\u6587\u4EF6\uFF0C\u4F8B\u5982\u914D\u7F6E\u6587\u4EF6\u7B49\uFF0C\u4E0D\u53EF\u4E00\u6B21\u8BFB\u5165\u51E0\u4E2AG\u7684\u5927\u6587\u4EF6\u3002\u8BFB\u5199\u5927\u578B\u6587\u4EF6\u4ECD\u7136\u8981\u4F7F\u7528\u6587\u4EF6\u6D41\uFF0C\u6BCF\u6B21\u53EA\u8BFB\u5199\u4E00\u90E8\u5206\u6587\u4EF6\u5185\u5BB9\u3002</li></ul><h3 id="\u5185\u5B58\u6620\u5C04\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5185\u5B58\u6620\u5C04\u6587\u4EF6" aria-hidden="true">#</a> \u5185\u5B58\u6620\u5C04\u6587\u4EF6</h3><ul><li>\u5185\u5B58\u6620\u5C04\u6587\u4EF6 I/O \u662F\u4E00\u79CD\u8BFB\u548C\u5199\u6587\u4EF6\u6570\u636E\u7684\u65B9\u6CD5\uFF0C\u5B83\u53EF\u4EE5\u6BD4\u5E38\u89C4\u7684\u57FA\u4E8E\u6D41\u6216\u8005\u57FA\u4E8E\u901A\u9053\u7684 I/O \u5FEB\u5F97\u591A\u3002</li></ul><p>\u5411\u5185\u5B58\u6620\u5C04\u6587\u4EF6\u5199\u5165\u53EF\u80FD\u662F\u5371\u9669\u7684\uFF0C\u53EA\u662F\u6539\u53D8\u6570\u7EC4\u7684\u5355\u4E2A\u5143\u7D20\u8FD9\u6837\u7684\u7B80\u5355\u64CD\u4F5C\uFF0C\u5C31\u53EF\u80FD\u4F1A\u76F4\u63A5\u4FEE\u6539\u78C1\u76D8\u4E0A\u7684\u6587\u4EF6\u3002\u4FEE\u6539\u6570\u636E\u4E0E\u5C06\u6570\u636E\u4FDD\u5B58\u5230\u78C1\u76D8\u662F\u6CA1\u6709\u5206\u5F00\u7684\u3002</p><p>\u4E0B\u9762\u4EE3\u7801\u884C\u5C06\u6587\u4EF6\u7684\u524D 1024 \u4E2A\u5B57\u8282\u6620\u5C04\u5230\u5185\u5B58\u4E2D\uFF0Cmap() \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A MappedByteBuffer\uFF0C\u5B83\u662F ByteBuffer \u7684\u5B50\u7C7B\u3002\u56E0\u6B64\uFF0C\u53EF\u4EE5\u50CF\u4F7F\u7528\u5176\u4ED6\u4EFB\u4F55 ByteBuffer \u4E00\u6837\u4F7F\u7528\u65B0\u6620\u5C04\u7684\u7F13\u51B2\u533A\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u4F1A\u5728\u9700\u8981\u65F6\u8D1F\u8D23\u6267\u884C\u6620\u5C04\u3002</p><p>MappedByteBuffer mbb = fc.map(FileChannel.MapMode.READ_WRITE, 0, 1024);</p><h3 id="office" tabindex="-1"><a class="header-anchor" href="#office" aria-hidden="true">#</a> OFFICE</h3><h3 id="pic" tabindex="-1"><a class="header-anchor" href="#pic" aria-hidden="true">#</a> PIC</h3><h3 id="csv" tabindex="-1"><a class="header-anchor" href="#csv" aria-hidden="true">#</a> CSV</h3><h3 id="html" tabindex="-1"><a class="header-anchor" href="#html" aria-hidden="true">#</a> HTML</h3><h3 id="\u538B\u7F29\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u538B\u7F29\u6587\u4EF6" aria-hidden="true">#</a> \u538B\u7F29\u6587\u4EF6</h3><table><thead><tr><th>IO</th><th>NIO&lt;br/&gt;</th></tr></thead><tbody><tr><td>\u9762\u5411\u6D41 &lt;br/&gt;</td><td>\u9762\u5411\u7F13\u51B2</td></tr><tr><td>\u963B\u585EIO &lt;br/&gt;</td><td>\u975E\u963B\u585EIO</td></tr><tr><td>\u65E0</td><td>\u9009\u62E9\u5668</td></tr></tbody></table><h1 id="net" tabindex="-1"><a class="header-anchor" href="#net" aria-hidden="true">#</a> NET</h1><h2 id="osi\u4E03\u5C42\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#osi\u4E03\u5C42\u6A21\u578B" aria-hidden="true">#</a> OSI\u4E03\u5C42\u6A21\u578B</h2><h2 id="tcp-ip\u4E94\u5C42\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#tcp-ip\u4E94\u5C42\u6A21\u578B" aria-hidden="true">#</a> TCP/IP\u4E94\u5C42\u6A21\u578B</h2><h2 id="\u4E09\u6B21\u63E1\u624B\u3001\u56DB\u6B21\u6325\u624B" tabindex="-1"><a class="header-anchor" href="#\u4E09\u6B21\u63E1\u624B\u3001\u56DB\u6B21\u6325\u624B" aria-hidden="true">#</a> \u4E09\u6B21\u63E1\u624B\u3001\u56DB\u6B21\u6325\u624B</h2><h2 id="ip" tabindex="-1"><a class="header-anchor" href="#ip" aria-hidden="true">#</a> IP</h2><h2 id="\u57DF\u540D" tabindex="-1"><a class="header-anchor" href="#\u57DF\u540D" aria-hidden="true">#</a> \u57DF\u540D</h2><h2 id="\u7AEF\u53E3" tabindex="-1"><a class="header-anchor" href="#\u7AEF\u53E3" aria-hidden="true">#</a> \u7AEF\u53E3</h2><h2 id="\u901A\u4FE1\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#\u901A\u4FE1\u534F\u8BAE" aria-hidden="true">#</a> \u901A\u4FE1\u534F\u8BAE</h2><h2 id="\u4E00\u6B21\u8BF7\u6C42\u7684\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E00\u6B21\u8BF7\u6C42\u7684\u8FC7\u7A0B" aria-hidden="true">#</a> \u4E00\u6B21\u8BF7\u6C42\u7684\u8FC7\u7A0B</h2><h1 id="\u9762\u5411\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u9762\u5411\u5BF9\u8C61" aria-hidden="true">#</a> \u9762\u5411\u5BF9\u8C61</h1><h1 id="jdk\u65B0\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#jdk\u65B0\u7279\u6027" aria-hidden="true">#</a> JDK\u65B0\u7279\u6027</h1><h1 id="\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> \u64CD\u4F5C\u7B26</h1><h1 id="\u6D41\u7A0B\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7A0B\u63A7\u5236" aria-hidden="true">#</a> \u6D41\u7A0B\u63A7\u5236</h1><h1 id="\u521D\u59CB\u5316\u4E0E\u6E05\u7406" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316\u4E0E\u6E05\u7406" aria-hidden="true">#</a> \u521D\u59CB\u5316\u4E0E\u6E05\u7406</h1><h1 id="\u6743\u9650\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#\u6743\u9650\u63A7\u5236" aria-hidden="true">#</a> \u6743\u9650\u63A7\u5236</h1><h1 id="\u590D\u7528\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u590D\u7528\u7C7B" aria-hidden="true">#</a> \u590D\u7528\u7C7B</h1><h1 id="\u591A\u6001" tabindex="-1"><a class="header-anchor" href="#\u591A\u6001" aria-hidden="true">#</a> \u591A\u6001</h1><h1 id="\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3" aria-hidden="true">#</a> \u63A5\u53E3</h1><h1 id="\u5185\u90E8\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8\u7C7B" aria-hidden="true">#</a> \u5185\u90E8\u7C7B</h1><h1 id="\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u5F02\u5E38" aria-hidden="true">#</a> \u5F02\u5E38</h1><h1 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h1><h1 id="\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u6B63\u5219\u8868\u8FBE\u5F0F</h1><h1 id="\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B" aria-hidden="true">#</a> \u6CDB\u578B</h1><h1 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h1><h1 id="\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#\u679A\u4E3E" aria-hidden="true">#</a> \u679A\u4E3E</h1><h1 id="\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u89E3" aria-hidden="true">#</a> \u6CE8\u89E3</h1><h1 id="\u5E76\u53D1" tabindex="-1"><a class="header-anchor" href="#\u5E76\u53D1" aria-hidden="true">#</a> \u5E76\u53D1</h1><h1 id="\u56FE\u5F62\u5316" tabindex="-1"><a class="header-anchor" href="#\u56FE\u5F62\u5316" aria-hidden="true">#</a> \u56FE\u5F62\u5316</h1><h1 id="\u5176\u4ED6\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u57FA\u7840" aria-hidden="true">#</a> \u5176\u4ED6\u57FA\u7840</h1><h2 id="array" tabindex="-1"><a class="header-anchor" href="#array" aria-hidden="true">#</a> Array</h2><h2 id="jvm\u4E0E\u4E0A\u5C42\u6280\u672F-jvm-\u4E0E\u4E0A\u5C42\u6280\u672F" tabindex="-1"><a class="header-anchor" href="#jvm\u4E0E\u4E0A\u5C42\u6280\u672F-jvm-\u4E0E\u4E0A\u5C42\u6280\u672F" aria-hidden="true">#</a> [JVM\u4E0E\u4E0A\u5C42\u6280\u672F](JVM \u4E0E\u4E0A\u5C42\u6280\u672F)</h2><h2 id="hashcode\u4E0E-equals\u4E0E" tabindex="-1"><a class="header-anchor" href="#hashcode\u4E0E-equals\u4E0E" aria-hidden="true">#</a> hashcode\u4E0E equals\u4E0E ==</h2><ul><li><p><strong>\u76F8\u5173\u6982\u5FF5</strong></p><p>1.equals(Object obj)\u65B9\u6CD5\u7528\u6765\u5224\u65AD\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u201C\u76F8\u540C\u201D\uFF0C\u5982\u679C\u201C\u76F8\u540C\u201D\u5219\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse\u3002 hashCode()\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2Aint\u6570\uFF0C\u5728Object\u7C7B\u4E2D\u7684<strong>\u9ED8\u8BA4\u5B9E\u73B0</strong>\u662F\u201C\u5C06\u8BE5\u5BF9\u8C61\u7684\u5185\u90E8\u5730\u5740\u8F6C\u6362\u6210\u4E00\u4E2A\u6574\u6570\u8FD4\u56DE\u201D\u3002</p><p>2.\u82E5\u4E24\u4E2A\u5BF9\u8C61equals(Object obj)\u8FD4\u56DEtrue\uFF0C\u5219hashCode\uFF08\uFF09\u6709\u5FC5\u8981\u4E5F\u8FD4\u56DE\u76F8\u540C\u7684int\u6570\u3002</p><p>3.\u82E5\u4E24\u4E2A\u5BF9\u8C61equals(Object obj)\u8FD4\u56DEfalse\uFF0C\u5219hashCode\uFF08\uFF09\u4E0D\u4E00\u5B9A\u8FD4\u56DE\u4E0D\u540C\u7684int\u6570\u3002</p><p>4.\u82E5\u4E24\u4E2A\u5BF9\u8C61hashCode\uFF08\uFF09\u8FD4\u56DE\u76F8\u540Cint\u6570\uFF0C\u5219equals\uFF08Object obj\uFF09\u4E0D\u4E00\u5B9A\u8FD4\u56DEtrue\u3002</p><p>5.\u82E5\u4E24\u4E2A\u5BF9\u8C61hashCode\uFF08\uFF09\u8FD4\u56DE\u4E0D\u540Cint\u6570\uFF0C\u5219equals\uFF08Object obj\uFF09\u4E00\u5B9A\u8FD4\u56DEfalse\u3002</p><p>6.\u540C\u4E00\u5BF9\u8C61\u5728\u6267\u884C\u671F\u95F4\u82E5\u5DF2\u7ECF\u5B58\u50A8\u5728\u96C6\u5408\u4E2D\uFF0C\u5219\u4E0D\u80FD\u4FEE\u6539\u5F71\u54CDhashCode\u503C\u7684\u76F8\u5173\u4FE1\u606F\uFF0C\u5426\u5219\u4F1A\u5BFC\u81F4\u5185\u5B58\u6CC4\u9732\u95EE\u9898\u3002</p><p>7.\u82E5\u91CD\u5199\u4E86equals(Object obj)\u65B9\u6CD5\uFF0C\u5219\u6709\u5FC5\u8981\u91CD\u5199hashCode()\u65B9\u6CD5\u3002</p></li><li><p><strong>\u4EC0\u4E48\u65F6\u5019\u9700\u8981\u91CD\u5199hashcode\u4E0Eequals\uFF1F</strong></p><ol><li>\u5BF9\u8C61\u6BD4\u8F83</li></ol></li><li><p><strong>equals\u4E0E==\u533A\u522B\uFF1F</strong></p><ol><li>\u57FA\u672C\u7C7B\u578B\u4E2D\uFF0C==\u5224\u65AD\u503C\u662F\u5426\u76F8\u7B49\uFF0C\u5F15\u7528\u7C7B\u578B\u4E2D\u6BD4\u8F83\u7684\u662F\u5730\u5740\u662F\u5426\u76F8\u7B49</li><li>equals\u53EA\u80FD\u7528\u4E8E\u5F15\u7528\u7C7B\u578B\uFF0Cequals\u5177\u4F53\u5224\u65AD\u8981\u5728\u5224\u65AD\u5BF9\u8C61\u4E2D\u770Bequals\u5B9E\u73B0,\u9ED8\u8BA4\u662F\u5224\u65AD\u5730\u5740\uFF0C\u91CD\u5199\u4E4B\u540E\u770B\u5177\u4F53\u5B9E\u73B0\uFF0C\u4E00\u822C\u662F\u6BD4\u8F83\u5BF9\u8C61\u5185\u5BB9\u3002</li></ol></li></ul><h2 id="\u9762\u5411\u5BF9\u8C61-1" tabindex="-1"><a class="header-anchor" href="#\u9762\u5411\u5BF9\u8C61-1" aria-hidden="true">#</a> \u9762\u5411\u5BF9\u8C61</h2><ol><li><p>\u5C01\u88C5\u7EE7\u627F\u591A\u6001</p><ul><li><p>\u5C01\u88C5</p><p>\u200B \u5C06\u4E00\u7CFB\u5217\u64CD\u4F5C\u5C01\u88C5\u6210\u4E00\u4E2A\u529F\u80FD\uFF0C\u9690\u85CF\u5B9E\u73B0\u7EC6\u8282\uFF0C\u65BD\u52A0\u6743\u9650\u63A7\u5236\uFF0C\u8BA9\u7528\u6237\u4E0D\u518D\u64CD\u5FC3\u529F\u80FD\u5B9E\u73B0\uFF0C\u51CF\u5C11\u4EE3\u7801\u5197\u4F59\u3002</p></li><li><p>\u7EE7\u627F\uFF08extends\uFF09</p><p>\u200B \u6D88\u9664\u91CD\u590D\u521B\u5EFA\u76F8\u540C\u529F\u80FD\u7C7B\uFF0C\u7EE7\u627F\u4EE5\u590D\u5236\u57FA\u7C7B\u529F\u80FD\u5C5E\u6027\u5E76<strong>\u8986\u76D6</strong>\u5DF2\u8FDB\u884C\u6269\u5C55\u4FEE\u6539\u3002</p><p>\u200B \u7EE7\u627F\u521D\u59CB\u5316\u94FE\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\u5B58\u5728\u7EE7\u627F\u7684\u60C5\u51B5\u4E0B\uFF0C\u521D\u59CB\u5316\u987A\u5E8F\u4E3A\uFF1A
 \u7236\u7C7B\uFF08\u9759\u6001\u53D8\u91CF\u3001\u9759\u6001\u8BED\u53E5\u5757\uFF09
 \u5B50\u7C7B\uFF08\u9759\u6001\u53D8\u91CF\u3001\u9759\u6001\u8BED\u53E5\u5757\uFF09
 \u7236\u7C7B\uFF08\u5B9E\u4F8B\u53D8\u91CF\u3001\u666E\u901A\u8BED\u53E5\u5757\uFF09
 \u7236\u7C7B\uFF08\u6784\u9020\u51FD\u6570\uFF09
 \u5B50\u7C7B\uFF08\u5B9E\u4F8B\u53D8\u91CF\u3001\u666E\u901A\u8BED\u53E5\u5757\uFF09
 \u5B50\u7C7B\uFF08\u6784\u9020\u51FD\u6570\uFF09*/</span>
 \u9759\u6001<span class="token operator">--</span><span class="token operator">&gt;</span>\u5B9E\u4F8B<span class="token operator">--</span>\u300B\u666E\u901A\u8BED\u53E5\u5757<span class="token operator">--</span>\u300B\u6784\u9020
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u591A\u6001</p><p>\u63A5\u53E3\u548C\u5B9E\u73B0\u7C7B\uFF0C\u76F8\u540C\u63A5\u53E3\u6709\u4E0D\u540C\u5B9E\u73B0\u7C7B\u4EE5\u5B9E\u73B0\u4E0D\u540C\u6837\u5F0F\u7684\u76F8\u540C\u529F\u80FD\u3002</p></li></ul></li><li></li></ol><h2 id="final\u3001finally\u3001finalize" tabindex="-1"><a class="header-anchor" href="#final\u3001finally\u3001finalize" aria-hidden="true">#</a> final\u3001finally\u3001finalize</h2><p>\u200B final\u901A\u5E38\u542B\u4E49\u4E3A\u4E0D\u53EF\u6539\u53D8\uFF0C\u65E0\u6CD5\u6539\u53D8\u7531\u8BBE\u8BA1\u548C\u6548\u7387\u4E24\u4E2A\u65B9\u9762\u3002\u4FEE\u9970\u7C7B\u4E0D\u53EF\u88AB\u7EE7\u627F\uFF08\u7C7B\u4E2D\u65B9\u6CD5\u88AB\u9690\u5F0F\u751F\u547D\u4E3Afinal\uFF09\uFF0C\u4FEE\u9970\u65B9\u6CD5\u4E0D\u53EF\u88AB\u8986\u76D6\uFF08\u6548\u679C\u540C\u88ABprivate\u4FEE\u9970\u7684\u65B9\u6CD5\uFF0C\u4E5F\u88AB\u9690\u5F0Ffinal\u4E86\uFF09\uFF0C\u4FEE\u9970\u53D8\u91CF\u4E0D\u53EF\u88AB\u4FEE\u6539\uFF08\u57FA\u672C\u53D8\u91CF\u4FEE\u9970\u540E\u5373\u4E3A\u5E38\u91CF\uFF09\uFF0C\u4FEE\u9970\u5BF9\u8C61\u53EA\u662F\u9650\u5236\u4E86\u5176\u5F15\u7528\u5730\u5740\u4F46\u4E0D\u4F1A\u9650\u5236\u5176\u5BF9\u8C61\u503C\u3002finally\u662F\u5728try..catch\u8BED\u53E5\u4E2Dtry\u6267\u884C\u540E\u4E14\u672A\u88AB\u5C06\u7A0B\u5E8F\u7EC8\u6B62\u6700\u540E\u5FC5\u987B\u6267\u884C\u7684\u8BED\u53E5\u5757\u3001finalize\u7528\u4E8E\u5BF9\u8C61\u56DE\u6536\uFF0C\u5C5E\u4E8EObject\u7684\u65B9\u6CD5\uFF0C\u8C03\u7528\u5E76\u4E0D\u4E00\u5B9A\u4F1A\u9A6C\u4E0A\u56DE\u6536\u5BF9\u8C61\u3002</p><h2 id="\u5411\u4E0A-\u4E0B\u8F6C\u578B" tabindex="-1"><a class="header-anchor" href="#\u5411\u4E0A-\u4E0B\u8F6C\u578B" aria-hidden="true">#</a> \u5411\u4E0A/\u4E0B\u8F6C\u578B</h2><p>\u5411\u4E0A\u5373\u7236\u7528\u5B50\uFF0C\u5411\u4E0B\u5373\u5B50\u7528\u7236\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Father</span> f1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Son</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u8FD9\u5C31\u53EB upcasting \uFF08\u5411\u4E0A\u8F6C\u578B)</span>
<span class="token comment">// \u73B0\u5728 f1 \u5F15\u7528\u6307\u5411\u4E00\u4E2ASon\u5BF9\u8C61</span>

<span class="token comment">//\u5E76\u4E0D\u662F\u6240\u6709\u7684\u5BF9\u8C61\u90FD\u53EF\u4EE5\u5411\u4E0B\u8F6C\u578B\uFF0C\u53EA\u6709\u5F53\u8FD9\u4E2A\u5BF9\u8C61\u539F\u672C\u5C31\u662F\u5B50\u7C7B\u5BF9\u8C61\u901A\u8FC7\u5411\u4E0A\u8F6C\u578B\u5F97\u5230\u7684\u65F6\u5019\u624D\u80FD\u591F\u6210\u529F\u8F6C\u578B\u3002</span>
<span class="token class-name">Son</span> s1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Son</span><span class="token punctuation">)</span>f1<span class="token punctuation">;</span>   <span class="token comment">// \u8FD9\u5C31\u53EB downcasting (\u5411\u4E0B\u8F6C\u578B)</span>
<span class="token comment">// \u73B0\u5728f1 \u8FD8\u662F\u6307\u5411 Son\u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5185\u90E8\u7C7B\u3001\u533F\u540D\u5185\u90E8\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8\u7C7B\u3001\u533F\u540D\u5185\u90E8\u7C7B" aria-hidden="true">#</a> \u5185\u90E8\u7C7B\u3001\u533F\u540D\u5185\u90E8\u7C7B</h2><p>\u6CA1\u6709\u540D\u5B57\u7684\u7C7B\u6216\u63A5\u53E3\u5B9E\u73B0\u6240\u4EE5\u53EA\u80FD\u4F7F\u7528\u4E00\u6B21\uFF0C\u65E0\u6CD5\u88AB\u5176\u4ED6\u7C7B\u5B9E\u4F8B\u5316\uFF0C\u7528\u6765\u7B80\u5316\u4EE3\u7801\u7F16\u5199\u3002</p><p>\u533F\u540D\u7C7B\u53EF\u7EE7\u627F\u3001\u91CD\u5199\u7236\u7C7B\u7684\u65B9\u6CD5 \u4F7F\u7528\u533F\u540D\u7C7B\u65F6\uFF0C\u5FC5\u7136\u662F\u5728\u67D0\u4E2A\u7C7B\u4E2D\u76F4\u63A5\u7528<strong>\u533F\u540D\u7C7B\u521B\u5EFA\u5BF9\u8C61</strong>\uFF0C\u56E0\u6B64<strong>\u533F\u540D\u7C7B\u4E00\u5B9A\u662F\u5185\u90E8\u7C7B</strong> \u533F\u540D\u7C7B\u53EF\u4EE5\u8BBF\u95EE\u5916\u5D4C\u7C7B\u4E2D\u7684\u6210\u5458\u53D8\u91CF\u548C\u65B9\u6CD5\uFF0C\u533F\u540D\u7C7B\u7684\u7C7B\u4F53\u4E2D\u4E0D\u53EF\u4EE5\u58F0\u660Estatic\u6210\u5458\u53D8\u91CF\u548Cstatic\u65B9\u6CD5 \u7531\u4E8E\u533F\u540D\u7C7B\u662F\u4E00\u4E2A\u5B50\u7C7B\uFF0C\u4F46\u6CA1\u6709\u7C7B\u540D\uFF0C\u6240\u4EE5\u5728\u7528\u533F\u540D\u7C7B\u521B\u5EFA\u5BF9\u8C61\u65F6\uFF0C\u8981\u76F4\u63A5\u4F7F\u7528\u7236\u7C7B\u7684\u6784\u9020\u65B9\u6CD5</p><h2 id="static" tabindex="-1"><a class="header-anchor" href="#static" aria-hidden="true">#</a> static</h2><p>\u200B \u65B9\u4FBF\u5728\u6CA1\u6709\u521B\u5EFA\u5BF9\u8C61\u7684\u60C5\u51B5\u4E0B\u6765\u8FDB\u884C\u8C03\u7528\uFF08\u65B9\u6CD5/\u53D8\u91CF\uFF09\uFF0C\u9759\u6001\u65B9\u6CD5\u4E2D\u4E0D\u80FD\u4F9D\u8D56\u975E\u9759\u6001\u65B9\u6CD5\u3001\u5C5E\u6027\uFF0C\u53CD\u4E4B\u975E\u9759\u6001\u6210\u5458\u65B9\u6CD5\u4E2D\u53EF\u8BBF\u95EE\u9759\u6001\u6210\u5458\u53D8\u91CF\u3001\u65B9\u6CD5\u3002 \u9759\u6001\u53D8\u91CF\u5728\u5185\u5B58\u4E2D\u53EA\u6709\u4E00\u4E2A\uFF0C\u975E\u9759\u6001\u53D8\u91CF\u968F\u5BF9\u8C61\u521B\u5EFA\u800C\u521B\u5EFA\uFF0C\u5404\u4E2A\u53D8\u91CF\u4E4B\u95F4\u4E92\u4E0D\u5F71\u54CD\u3002<strong>static\u4E0D\u80FD\u7528\u6765\u4FEE\u9970\u5C40\u90E8\u53D8\u91CF</strong>\u3002\u9759\u6001\u4EE3\u7801\u5757\u53EA\u6709\u5728\u7C7B\u52A0\u8F7D\u7684\u65F6\u5019\u521B\u5EFA\u4E00\u6B21\uFF0C\u9002\u5408\u4E8E\u53EA\u9700\u8981\u8FDB\u884C\u4E00\u6B21\u521D\u59CB\u5316\u7684\u64CD\u4F5C\u3002\u9759<strong>\u53EA</strong>\u9759\uFF0C\u975E<strong>\u53EF</strong>\u9759</p><p><img src="http://qnimg.gisfsde.com/work/image-20220308140536605.png" alt="image-20220308140536605" loading="lazy"></p><h2 id="cap\u3001base\u7406\u8BBA" tabindex="-1"><a class="header-anchor" href="#cap\u3001base\u7406\u8BBA" aria-hidden="true">#</a> CAP\u3001BASE\u7406\u8BBA</h2><h2 id="aqs" tabindex="-1"><a class="header-anchor" href="#aqs" aria-hidden="true">#</a> AQS</h2><h2 id="jdk\u65B0\u7248\u672C\u7279\u5F81" tabindex="-1"><a class="header-anchor" href="#jdk\u65B0\u7248\u672C\u7279\u5F81" aria-hidden="true">#</a> JDK\u65B0\u7248\u672C\u7279\u5F81</h2>`,98),os={id:"lambda-\u8868\u8FBE\u5F0F",tabindex:"-1"},cs=n("a",{class:"header-anchor",href:"#lambda-\u8868\u8FBE\u5F0F","aria-hidden":"true"},"#",-1),ls=s(),is={href:"https://mbd.baidu.com/newspage/data/landingsuper?third=baijiahao&baijiahao_id=1685401324435208513&c_source=duedge&p_tk=7164XVbr93kEf9ebx0OCzJEBUC%2FSHtSm0HlbQtXUZnwLWsjL7uvd3VtqGMu6%2BPCP1nEnkpjkthOA%2Fges4OjPt98pqpAcTnKrjR0H1SBkWqMgO7awH2MmJkS5erhN2ZKz%2Bqas&p_timestamp=1646483138&p_sign=39698dd00b7d66b85d43028d11209e58&p_signature=b95e00362b799da95380ab116026ade1&__pc2ps_ab=7164XVbr93kEf9ebx0OCzJEBUC%2FSHtSm0HlbQtXUZnwLWsjL7uvd3VtqGMu6%2BPCP1nEnkpjkthOA%2Fges4OjPt98pqpAcTnKrjR0H1SBkWqMgO7awH2MmJkS5erhN2ZKz%2Bqas%7C1646483138%7Cb95e00362b799da95380ab116026ade1%7C39698dd00b7d66b85d43028d11209e58",target:"_blank",rel:"noopener noreferrer"},us=s("Lambda \u8868\u8FBE\u5F0F"),ks=n("p",null,[n("img",{src:"http://qnimg.gisfsde.com/c8ea15ce36d3d5399cf621bd58615a57372ab0f6.jpeg",alt:"",loading:"lazy"})],-1),rs={id:"\u6D41stream",tabindex:"-1"},ds=n("a",{class:"header-anchor",href:"#\u6D41stream","aria-hidden":"true"},"#",-1),ms=s(),vs={href:"https://www.runoob.com/java/java8-streams.html",target:"_blank",rel:"noopener noreferrer"},bs=s("\u6D41Stream\uFF08\uFF09"),hs=p(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">pers<span class="token punctuation">.</span>lxl<span class="token punctuation">.</span>mylearnproject<span class="token punctuation">.</span>programbase<span class="token punctuation">.</span>newjdk</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">IntSummaryStatistics</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Collectors</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * JDK8 \u65B0\u7279\u6027stream\uFF08\uFF09
 * \u4EE5\u58F0\u660E\u7684\u65B9\u5F0F\u5904\u7406\u6570\u636E\uFF0C\u7C7B\u4F3C\u7528sql\u4ECE\u6570\u636E\u5E93\u67E5\u8BE2\u6570\u636E\u7684\u65B9\u5F0F\u6765\u63D0\u4F9B\u5BF9\u96C6\u5408\u7684\u8FD0\u7B97\u548C\u8868\u8FBE\u7684\u9AD8\u9636\u62BD\u8C61
 * \u5176\u5C06\u8981\u5904\u7406\u7684\u6570\u636E\u770B\u6210\u4E00\u79CD\u6D41\uFF0C\u6D41\u5728\u7BA1\u9053\u4E2D\u4F20\u8F93\uFF0C\u5176\u53EF\u4EE5\u518D\u7BA1\u9053\u7684\u8282\u70B9\u4E2D\u8FDB\u884C\u7B5B\u9009\u6392\u5E8F\u805A\u5408\u7B49\u4E00\u7CFB\u5217\u64CD\u4F5C
 * Stream\uFF08\u6D41\uFF09\u662F\u4E00\u4E2A\u6765\u81EA\u6570\u636E\u6E90\u7684\u5143\u7D20\u961F\u5217\u5E76\u652F\u6301\u805A\u5408\u64CD\u4F5C
 * \u5143\u7D20\u662F\u7279\u5B9A\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u5F62\u6210\u4E00\u4E2A\u961F\u5217\u3002 Java\u4E2D\u7684Stream\u5E76\u4E0D\u4F1A\u5B58\u50A8\u5143\u7D20\uFF0C\u800C\u662F\u6309\u9700\u8BA1\u7B97\u3002
 * \u6570\u636E\u6E90 \u6D41\u7684\u6765\u6E90\u3002 \u53EF\u4EE5\u662F\u96C6\u5408\uFF0C\u6570\u7EC4\uFF0CI/O channel\uFF0C \u4EA7\u751F\u5668generator \u7B49\u3002
 * \u805A\u5408\u64CD\u4F5C \u7C7B\u4F3CSQL\u8BED\u53E5\u4E00\u6837\u7684\u64CD\u4F5C\uFF0C \u6BD4\u5982filter, map, reduce, find, match, sorted\u7B49\u3002
 * \u548C\u4EE5\u524D\u7684Collection\u64CD\u4F5C\u4E0D\u540C\uFF0C Stream\u64CD\u4F5C\u8FD8\u6709\u4E24\u4E2A\u57FA\u7840\u7684\u7279\u5F81\uFF1A
 * Pipelining: \u4E2D\u95F4\u64CD\u4F5C\u90FD\u4F1A\u8FD4\u56DE\u6D41\u5BF9\u8C61\u672C\u8EAB\u3002 \u8FD9\u6837\u591A\u4E2A\u64CD\u4F5C\u53EF\u4EE5\u4E32\u8054\u6210\u4E00\u4E2A\u7BA1\u9053\uFF0C \u5982\u540C\u6D41\u5F0F\u98CE\u683C\uFF08fluent style\uFF09\u3002 \u8FD9\u6837\u505A\u53EF\u4EE5\u5BF9\u64CD\u4F5C\u8FDB\u884C\u4F18\u5316\uFF0C \u6BD4\u5982\u5EF6\u8FDF\u6267\u884C(laziness)\u548C\u77ED\u8DEF(short-circuiting)\u3002
 * \u5185\u90E8\u8FED\u4EE3\uFF1A \u4EE5\u524D\u5BF9\u96C6\u5408\u904D\u5386\u90FD\u662F\u901A\u8FC7Iterator\u6216\u8005For-Each\u7684\u65B9\u5F0F, \u663E\u5F0F\u7684\u5728\u96C6\u5408\u5916\u90E8\u8FDB\u884C\u8FED\u4EE3\uFF0C \u8FD9\u53EB\u505A\u5916\u90E8\u8FED\u4EE3\u3002 Stream\u63D0\u4F9B\u4E86\u5185\u90E8\u8FED\u4EE3\u7684\u65B9\u5F0F\uFF0C \u901A\u8FC7\u8BBF\u95EE\u8005\u6A21\u5F0F(Visitor)\u5B9E\u73B0\u3002
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamL</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>


<span class="token comment">//      1.\u751F\u6210\u6D41</span>
        <span class="token comment">//stream() \u2212 \u4E3A\u96C6\u5408\u521B\u5EFA\u4E32\u884C\u6D41\u3002</span>
        <span class="token comment">//parallelStream() \u2212 \u4E3A\u96C6\u5408\u521B\u5EFA\u5E76\u884C\u6D41\u3002</span>
        <span class="token class-name">List</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> strings <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;efg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;abcd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jkl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> filtered <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>string <span class="token operator">-&gt;</span> <span class="token operator">!</span>string<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> filteredParallelStream <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">parallelStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>string <span class="token operator">-&gt;</span> <span class="token operator">!</span>string<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//      2.\u805A\u5408\u64CD\u4F5C</span>
<span class="token comment">//      \u8FED\u4EE3\u6570\u636Eforeach(),limit() \u83B7\u53D6\u6307\u5B9A\u6570\u91CF\u7684\u6D41,sorted() \u5BF9\u6D41\u8FDB\u884C\u6392\u5E8F\u3002</span>
        <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        random<span class="token punctuation">.</span><span class="token function">ints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//       map() \u6620\u5C04\u6BCF\u4E2A\u5143\u7D20\u5230\u5BF9\u5E94\u7684\u7ED3\u679C</span>
        <span class="token class-name">List</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numbers <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//      \u83B7\u53D6\u5BF9\u5E94\u7684\u5E73\u65B9\u6570</span>
        <span class="token class-name">List</span>\\<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> squaresList <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span> i <span class="token operator">-&gt;</span> i<span class="token operator">*</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//      filter() \u901A\u8FC7\u8BBE\u7F6E\u7684\u6761\u4EF6\u8FC7\u6EE4\u51FA\u5143\u7D20</span>
<span class="token comment">//      \u83B7\u53D6\u7A7A\u5B57\u7B26\u4E32\u7684\u6570\u91CF</span>
        <span class="token keyword">long</span> count <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>string <span class="token operator">-&gt;</span> string<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u5E76\u884C\uFF08parallel\uFF09\u7A0B\u5E8F</span>
<span class="token comment">//        parallelStream \u662F\u6D41\u5E76\u884C\u5904\u7406\u7A0B\u5E8F\u7684\u4EE3\u66FF\u65B9\u6CD5\u3002\u4EE5\u4E0B\u5B9E\u4F8B\u6211\u4EEC\u4F7F\u7528 parallelStream \u6765\u8F93\u51FA\u7A7A\u5B57\u7B26\u4E32\u7684\u6570\u91CF\uFF1A</span>
<span class="token comment">//      \u83B7\u53D6\u7A7A\u5B57\u7B26\u4E32\u7684\u6570\u91CF</span>

<span class="token comment">//        3.Collectors</span>
<span class="token comment">//        Collectors \u7C7B\u5B9E\u73B0\u5F52\u7EA6\u64CD\u4F5C\uFF0C\u4F8B\u5982\u5C06\u6D41\u8F6C\u6362\u6210\u96C6\u5408\u548C\u805A\u5408\u5143\u7D20\u3002Collectors \u53EF\u7528\u4E8E\u8FD4\u56DE\u5217\u8868\u6216\u5B57\u7B26\u4E32\uFF1A</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B5B\u9009\u5217\u8868: &quot;</span> <span class="token operator">+</span> filtered<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> mergedString <span class="token operator">=</span> strings<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>string <span class="token operator">-&gt;</span> <span class="token operator">!</span>string<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5408\u5E76\u5B57\u7B26\u4E32: &quot;</span> <span class="token operator">+</span> mergedString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        4.\u7EDF\u8BA1</span>
<span class="token comment">//        \u4E00\u4E9B\u4EA7\u751F\u7EDF\u8BA1\u7ED3\u679C\u7684\u6536\u96C6\u5668\u4E5F\u975E\u5E38\u6709\u7528\u3002\u5B83\u4EEC\u4E3B\u8981\u7528\u4E8Eint\u3001double\u3001long\u7B49\u57FA\u672C\u7C7B\u578B\u4E0A\uFF0C\u5B83\u4EEC\u53EF\u4EE5\u7528\u6765\u4EA7\u751F\u7C7B\u4F3C\u5982\u4E0B\u7684\u7EDF\u8BA1\u7ED3\u679C\u3002</span>
        <span class="token class-name">IntSummaryStatistics</span> stats <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">summaryStatistics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5217\u8868\u4E2D\u6700\u5927\u7684\u6570 : &quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getMax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5217\u8868\u4E2D\u6700\u5C0F\u7684\u6570 : &quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getMin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6240\u6709\u6570\u4E4B\u548C : &quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5E73\u5747\u6570 : &quot;</span> <span class="token operator">+</span> stats<span class="token punctuation">.</span><span class="token function">getAverage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5176\u4ED6" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a> \u5176\u4ED6</h2><ol><li><p>\u5C40\u90E8\u53D8\u91CF\u9700\u8981\u663E\u793A\u521D\u59CB\u5316</p></li><li><p>\u4FDD\u7559\u5B57\uFF1A</p><p>1\uFF0948\u4E2A\u5173\u952E\u5B57\uFF1Aabstract\u3001assert\u3001boolean\u3001break\u3001byte\u3001case\u3001catch\u3001char\u3001class\u3001continue\u3001default\u3001do\u3001double\u3001else\u3001enum\u3001extends\u3001final\u3001finally\u3001float\u3001for\u3001if\u3001implements\u3001import\u3001int\u3001interface\u3001instanceof\u3001long\u3001native\u3001new\u3001package\u3001private\u3001protected\u3001public\u3001return\u3001short\u3001static\u3001strictfp\u3001super\u3001switch\u3001synchronized\u3001this\u3001throw\u3001throws\u3001transient\u3001try\u3001void\u3001volatile\u3001while\u3002</p><p>2\uFF092\u4E2A\u4FDD\u7559\u5B57\uFF08\u73B0\u5728\u6CA1\u7528\u4EE5\u540E\u53EF\u80FD\u7528\u5230\u4F5C\u4E3A\u5173\u952E\u5B57\uFF09\uFF1Agoto\u3001const\u3002</p><p>3\uFF093\u4E2A\u7279\u6B8A\u76F4\u63A5\u91CF\uFF1Atrue\u3001false\u3001null\u3002</p></li></ol><h2 id="\u57FA\u7840\u7C7B\u5E93-\u4ECE\u4E0A\u5230\u4E0B\u7B80\u5316\u4E86\u89E3" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u7C7B\u5E93-\u4ECE\u4E0A\u5230\u4E0B\u7B80\u5316\u4E86\u89E3" aria-hidden="true">#</a> \u57FA\u7840\u7C7B\u5E93\uFF08\u4ECE\u4E0A\u5230\u4E0B\u7B80\u5316\u4E86\u89E3\uFF09</h2>`,4),gs=s("\u3010"),fs={href:"http://java.io",target:"_blank",rel:"noopener noreferrer"},ys=s("java.io"),ws=s(" java.lang java.util\u3011"),Ss=s("\u3010java.lang.reflect "),xs={href:"http://java.net",target:"_blank",rel:"noopener noreferrer"},Cs=s("java.net"),js=s(),qs={href:"http://javax.net",target:"_blank",rel:"noopener noreferrer"},Bs=s("javax.net"),Es=s(".* java.nio.* java.util.concurrent."),Ts=n("em",null,"\u3011",-1),Is=p(`<p>\u3010java.lang.annotation javax.annotation.* java.lang.refjava.math java.rmi.*javax.rmi. <em>java.security.</em> javax.security. <em>java.sqljavax.sql.</em> javax.transaction. *java.text javax.xml.<em>org.w3c.dom.<em>org.xml.sax.</em> javax.crypto. * javax.imageio.</em> javax.jws. * java.util.jar java.util.logging java.util.prefs java.util.regex java.util.zip\u3011</p><h2 id="\u8BBF\u95EE\u6743\u9650" tabindex="-1"><a class="header-anchor" href="#\u8BBF\u95EE\u6743\u9650" aria-hidden="true">#</a> \u8BBF\u95EE\u6743\u9650</h2><table><thead><tr><th>private</th><th>default</th><th>protected</th><th>public</th><th></th></tr></thead><tbody><tr><td>\u540C\u4E00\u4E2A\u7C7B\u4E2D</td><td>\u221A</td><td>\u221A</td><td>\u221A</td><td>\u221A</td></tr><tr><td>\u540C\u4E00\u4E2A\u5305\u4E2D</td><td></td><td>\u221A</td><td>\u221A</td><td>\u221A</td></tr><tr><td>\u5B50\u7C7B\u4E2D</td><td></td><td></td><td>\u221A</td><td>\u221A</td></tr><tr><td>\u5168\u5C40\u8303\u56F4\u5185</td><td></td><td></td><td></td><td>\u221A</td></tr></tbody></table><h2 id="\u57FA\u672C\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u57FA\u672C\u6570\u636E\u7C7B\u578B</h2><table><thead><tr><th>\u6570\u636E\u7C7B\u578B</th><th>\u4F4D\u6570</th><th>\u9ED8\u8BA4\u503C</th><th>\u53D6\u503C\u8303\u56F4</th><th>\u4E3E\u4F8B\u8BF4\u660E</th></tr></thead><tbody><tr><td>byte(\u4F4D)</td><td>8</td><td>0</td><td>-2^7 --- 2^7-1</td><td>byte b = 10;</td></tr><tr><td>boolean(\u5E03\u5C14\u503C)</td><td>8</td><td>false</td><td>true\u3001false</td><td>boolean b = true;</td></tr><tr><td>short(\u77ED\u6574\u6570)</td><td>16</td><td>0</td><td>-2^15 --- 2^15-1</td><td>short s = 10;</td></tr><tr><td>char(\u5B57\u7B26)</td><td>16</td><td>\u7A7A</td><td>0 --- 2^16-1</td><td>char c = &#39;c&#39;;</td></tr><tr><td>int(\u6574\u6570)</td><td>32</td><td>0</td><td>-2^31 --- 2^31-1</td><td>int i = 10;</td></tr><tr><td>float(\u5355\u7CBE\u5EA6)</td><td>32</td><td>0.0</td><td>-2^31 --- 2^31-1</td><td>float f = 10.0<strong>f</strong>;</td></tr><tr><td>long(\u957F\u6574\u6570)</td><td>64</td><td>0</td><td>-2^63 --- 2^63-1</td><td>long l = 10<strong>l</strong>;</td></tr><tr><td>double(\u53CC\u7CBE\u5EA6)</td><td>64</td><td>0.0</td><td>-2^63 --- 2^63-1</td><td>double d = 10.0<strong>d</strong>;</td></tr></tbody></table><h2 id="\u9762\u5411\u5BF9\u8C61-2" tabindex="-1"><a class="header-anchor" href="#\u9762\u5411\u5BF9\u8C61-2" aria-hidden="true">#</a> \u9762\u5411\u5BF9\u8C61</h2><p>\u5C01\u88C5\u7EE7\u627F\u591A\u6001\uFF0C</p><h2 id="\u81EA\u52A8\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u81EA\u52A8\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> \u81EA\u52A8\u7C7B\u578B\u8F6C\u6362</h2><p>1.\u82E5\u53C2\u4E0E\u8FD0\u7B97\u7684\u6570\u636E<strong>\u7C7B\u578B\u4E0D\u540C</strong>\uFF0C\u5219\u5148<strong>\u8F6C\u6362\u6210\u540C\u4E00\u7C7B\u578B</strong>\uFF0C\u7136\u540E\u8FDB\u884C\u8FD0\u7B97\u3002</p><p>2.<strong>\u8F6C\u6362\u6309\u6570\u636E\u957F\u5EA6\u589E\u52A0\u7684\u65B9\u5411\u8FDB\u884C</strong>\uFF0C\u4EE5\u4FDD\u8BC1\u7CBE\u5EA6\u4E0D\u964D\u4F4E\u3002\u4F8B\u5982int\u578B\u548Clong\u578B\u8FD0\u7B97\u65F6\uFF0C\u5148\u628Aint\u91CF\u8F6C\u6210long\u578B\u540E\u518D\u8FDB\u884C\u8FD0\u7B97\u3002</p><p>3.\u6240\u6709\u7684<strong>\u6D6E\u70B9\u8FD0\u7B97\u90FD\u662F\u4EE5\u53CC\u7CBE\u5EA6\u8FDB\u884C</strong>\u7684\uFF0C\u5373\u4F7F\u4EC5\u542Bfloat\u5355\u7CBE\u5EA6\u91CF\u8FD0\u7B97\u7684\u8868\u8FBE\u5F0F\uFF0C\u4E5F\u8981\u5148\u8F6C\u6362\u6210double\u578B\uFF0C\u518D\u4F5C\u8FD0\u7B97\u3002</p><p>4.<strong>char\u578B\u548Cshort\u578B\u53C2\u4E0E\u8FD0\u7B97\u65F6\uFF0C\u5FC5\u987B\u5148\u8F6C\u6362\u6210int\u578B</strong>\u3002</p><p>5.\u5728\u8D4B\u503C\u8FD0\u7B97\u4E2D\uFF0C\u8D4B\u503C\u53F7\u4E24\u8FB9\u7684\u6570\u636E\u7C7B\u578B\u4E0D\u540C\u65F6\uFF0C\u9700\u8981\u628A<strong>\u53F3\u8FB9</strong>\u8868\u8FBE\u5F0F\u7684\u7C7B\u578B\u5C06<strong>\u8F6C</strong>\u6362\u4E3A<strong>\u5DE6\u8FB9</strong>\u53D8\u91CF\u7684\u7C7B\u578B\u3002\u5982\u679C\u53F3\u8FB9\u8868\u8FBE\u5F0F\u7684\u6570\u636E\u7C7B\u578B\u957F\u5EA6\u6BD4\u5DE6\u8FB9\u957F\u65F6\uFF0C\u5C06\u4E22\u5931\u4E00\u90E8\u5206\u6570\u636E\uFF0C\u8FD9\u6837<strong>\u4F1A\u964D\u4F4E\u7CBE\u5EA6</strong>\u3002</p><p>\u4E0B\u56FE\u8868\u793A\u4E86\u7C7B\u578B\u81EA\u52A8\u8F6C\u6362\u7684\u89C4\u5219\uFF1A</p><p><img src="http://qnimg.gisfsde.com/415611_1442458661106_F4A62FDD254F710F39378C754ED65E61" alt="img" loading="lazy"></p><h2 id="string\u3001stringbuffer\u3001stringbuilder-\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#string\u3001stringbuffer\u3001stringbuilder-\u533A\u522B" aria-hidden="true">#</a> String\u3001StringBuffer\u3001StringBuilder \u533A\u522B</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token operator">*</span><span class="token operator">*</span>
 <span class="token operator">*</span> <span class="token class-name">String</span>\u4F7F\u7528<span class="token operator">+</span>\u62FC\u63A5\u5B57\u7B26\u4E32\uFF0C\u5982\u679C\u5728\u5FAA\u73AF\u4E2D\uFF0C\u5728\u5FAA\u73AF\u4E2D\uFF0C
 <span class="token operator">*</span> \u6BCF\u6B21\u5FAA\u73AF\u90FD\u4F1A\u521B\u5EFA\u65B0\u7684\u5B57\u7B26\u4E32\u5BF9\u8C61\uFF0C\u7136\u540E\u6254\u6389\u65E7\u7684\u5B57\u7B26\u4E32\u3002
 <span class="token operator">*</span> \u8FD9\u6837\uFF0C\u7EDD\u5927\u90E8\u5206\u5B57\u7B26\u4E32\u90FD\u662F\u4E34\u65F6\u5BF9\u8C61\uFF0C\u4E0D\u4F46\u6D6A\u8D39\u5185\u5B58\uFF0C\u8FD8\u4F1A\u5F71\u54CDGC\u6548\u7387
 <span class="token operator">*</span> \u4E3A\u9AD8\u6548\u62FC\u63A5\u5B57\u7B26\u4E32<span class="token class-name">Java</span>\u6807\u51C6\u5E93\u63D0\u4F9B\u4E86<span class="token class-name">StringBuilder</span>\uFF0C\u5B83\u662F\u4E00\u4E2A\u53EF\u53D8\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u9884\u5206\u914D\u7F13\u51B2\u533A
 <span class="token operator">*</span> \u5BF9\u4E8E\u666E\u901A\u7684\u5B57\u7B26\u4E32<span class="token operator">+</span>\u64CD\u4F5C\uFF0C\u5E76\u4E0D\u9700\u8981\u6211\u4EEC\u5C06\u5176\u6539\u5199\u4E3A<span class="token class-name">StringBuilder</span>\uFF0C
 <span class="token operator">*</span> \u56E0\u4E3A<span class="token class-name">Java</span>\u7F16\u8BD1\u5668\u5728\u7F16\u8BD1\u65F6\u5C31\u81EA\u52A8\u628A\u591A\u4E2A\u8FDE\u7EED\u7684<span class="token operator">+</span>\u64CD\u4F5C\u7F16\u7801\u4E3A<span class="token class-name">StringConcatFactory</span>\u7684\u64CD\u4F5C\u3002
 <span class="token operator">*</span> \u5728\u8FD0\u884C\u671F\uFF0C<span class="token class-name">StringConcatFactory</span>\u4F1A\u81EA\u52A8\u628A\u5B57\u7B26\u4E32\u8FDE\u63A5\u64CD\u4F5C\u4F18\u5316\u4E3A\u6570\u7EC4\u590D\u5236\u6216\u8005<span class="token class-name">StringBuilder</span>\u64CD\u4F5C
 <span class="token operator">*</span> <span class="token class-name">StringBuffer</span>\u901A\u8FC7\u540C\u6B65\u6765\u4FDD\u8BC1\u591A\u4E2A\u7EBF\u7A0B\u64CD\u4F5C<span class="token class-name">StringBuffer</span>\u4E5F\u662F\u5B89\u5168\u7684\uFF0C\u4F46\u662F\u540C\u6B65\u4F1A\u5E26\u6765\u6267\u884C\u901F\u5EA6\u7684\u4E0B\u964D
 <span class="token operator">*</span> <span class="token class-name">StringBuilder</span>\u548C<span class="token class-name">StringBuffer</span>\u63A5\u53E3\u5B8C\u5168\u76F8\u540C\uFF0C\u73B0\u5728\u5B8C\u5168\u6CA1\u6709\u5FC5\u8981\u4F7F\u7528<span class="token class-name">StringBuffer</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> lxl<span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringBuilderL</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuffer</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i \\<span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;s&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;good &quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;LXL&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;DD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u94FE\u5F0F\u64CD\u4F5C</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),Fs={id:"jdk\u4E0Ejre\u533A\u522B",tabindex:"-1"},As=n("a",{class:"header-anchor",href:"#jdk\u4E0Ejre\u533A\u522B","aria-hidden":"true"},"#",-1),_s=s(),Os={href:"https://www.cnblogs.com/bingyimeiling/p/10266949.html",target:"_blank",rel:"noopener noreferrer"},Ps=s("JDK\u4E0EJRE\u533A\u522B"),Ns=p(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#\u67E5\u770BJDK\u8DEF\u5F84 </span>
java -verbose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://qnimg.gisfsde.com/1362965-20190114161305916-1522316322.png" alt="img" loading="lazy"></p><h3 id="jdk-1" tabindex="-1"><a class="header-anchor" href="#jdk-1" aria-hidden="true">#</a> JDK</h3><p>\u200B JDK(Java SE Development Kit)\uFF0C<strong>Java\u6807\u51C6\u5F00\u53D1\u5305</strong>\uFF0C\u5B83\u63D0\u4F9B\u4E86\u7F16\u8BD1\u3001\u8FD0\u884CJava\u7A0B\u5E8F\u6240\u9700\u7684\u5404\u79CD\u5DE5\u5177\u548C\u8D44\u6E90\uFF0C\u5305\u62ECJava\u7F16\u8BD1\u5668\u3001Java\u8FD0\u884C\u65F6\u73AF\u5883\uFF0C\u4EE5\u53CA\u5E38\u7528\u7684Java\u7C7B\u5E93\u7B49\u3002</p><p><img src="http://qnimg.gisfsde.com/image-20220320112912275.png" alt="JDK" loading="lazy"></p><h3 id="jre" tabindex="-1"><a class="header-anchor" href="#jre" aria-hidden="true">#</a> JRE</h3><p>\u200B JRE( Java Runtime Environment) \u3001<strong>Java\u8FD0\u884C\u73AF\u5883</strong>\uFF0C\u7528\u4E8E\u89E3\u91CA\u6267\u884CJava\u7684\u5B57\u8282\u7801\u6587\u4EF6\u3002\u666E\u901A\u7528\u6237\u800C\u53EA\u9700\u8981\u5B89\u88C5 JRE\uFF08Java Runtime Environment\uFF09\u6765\u8FD0\u884C Java \u7A0B\u5E8F\u3002\u800C\u7A0B\u5E8F\u5F00\u53D1\u8005\u5FC5\u987B\u5B89\u88C5JDK\u6765\u7F16\u8BD1\u3001\u8C03\u8BD5\u7A0B\u5E8F\u3002</p><p><img src="http://qnimg.gisfsde.com/image-20220320113334848.png" alt="image-20220320113334848" loading="lazy"></p><h2 id="\u7CBE\u5EA6\u9057\u5931\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u7CBE\u5EA6\u9057\u5931\u95EE\u9898" aria-hidden="true">#</a> \u7CBE\u5EA6\u9057\u5931\u95EE\u9898</h2><p>\u200B float \u8FD8\u662Fdouble\u90FD\u662F\u6D6E\u70B9\u6570\uFF0C\u800C\u8BA1\u7B97\u673A\u662F\u4E8C\u8FDB\u5236\u7684\uFF0C\u6D6E\u70B9\u6570\u4F1A\u5931\u53BB\u4E00\u5B9A\u7684\u7CBE\u786E\u5EA6\uFF0C\u53EA\u80FD\u7528\u6765\u79D1\u5B66\u6216\u5DE5\u7A0B\u8BA1\u7B97\uFF0C\u4E0D\u80FD\u7528\u6765\u5546\u4E1A\u8BA1\u7B97\u3002\u6839\u672C\u539F\u56E0\u662F:\u5341\u8FDB\u5236\u503C\u901A\u5E38\u6CA1\u6709\u5B8C\u5168\u76F8\u540C\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u5F62\u5F0F;\u5341\u8FDB\u5236\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u5F62\u5F0F\u53EF\u80FD\u4E0D\u7CBE\u786E\u3002\u53EA\u80FD\u65E0\u9650\u63A5\u8FD1\u4E8E\u90A3\u4E2A\u503C</p><h3 id="bigdecimal" tabindex="-1"><a class="header-anchor" href="#bigdecimal" aria-hidden="true">#</a> BigDecimal</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">pers<span class="token punctuation">.</span>lxl<span class="token punctuation">.</span>mylearnproject<span class="token punctuation">.</span>javase<span class="token punctuation">.</span>coreclass</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>istack<span class="token punctuation">.</span>internal<span class="token punctuation">.</span></span><span class="token class-name">NotNull</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">RoundingMode</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token static">ROUND_CEILING</span></span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * Java\u5728java.math\u5305\u4E2D\u63D0\u4F9B\u7684API\u7C7BBigDecimal\uFF0C\u7528\u6765\u5BF9\u8D85\u8FC716\u4F4D\u6709\u6548\u4F4D\u7684\u6570\u8FDB\u884C\u7CBE\u786E\u7684\u8FD0\u7B97\u3002
 * \u53CC\u7CBE\u5EA6\u6D6E\u70B9\u578B\u53D8\u91CFdouble\u53EF\u4EE5\u5904\u740616\u4F4D\u6709\u6548\u6570\u3002\u5728\u5B9E\u9645\u5E94\u7528\u4E2D\uFF0C\u9700\u8981\u5BF9\u66F4\u5927\u6216\u8005\u66F4\u5C0F\u7684\u6570\u8FDB\u884C\u8FD0\u7B97\u548C\u5904\u7406\u3002
 * float\u548Cdouble\u53EA\u80FD\u7528\u6765\u505A\u79D1\u5B66\u8BA1\u7B97\u6216\u8005\u662F\u5DE5\u7A0B\u8BA1\u7B97\uFF0C\u5728\u5546\u4E1A\u8BA1\u7B97\u4E2D\u8981\u7528java.math.BigDecimal\u3002
 * BigDecimal\u6240\u521B\u5EFA\u7684\u662F\u5BF9\u8C61\uFF0C\u6211\u4EEC\u4E0D\u80FD\u4F7F\u7528\u4F20\u7EDF\u7684+\u3001-\u3001*\u3001/\u7B49\u7B97\u672F\u8FD0\u7B97\u7B26\u76F4\u63A5\u5BF9\u5176\u5BF9\u8C61\u8FDB\u884C\u6570\u5B66\u8FD0\u7B97\uFF0C\u800C\u5FC5\u987B\u8C03\u7528\u5176\u76F8\u5BF9\u5E94\u7684\u65B9\u6CD5\u3002
 * \u65B9\u6CD5\u4E2D\u7684\u53C2\u6570\u4E5F\u5FC5\u987B\u662FBigDecimal\u7684\u5BF9\u8C61\u3002\u6784\u9020\u5668\u662F\u7C7B\u7684\u7279\u6B8A\u65B9\u6CD5\uFF0C\u4E13\u95E8\u7528\u6765\u521B\u5EFA\u5BF9\u8C61\uFF0C\u7279\u522B\u662F\u5E26\u6709\u53C2\u6570\u7684\u5BF9\u8C61\u3002
 *
 * <span class="token keyword">@author</span> Administrator
 *
 * \u53C2\u8003\uFF1Ahttps://blog.csdn.net/qq_35868412/article/details/89029288
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BigDecimalL</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        \u7CBE\u5EA6\u9057\u5931\u95EE\u9898</span>
<span class="token comment">//        float \u8FD8\u662Fdouble\u90FD\u662F\u6D6E\u70B9\u6570\uFF0C\u800C\u8BA1\u7B97\u673A\u662F\u4E8C\u8FDB\u5236\u7684\uFF0C\u6D6E\u70B9\u6570\u4F1A\u5931\u53BB\u4E00\u5B9A\u7684\u7CBE\u786E\u5EA6\uFF0C\u53EA\u80FD\u7528\u6765\u79D1\u5B66\u6216\u5DE5\u7A0B\u8BA1\u7B97\uFF0C\u4E0D\u80FD\u7528\u6765\u5546\u4E1A\u8BA1\u7B97\u3002\u6839\u672C\u539F\u56E0\u662F:\u5341\u8FDB\u5236\u503C\u901A\u5E38\u6CA1\u6709\u5B8C\u5168\u76F8\u540C\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u5F62\u5F0F;\u5341\u8FDB\u5236\u6570\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u5F62\u5F0F\u53EF\u80FD\u4E0D\u7CBE\u786E\u3002\u53EA\u80FD\u65E0\u9650\u63A5\u8FD1\u4E8E\u90A3\u4E2A\u503C</span>
<span class="token comment">//        0.19999999999999998</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0.3</span> <span class="token operator">-</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//       0.020000000000000004</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0.2</span> <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        0.30000000000000004</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0.2</span> <span class="token operator">+</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        2.9999999999999996</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0.3</span> <span class="token operator">/</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u91D1\u878D\u9879\u76EE\u4E2D\u9700\u8981\u51C6\u786E\u8BA1\u7B97\uFF0C\u4E0D\u80FD\u6709\u7CBE\u5EA6\u9057\u5931\u95EE\u9898\uFF0C\u6240\u4EE5\u5546\u4E1A\u4F7F\u7528\u9700\u8981\u7528BigDecimal==============================</span>


<span class="token comment">//BigDecimal(int)       \u521B\u5EFA\u4E00\u4E2A\u5177\u6709\u53C2\u6570\u6240\u6307\u5B9A\u6574\u6570\u503C\u7684\u5BF9\u8C61\u3002</span>
<span class="token comment">//BigDecimal(double)   \u521B\u5EFA\u4E00\u4E2A\u5177\u6709\u53C2\u6570\u6240\u6307\u5B9A\u53CC\u7CBE\u5EA6\u503C\u7684\u5BF9\u8C61\u3002 //\u4E0D\u63A8\u8350\u4F7F\u7528</span>
<span class="token comment">//BigDecimal(long)    \u521B\u5EFA\u4E00\u4E2A\u5177\u6709\u53C2\u6570\u6240\u6307\u5B9A\u957F\u6574\u6570\u503C\u7684\u5BF9\u8C61\u3002</span>
<span class="token comment">//BigDecimal(String) \u521B\u5EFA\u4E00\u4E2A\u5177\u6709\u53C2\u6570\u6240\u6307\u5B9A\u4EE5\u5B57\u7B26\u4E32\u8868\u793A\u7684\u6570\u503C\u7684\u5BF9\u8C61\u3002//\u63A8\u8350\u4F7F\u7528</span>
<span class="token comment">//add(BigDecimal)        BigDecimal\u5BF9\u8C61\u4E2D\u7684\u503C\u76F8\u52A0\uFF0C\u7136\u540E\u8FD4\u56DE\u8FD9\u4E2A\u5BF9\u8C61\u3002</span>
<span class="token comment">//subtract(BigDecimal) BigDecimal\u5BF9\u8C61\u4E2D\u7684\u503C\u76F8\u51CF\uFF0C\u7136\u540E\u8FD4\u56DE\u8FD9\u4E2A\u5BF9\u8C61\u3002</span>
<span class="token comment">//multiply(BigDecimal)  BigDecimal\u5BF9\u8C61\u4E2D\u7684\u503C\u76F8\u4E58\uFF0C\u7136\u540E\u8FD4\u56DE\u8FD9\u4E2A\u5BF9\u8C61\u3002</span>
<span class="token comment">//divide(BigDecimal)     BigDecimal\u5BF9\u8C61\u4E2D\u7684\u503C\u76F8\u9664\uFF0C\u7136\u540E\u8FD4\u56DE\u8FD9\u4E2A\u5BF9\u8C61\u3002</span>
<span class="token comment">//toString()                \u5C06BigDecimal\u5BF9\u8C61\u7684\u6570\u503C\u8F6C\u6362\u6210\u5B57\u7B26\u4E32\u3002</span>
<span class="token comment">//doubleValue()          \u5C06BigDecimal\u5BF9\u8C61\u4E2D\u7684\u503C\u4EE5\u53CC\u7CBE\u5EA6\u6570\u8FD4\u56DE\u3002</span>
<span class="token comment">//floatValue()             \u5C06BigDecimal\u5BF9\u8C61\u4E2D\u7684\u503C\u4EE5\u5355\u7CBE\u5EA6\u6570\u8FD4\u56DE\u3002</span>
<span class="token comment">//longValue()             \u5C06BigDecimal\u5BF9\u8C61\u4E2D\u7684\u503C\u4EE5\u957F\u6574\u6570\u8FD4\u56DE\u3002</span>
<span class="token comment">//intValue()               \u5C06BigDecimal\u5BF9\u8C61\u4E2D\u7684\u503C\u4EE5\u6574\u6570\u8FD4\u56DE\u3002</span>
        <span class="token class-name">BigDecimal</span> bd1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;4264.24&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BigDecimal</span> bd2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;2132.1200&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BigDecimal</span> bd3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;213200&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BigDecimal</span> bd6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;4.0000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BigDecimal</span> bd7 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;3.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u52A0</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u52A0&quot;</span><span class="token operator">+</span>bd1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bd3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u51CF</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u51CF&quot;</span><span class="token operator">+</span>bd1<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>bd1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u4E58</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E58&quot;</span><span class="token operator">+</span>bd6<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>bd7<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        \u9664</span>
<span class="token comment">//        \u4E0D\u5206\u914D\u4FDD\u7559\u5C0F\u6570\u70B9\u4FDD\u7559\u4F4D\u6570\u7684\u975E\u6574\u9664\u8FD0\u7B97\u4F1A\u5BFC\u81F4\u62A5\u9519java.lang.ArithmeticException\uFF1ANon-terminating decimal expansion; no exact representable decimal result.</span>
<span class="token comment">//        System.out.println(bd1.divide(bd3));</span>
<span class="token comment">//        \u591A\u4F20\u5165\u4E24\u4E2A\u53C2\u6570\u5373\u53EF\u907F\u514D</span>
<span class="token comment">//       divide(BigDecimal\uFF0C\u4FDD\u7559\u5C0F\u6570\u70B9\u540E\u51E0\u4F4D\u5C0F\u6570\uFF0C\u820D\u5165\u6A21\u5F0F)</span>

<span class="token comment">//\u820D\u5165\u6A21\u5F0F</span>
<span class="token comment">//ROUND_CEILING    //\u5411\u6B63\u65E0\u7A77\u65B9\u5411\u820D\u5165</span>
<span class="token comment">//ROUND_DOWN    //\u5411\u96F6\u65B9\u5411\u820D\u5165</span>
<span class="token comment">//ROUND_FLOOR    //\u5411\u8D1F\u65E0\u7A77\u65B9\u5411\u820D\u5165</span>
<span class="token comment">//ROUND_HALF_DOWN    //\u5411\uFF08\u8DDD\u79BB\uFF09\u6700\u8FD1\u7684\u4E00\u8FB9\u820D\u5165\uFF0C\u9664\u975E\u4E24\u8FB9\uFF08\u7684\u8DDD\u79BB\uFF09\u662F\u76F8\u7B49,\u5982\u679C\u662F\u8FD9\u6837\uFF0C\u5411\u4E0B\u820D\u5165, \u4F8B\u59821.55 \u4FDD\u7559\u4E00\u4F4D\u5C0F\u6570\u7ED3\u679C\u4E3A1.5</span>
<span class="token comment">//ROUND_HALF_EVEN    //\u5411\uFF08\u8DDD\u79BB\uFF09\u6700\u8FD1\u7684\u4E00\u8FB9\u820D\u5165\uFF0C\u9664\u975E\u4E24\u8FB9\uFF08\u7684\u8DDD\u79BB\uFF09\u662F\u76F8\u7B49,\u5982\u679C\u662F\u8FD9\u6837\uFF0C\u5982\u679C\u4FDD\u7559\u4F4D\u6570\u662F\u5947\u6570\uFF0C\u4F7F\u7528ROUND_HALF_UP\uFF0C\u5982\u679C\u662F\u5076\u6570\uFF0C\u4F7F\u7528ROUND_HALF_DOWN</span>
<span class="token comment">//ROUND_HALF_UP    //\u5411\uFF08\u8DDD\u79BB\uFF09\u6700\u8FD1\u7684\u4E00\u8FB9\u820D\u5165\uFF0C\u9664\u975E\u4E24\u8FB9\uFF08\u7684\u8DDD\u79BB\uFF09\u662F\u76F8\u7B49,\u5982\u679C\u662F\u8FD9\u6837\uFF0C\u5411\u4E0A\u820D\u5165, 1.55\u4FDD\u7559\u4E00\u4F4D\u5C0F\u6570\u7ED3\u679C\u4E3A1.6,\u4E5F\u5C31\u662F\u6211\u4EEC\u5E38\u8BF4\u7684\u201C\u56DB\u820D\u4E94\u5165\u201D</span>
<span class="token comment">//ROUND_UNNECESSARY    //\u8BA1\u7B97\u7ED3\u679C\u662F\u7CBE\u786E\u7684\uFF0C\u4E0D\u9700\u8981\u820D\u5165\u6A21\u5F0F</span>
<span class="token comment">//ROUND_UP    //\u5411\u8FDC\u79BB0\u7684\u65B9\u5411\u820D\u5165</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u9664&quot;</span><span class="token operator">+</span>bd6<span class="token punctuation">.</span><span class="token function">divide</span><span class="token punctuation">(</span>bd7<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>ROUND_CEILING<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//scale()\u8868\u793A\u5C0F\u6570\u4F4D\u6570</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bd1<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bd2<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bd3<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//stripTrailingZeros()\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5C06\u4E00\u4E2ABigDecimal\u683C\u5F0F\u5316\u4E3A\u4E00\u4E2A\u76F8\u7B49\u7684\uFF0C\u4F46\u53BB\u6389\u4E86\u672B\u5C3E0\u7684BigDecimal</span>
        <span class="token class-name">BigDecimal</span> d1 <span class="token operator">=</span> bd1<span class="token punctuation">.</span><span class="token function">stripTrailingZeros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BigDecimal</span> d2 <span class="token operator">=</span> bd2<span class="token punctuation">.</span><span class="token function">stripTrailingZeros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BigDecimal</span> d3 <span class="token operator">=</span> bd3<span class="token punctuation">.</span><span class="token function">stripTrailingZeros</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//scale()\u8FD4\u56DE\u8D1F\u6570\uFF0C\u4F8B\u5982\uFF0C-2\uFF0C\u8868\u793A\u8FD9\u4E2A\u6570\u662F\u4E2A\u6574\u6570\uFF0C\u5E76\u4E14\u672B\u5C3E\u67092\u4E2A0</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d1<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d2<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d3<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u9664\u6CD5\u65F6\uFF0C\u5B58\u5728\u65E0\u6CD5\u9664\u5C3D\u7684\u60C5\u51B5\uFF0C\u8FD9\u65F6\uFF0C\u5C31\u5FC5\u987B\u6307\u5B9A\u7CBE\u5EA6\u4EE5\u53CA\u5982\u4F55\u8FDB\u884C\u622A\u65AD,\u8FD8\u53EF\u540C\u4E8B\u6C42\u4F59\u6570</span>
        <span class="token comment">//\u56DB\u820D\u4E94\u5165</span>
        <span class="token class-name">BigDecimal</span> bd4 <span class="token operator">=</span> bd1<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token class-name">RoundingMode</span><span class="token punctuation">.</span>HALF_UP<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u76F4\u63A5\u622A\u65AD</span>
        <span class="token class-name">BigDecimal</span> bd5 <span class="token operator">=</span> bd1<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token class-name">RoundingMode</span><span class="token punctuation">.</span>DOWN<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//divideAndRemainder()\u65B9\u6CD5\u65F6\uFF0C\u8FD4\u56DE\u7684\u6570\u7EC4\u5305\u542B\u4E24\u4E2ABigDecimal\uFF0C\u5206\u522B\u662F\u5546\u548C\u4F59\u6570\uFF0C</span>
        <span class="token comment">// \u5176\u4E2D\u5546\u603B\u662F\u6574\u6570\uFF0C\u4F59\u6570\u4E0D\u4F1A\u5927\u4E8E\u9664\u6570\u3002\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u8FD9\u4E2A\u65B9\u6CD5\u5224\u65AD\u4E24\u4E2ABigDecimal\u662F\u5426\u662F\u6574\u6570\u500D\u6570</span>
        <span class="token class-name">BigDecimal</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dr <span class="token operator">=</span> bd1<span class="token punctuation">.</span><span class="token function">divideAndRemainder</span><span class="token punctuation">(</span>bd2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">signum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;bd1\u662Fbd2\u7684\u6574&quot;</span> <span class="token operator">+</span> dr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;\u500D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//\u5728\u6BD4\u8F83\u4E24\u4E2ABigDecimal\u7684\u503C\u662F\u5426\u76F8\u7B49\u65F6\uFF0C\u8981\u7279\u522B\u6CE8\u610F\uFF0C\u4F7F\u7528equals()\u65B9\u6CD5\u4E0D\u4F46\u8981\u6C42\u4E24\u4E2ABigDecimal\u7684\u503C\u76F8\u7B49\uFF0C\u8FD8\u8981\u6C42\u5B83\u4EEC\u7684scale()\u76F8\u7B49</span>
        <span class="token comment">//\u5FC5\u987B\u4F7F\u7528compareTo()\u65B9\u6CD5\u6765\u6BD4\u8F83\uFF0C\u5B83\u6839\u636E\u4E24\u4E2A\u503C\u7684\u5927\u5C0F\u5206\u522B\u8FD4\u56DE\u8D1F\u6570\u3001\u6B63\u6570\u548C0\uFF0C\u5206\u522B\u8868\u793A\u5C0F\u4E8E\u3001\u5927\u4E8E\u548C\u7B49\u4E8E</span>


<span class="token comment">//        JDK\u7684\u63CF\u8FF0\uFF1A1\u3001\u53C2\u6570\u7C7B\u578B\u4E3Adouble\u7684\u6784\u9020\u65B9\u6CD5\u7684\u7ED3\u679C\u6709\u4E00\u5B9A\u7684\u4E0D\u53EF\u9884\u77E5\u6027\u3002\u6709\u4EBA\u53EF\u80FD\u8BA4\u4E3A\u5728Java\u4E2D\u5199\u5165newBigDecimal(0.1)\u6240\u521B\u5EFA\u7684BigDecimal\u6B63\u597D\u7B49\u4E8E 0.1\uFF08\u975E\u6807\u5EA6\u503C 1\uFF0C\u5176\u6807\u5EA6\u4E3A 1\uFF09\uFF0C</span>
<span class="token comment">//        \u4F46\u662F\u5B83\u5B9E\u9645\u4E0A\u7B49\u4E8E0.1000000000000000055511151231257827021181583404541015625\u3002\u8FD9\u662F\u56E0\u4E3A0.1\u65E0\u6CD5\u51C6\u786E\u5730\u8868\u793A\u4E3A double\uFF08\u6216\u8005\u8BF4\u5BF9\u4E8E\u8BE5\u60C5\u51B5\uFF0C\u4E0D\u80FD\u8868\u793A\u4E3A\u4EFB\u4F55\u6709\u9650\u957F\u5EA6\u7684\u4E8C\u8FDB\u5236\u5C0F\u6570\uFF09\u3002</span>
<span class="token comment">//        \u8FD9\u6837\uFF0C\u4F20\u5165\u5230\u6784\u9020\u65B9\u6CD5\u7684\u503C\u4E0D\u4F1A\u6B63\u597D\u7B49\u4E8E 0.1\uFF08\u867D\u7136\u8868\u9762\u4E0A\u7B49\u4E8E\u8BE5\u503C\uFF09\u3002</span>
<span class="token comment">//        2\u3001\u53E6\u4E00\u65B9\u9762\uFF0CString \u6784\u9020\u65B9\u6CD5\u662F\u5B8C\u5168\u53EF\u9884\u77E5\u7684\uFF1A\u5199\u5165 newBigDecimal(&quot;0.1&quot;) \u5C06\u521B\u5EFA\u4E00\u4E2A BigDecimal\uFF0C\u5B83\u6B63\u597D\u7B49\u4E8E\u9884\u671F\u7684 0.1\u3002\u56E0\u6B64\uFF0C\u6BD4\u8F83\u800C\u8A00\uFF0C\u901A\u5E38\u5EFA\u8BAE\u4F18\u5148\u4F7F\u7528String\u6784\u9020\u65B9\u6CD5</span>
<span class="token comment">//        \u5F53double\u5FC5\u987B\u7528\u4F5CBigDecimal\u7684\u6E90\u65F6\uFF0C\u8BF7\u4F7F\u7528Double.toString(double)\u8F6C\u6210String\uFF0C\u7136\u540E\u4F7F\u7528String\u6784\u9020\u65B9\u6CD5\uFF0C\u6216\u4F7F\u7528BigDecimal\u7684\u9759\u6001\u65B9\u6CD5valueOf</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="biginteger" tabindex="-1"><a class="header-anchor" href="#biginteger" aria-hidden="true">#</a> BigInteger</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">pers<span class="token punctuation">.</span>lxl<span class="token punctuation">.</span>mylearnproject<span class="token punctuation">.</span>javase<span class="token punctuation">.</span>coreclass</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigInteger</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**CPU\u539F\u751F\u63D0\u4F9B\u7684\u6574\u578B\u6700\u5927\u8303\u56F4\u662F64\u4F4Dlong\u578B\u6574\u6570
 * \u5982\u679C\u6211\u4EEC\u4F7F\u7528\u7684\u6574\u6570\u8303\u56F4\u8D85\u8FC7\u4E86long\u578B\u600E\u4E48\u529E\uFF1F\u8FD9\u4E2A\u65F6\u5019\uFF0C\u5C31\u53EA\u80FD\u7528\u8F6F\u4EF6\u6765\u6A21\u62DF\u4E00\u4E2A\u5927\u6574\u6570\u3002
 * java.math.BigInteger\u5C31\u662F\u7528\u6765\u8868\u793A\u4EFB\u610F\u5927\u5C0F\u7684\u6574\u6570\u3002
 * BigInteger\u5185\u90E8\u7528\u4E00\u4E2Aint[]\u6570\u7EC4\u6765\u6A21\u62DF\u4E00\u4E2A\u975E\u5E38\u5927\u7684\u6574\u6570\uFF1A
 * <span class="token keyword">@author</span> Administrator*/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BigIntegerL</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BigInteger</span> bi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token string">&quot;12131231231233&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BigInteger</span> bi1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token string">&quot;121321211111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bi<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//BigInteger\u505A\u8FD0\u7B97\u7684\u65F6\u5019\uFF0C\u53EA\u80FD\u4F7F\u7528\u5B9E\u4F8B\u65B9\u6CD5,\u548Clong\u578B\u6574\u6570\u8FD0\u7B97\u6BD4\uFF0CBigInteger\u4E0D\u4F1A\u6709\u8303\u56F4\u9650\u5236\uFF0C\u4F46\u7F3A\u70B9\u662F\u901F\u5EA6\u6BD4\u8F83\u6162\u3002</span>
        <span class="token class-name">BigInteger</span> sum <span class="token operator">=</span> bi<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bi1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*\u8F6C\u6362\u4E3Abyte\uFF1AbyteValue()
         \u8F6C\u6362\u4E3Ashort\uFF1AshortValue()
         \u8F6C\u6362\u4E3Aint\uFF1AintValue()
         \u8F6C\u6362\u4E3Along\uFF1AlongValue()
         \u8F6C\u6362\u4E3Afloat\uFF1AfloatValue()
         \u8F6C\u6362\u4E3Adouble\uFF1AdoubleValue()
         \u901A\u8FC7\u4E0A\u8FF0\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u628ABigInteger\u8F6C\u6362\u6210\u57FA\u672C\u7C7B\u578B\u3002
         \u5982\u679CBigInteger\u8868\u793A\u7684\u8303\u56F4\u8D85\u8FC7\u4E86\u57FA\u672C\u7C7B\u578B\u7684\u8303\u56F4\uFF0C
         \u8F6C\u6362\u65F6\u5C06\u4E22\u5931\u9AD8\u4F4D\u4FE1\u606F\uFF0C\u5373\u7ED3\u679C\u4E0D\u4E00\u5B9A\u662F\u51C6\u786E\u7684\u3002\u5982\u679C\u9700\u8981\u51C6\u786E\u5730\u8F6C\u6362\u6210\u57FA\u672C\u7C7B\u578B\uFF0C
         \u53EF\u4EE5\u4F7F\u7528intValueExact()\u3001longValueExact()\u7B49\u65B9\u6CD5\uFF0C\u5728\u8F6C\u6362\u65F6\u5982\u679C\u8D85\u51FA\u8303\u56F4\uFF0C
         \u5C06\u76F4\u63A5\u629B\u51FAArithmeticException\u5F02\u5E38
         \u5982\u679CBigInteger\u7684\u503C\u751A\u81F3\u8D85\u8FC7\u4E86float\u7684\u6700\u5927\u8303\u56F4\uFF083.4x1038\uFF09\uFF0C\u90A3\u4E48\u8FD4\u56DE\u7684float\u4E3AInfinity
         \u5176\u4ED6\u5E38\u7528\u65B9\u6CD5\uFF1A

        BigInteger abs()  \u8FD4\u56DE\u5927\u6574\u6570\u7684\u7EDD\u5BF9\u503C
        BigInteger add(BigInteger val) \u8FD4\u56DE\u4E24\u4E2A\u5927\u6574\u6570\u7684\u548C
        BigInteger and(BigInteger val)  \u8FD4\u56DE\u4E24\u4E2A\u5927\u6574\u6570\u7684\u6309\u4F4D\u4E0E\u7684\u7ED3\u679C
        BigInteger andNot(BigInteger val) \u8FD4\u56DE\u4E24\u4E2A\u5927\u6574\u6570\u4E0E\u975E\u7684\u7ED3\u679C
        BigInteger divide(BigInteger val)  \u8FD4\u56DE\u4E24\u4E2A\u5927\u6574\u6570\u7684\u5546
        BigInteger gcd(BigInteger val)  \u8FD4\u56DE\u5927\u6574\u6570\u7684\u6700\u5927\u516C\u7EA6\u6570
        BigInteger max(BigInteger val) \u8FD4\u56DE\u4E24\u4E2A\u5927\u6574\u6570\u7684\u6700\u5927\u8005
        BigInteger min(BigInteger val) \u8FD4\u56DE\u4E24\u4E2A\u5927\u6574\u6570\u7684\u6700\u5C0F\u8005
        BigInteger mod(BigInteger val) \u7528\u5F53\u524D\u5927\u6574\u6570\u5BF9val\u6C42\u6A21
        BigInteger multiply(BigInteger val) \u8FD4\u56DE\u4E24\u4E2A\u5927\u6574\u6570\u7684\u79EF
        BigInteger negate() \u8FD4\u56DE\u5F53\u524D\u5927\u6574\u6570\u7684\u76F8\u53CD\u6570
        BigInteger not() \u8FD4\u56DE\u5F53\u524D\u5927\u6574\u6570\u7684\u975E
        BigInteger or(BigInteger val) \u8FD4\u56DE\u4E24\u4E2A\u5927\u6574\u6570\u7684\u6309\u4F4D\u6216
        BigInteger pow(int exponent) \u8FD4\u56DE\u5F53\u524D\u5927\u6574\u6570\u7684exponent\u6B21\u65B9
        BigInteger remainder(BigInteger val) \u8FD4\u56DE\u5F53\u524D\u5927\u6574\u6570\u9664\u4EE5val\u7684\u4F59\u6570
        BigInteger leftShift(int n) \u5C06\u5F53\u524D\u5927\u6574\u6570\u5DE6\u79FBn\u4F4D\u540E\u8FD4\u56DE
        BigInteger rightShift(int n) \u5C06\u5F53\u524D\u5927\u6574\u6570\u53F3\u79FBn\u4F4D\u540E\u8FD4\u56DE
        BigInteger subtract(BigInteger val)\u8FD4\u56DE\u4E24\u4E2A\u5927\u6574\u6570\u76F8\u51CF\u7684\u7ED3\u679C
        byte[] toByteArray(BigInteger val)\u5C06\u5927\u6574\u6570\u8F6C\u6362\u6210\u4E8C\u8FDB\u5236\u53CD\u7801\u4FDD\u5B58\u5728byte\u6570\u7EC4\u4E2D
        String toString() \u5C06\u5F53\u524D\u5927\u6574\u6570\u8F6C\u6362\u6210\u5341\u8FDB\u5236\u7684\u5B57\u7B26\u4E32\u5F62\u5F0F
        BigInteger xor(BigInteger val) \u8FD4\u56DE\u4E24\u4E2A\u5927\u6574\u6570\u7684\u5F02\u6216
         */</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),Ds={id:"\u6CE8\u89E3-1",tabindex:"-1"},Ls=n("a",{class:"header-anchor",href:"#\u6CE8\u89E3-1","aria-hidden":"true"},"#",-1),Ms=s(),Rs={href:"https://blog.csdn.net/yuzongtao/article/details/83306182",target:"_blank",rel:"noopener noreferrer"},Vs=s("\u6CE8\u89E3"),Ks=p('<h3 id="\u6CE8\u89E3\u7528\u9014" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u89E3\u7528\u9014" aria-hidden="true">#</a> \u6CE8\u89E3\u7528\u9014</h3><p><strong>1\uFF0C\u4EC0\u4E48\u662F\u6CE8\u89E3</strong></p><p>\u6CE8\u89E3\u4E5F\u53EB<strong>\u5143\u6570\u636E</strong>\uFF0C\u4F8B\u5982\u6211\u4EEC\u5E38\u89C1\u7684@Override\u548C@Deprecated\uFF0C\u6CE8\u89E3\u662FJDK1.5\u7248\u672C\u5F00\u59CB\u5F15\u5165\u7684\u4E00\u4E2A\u7279\u6027\uFF0C\u7528\u4E8E\u5BF9\u4EE3\u7801\u8FDB\u884C\u8BF4\u660E\uFF0C\u53EF\u4EE5\u5BF9\u5305\u3001\u7C7B\u3001\u63A5\u53E3\u3001\u5B57\u6BB5\u3001\u65B9\u6CD5\u53C2\u6570\u3001\u5C40\u90E8\u53D8\u91CF\u7B49\u8FDB\u884C\u6CE8\u89E3</p><p>**\u6CE8\u89E3\u7C7B\u578B:**\u4E00\u822C\u5E38\u7528\u7684\u6CE8\u89E3\u53EF\u4EE5\u5206\u4E3A\u4E09\u7C7B\uFF1A</p><ol><li><strong>\u4E00\u7C7B\u662FJava\u81EA\u5E26\u7684\u6807\u51C6\u6CE8\u89E3</strong>\uFF0C\u5305\u62EC@Override\uFF08\u6807\u660E\u91CD\u5199\u67D0\u4E2A\u65B9\u6CD5\uFF09\u3001@Deprecated\uFF08\u6807\u660E\u67D0\u4E2A\u7C7B\u6216\u65B9\u6CD5\u8FC7\u65F6\uFF09\u548C@SuppressWarnings\uFF08\u6807\u660E\u8981\u5FFD\u7565\u7684\u8B66\u544A\uFF09\uFF0C\u4F7F\u7528\u8FD9\u4E9B\u6CE8\u89E3\u540E\u7F16\u8BD1\u5668\u5C31\u4F1A\u8FDB\u884C\u68C0\u67E5\u3002</li><li><strong>\u4E00\u7C7B\u4E3A\u5143\u6CE8\u89E3\uFF0C\u5143\u6CE8\u89E3\u662F\u7528\u4E8E\u5B9A\u4E49\u6CE8\u89E3\u7684\u6CE8\u89E3</strong>\uFF0C\u5305\u62EC@Retention\uFF08\u6807\u660E\u6CE8\u89E3\u88AB\u4FDD\u7559\u7684\u9636\u6BB5\uFF09\u3001@Target\uFF08\u6807\u660E\u6CE8\u89E3\u4F7F\u7528\u7684\u8303\u56F4\uFF09\u3001@Inherited\uFF08\u6807\u660E\u6CE8\u89E3\u53EF\u7EE7\u627F\uFF09\u3001@Documented\uFF08\u6807\u660E\u662F\u5426\u751F\u6210javadoc\u6587\u6863\uFF09</li><li><strong>\u4E00\u7C7B\u4E3A\u81EA\u5B9A\u4E49\u6CE8\u89E3</strong>\uFF0C\u53EF\u4EE5\u6839\u636E\u81EA\u5DF1\u7684\u9700\u6C42\u5B9A\u4E49\u6CE8\u89E3</li></ol><p><strong>\u6CE8\u89E3\u4E0Exml\u533A\u522B\uFF1A</strong></p><p>\u6CE8\u89E3\uFF1A\u662F\u4E00\u79CD\u5206\u6563\u5F0F\u7684\u5143\u6570\u636E\uFF0C\u4E0E\u6E90\u4EE3\u7801\u7D27\u7ED1\u5B9A\u8026\u5408\u3002</p><p>xml\uFF1A<strong>\u662F\u4E00\u79CD\u96C6\u4E2D\u5F0F\u7684\u5143\u6570\u636E\uFF0C\u4E0E\u6E90\u4EE3\u7801\u65E0\u7ED1\u5B9A</strong></p><p>\u5F53\u7136\u7F51\u4E0A\u5B58\u5728\u5404\u79CDXML\u4E0E\u6CE8\u89E3\u7684\u8FA9\u8BBA\u54EA\u4E2A\u66F4\u597D\uFF0C\u8FD9\u91CC\u4E0D\u4F5C\u8BC4\u8BBA\u548C\u4ECB\u7ECD\uFF0C\u4E3B\u8981\u4ECB\u7ECD\u4E00\u4E0B<strong>\u6CE8\u89E3\u7684\u4E3B\u8981\u7528\u9014</strong>:</p><ol><li><strong>\u751F\u6210\u6587\u6863</strong>\uFF0C\u901A\u8FC7\u4EE3\u7801\u91CC\u6807\u8BC6\u7684\u5143\u6570\u636E\u751F\u6210javadoc\u6587\u6863\u3002</li><li><strong>\u7F16\u8BD1\u68C0\u67E5</strong>\uFF0C\u901A\u8FC7\u4EE3\u7801\u91CC\u6807\u8BC6\u7684\u5143\u6570\u636E\u8BA9\u7F16\u8BD1\u5668\u5728\u7F16\u8BD1\u671F\u95F4\u8FDB\u884C\u68C0\u67E5\u9A8C\u8BC1\u3002</li><li><strong>\u7F16\u8BD1\u65F6\u52A8\u6001\u5904\u7406</strong>\uFF0C\u7F16\u8BD1\u65F6\u901A\u8FC7\u4EE3\u7801\u91CC\u6807\u8BC6\u7684\u5143\u6570\u636E\u52A8\u6001\u5904\u7406\uFF0C\u4F8B\u5982\u52A8\u6001\u751F\u6210\u4EE3\u7801\u3002</li><li><strong>\u8FD0\u884C\u65F6\u52A8\u6001\u5904\u7406</strong>\uFF0C\u8FD0\u884C\u65F6\u901A\u8FC7\u4EE3\u7801\u91CC\u6807\u8BC6\u7684\u5143\u6570\u636E\u52A8\u6001\u5904\u7406\uFF0C\u4F8B\u5982\u4F7F\u7528\u53CD\u5C04\u6CE8\u5165\u5B9E\u4F8B</li></ol><h3 id="\u6CE8\u89E3\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u89E3\u4F5C\u7528\u57DF" aria-hidden="true">#</a> \u6CE8\u89E3\u4F5C\u7528\u57DF</h3><ol><li>@Target({ElementType.TYPE}) //Class,interface,enum</li><li>@Target({ElementType.METHOD})</li><li>@Target({ElementType.FIELD})</li><li>@Target({ElementType.PARAMETER})</li></ol><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><h3 id="\u6CE8\u89E3\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u89E3\u539F\u7406" aria-hidden="true">#</a> \u6CE8\u89E3\u539F\u7406</h3><h3 id="\u5B9E\u9645\u8FD0\u7528\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u9645\u8FD0\u7528\u793A\u4F8B" aria-hidden="true">#</a> \u5B9E\u9645\u8FD0\u7528\u793A\u4F8B</h3><h4 id="excel" tabindex="-1"><a class="header-anchor" href="#excel" aria-hidden="true">#</a> @Excel</h4>',16),Js=n("p",null,"\u53C2\u8003\u8D44\u6E90\uFF1A",-1),zs=s("1."),Hs={href:"https://blog.csdn.net/xushiyu1996818/article/details/91983557",target:"_blank",rel:"noopener noreferrer"},Us=s("https://blog.csdn.net/xushiyu1996818/article/details/91983557");function Qs(Ws,Xs){const a=o("ExternalLinkIcon");return c(),l("div",null,[n("blockquote",null,[u,n("p",null,[k,r,d,m,v,b,n("a",h,[g,t(a)]),f,y])]),w,n("h2",S,[x,C,n("a",j,[q,t(a)])]),B,n("h2",E,[T,I,n("a",F,[A,t(a)])]),_,n("p",null,[n("a",O,[P,t(a)])]),N,D,L,M,R,n("p",null,[V,n("a",K,[J,t(a)]),z,H,U]),n("p",null,[Q,n("a",W,[X,t(a)]),Y,n("a",G,[Z,t(a)]),$,nn]),sn,an,tn,pn,en,n("h3",on,[cn,ln,n("a",un,[kn,t(a)])]),rn,n("p",null,[dn,n("a",mn,[vn,t(a)])]),bn,n("p",null,[n("a",hn,[gn,t(a)])]),fn,n("p",null,[yn,n("a",wn,[Sn,t(a)])]),xn,n("p",null,[n("a",Cn,[jn,t(a)])]),qn,n("h2",Bn,[En,Tn,n("a",In,[Fn,t(a)])]),An,n("h2",_n,[On,Pn,n("a",Nn,[Dn,t(a)])]),Ln,n("h1",Mn,[Rn,Vn,n("a",Kn,[Jn,t(a)])]),zn,n("p",null,[Hn,n("a",Un,[Qn,t(a)]),Wn,n("a",Xn,[Yn,t(a)]),Gn]),Zn,$n,ns,n("p",null,[ss,n("a",as,[ts,t(a)]),ps]),es,n("h3",os,[cs,ls,n("a",is,[us,t(a)])]),ks,n("h3",rs,[ds,ms,n("a",vs,[bs,t(a)])]),hs,n("p",null,[gs,n("a",fs,[ys,t(a)]),ws]),n("p",null,[Ss,n("a",xs,[Cs,t(a)]),js,n("a",qs,[Bs,t(a)]),Es,Ts]),Is,n("h2",Fs,[As,_s,n("a",Os,[Ps,t(a)])]),Ns,n("h2",Ds,[Ls,Ms,n("a",Rs,[Vs,t(a)])]),Ks,n("blockquote",null,[Js,n("p",null,[zs,n("a",Hs,[Us,t(a)])])])])}var Zs=e(i,[["render",Qs],["__file","Java.html.vue"]]);export{Zs as default};
